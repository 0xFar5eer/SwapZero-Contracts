{
	"id": "0a70b18b5695f0b7dc85f1a484a7d70e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"azero-swap-contracts/contracts/szERC1155.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nimport \"./openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\n\ncontract szERC1155 is ERC1155Supply {\n\n    string contractName = \"SwapZero\";\n    string contractSymbol = \"SWZ\";\n    string urlPrefix;\n\n    constructor()\n        ERC1155(\"\") \n    {\n    }\n\n    function name()\n        external\n        view\n        returns (string memory)\n    {\n        return contractName;\n    }\n\n    function symbol()\n        external\n        view\n        returns (string memory)\n    {\n        return contractSymbol;\n    }\n\n    function decimals()\n        external\n        pure\n        returns (uint256)\n    {\n        return 18;\n    }\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155Supply.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = _totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    _totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_7\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_24)\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n  swap1\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:141   */\ntag_23:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_27:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_28:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_29:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_31\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_33\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_34:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_35:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_38:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1238:1618   */\ntag_13:\n    /* \"#utility.yul\":1317:1318   */\n  0x01\n    /* \"#utility.yul\":1313:1325   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1360:1372   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1381:1442   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1435:1439   */\n  0x7f\n    /* \"#utility.yul\":1427:1433   */\n  dup3\n    /* \"#utility.yul\":1423:1440   */\n  and\n    /* \"#utility.yul\":1413:1440   */\n  swap2\n  pop\n    /* \"#utility.yul\":1381:1442   */\ntag_40:\n    /* \"#utility.yul\":1488:1490   */\n  0x20\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1477:1491   */\n  lt\n    /* \"#utility.yul\":1457:1475   */\n  dup2\n    /* \"#utility.yul\":1454:1492   */\n  sub\n    /* \"#utility.yul\":1451:1612   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1534:1544   */\n  0x4e487b71\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1525:1545   */\n  shl\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1515:1546   */\n  mstore\n    /* \"#utility.yul\":1569:1573   */\n  0x22\n    /* \"#utility.yul\":1566:1567   */\n  0x04\n    /* \"#utility.yul\":1559:1574   */\n  mstore\n    /* \"#utility.yul\":1597:1601   */\n  0x24\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1587:1602   */\n  revert\n    /* \"#utility.yul\":1451:1612   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1238:1618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_24:\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      dup4\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8240:8261   */\n      mstore\n        /* \"#utility.yul\":8297:8299   */\n      0x2b\n        /* \"#utility.yul\":8277:8295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8270:8300   */\n      mstore\n        /* \"#utility.yul\":8336:8370   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8316:8334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8309:8371   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8387:8405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8380:8421   */\n      mstore\n        /* \"#utility.yul\":8438:8457   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      dup6\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      eq\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9055:9057   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9037:9058   */\n      mstore\n        /* \"#utility.yul\":9094:9096   */\n      0x32\n        /* \"#utility.yul\":9074:9092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9067:9097   */\n      mstore\n        /* \"#utility.yul\":9133:9167   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9113:9131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9106:9168   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9184:9202   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9177:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9261   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_55\n        /* \"#utility.yul\":8853:9267   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n    tag_75:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_79\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9456:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9515   */\n      0x29\n        /* \"#utility.yul\":9493:9511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9486:9516   */\n      mstore\n        /* \"#utility.yul\":9552:9586   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9532:9550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9525:9587   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9603:9621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9596:9635   */\n      mstore\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9272:9677   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_15\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      swap4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_104\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      dup6\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      eq\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x29\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10449   */\n      mstore\n        /* \"#utility.yul\":10466:10485   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_55\n        /* \"#utility.yul\":10086:10491   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n    tag_111:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_115\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10698:10700   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10680:10701   */\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x28\n        /* \"#utility.yul\":10717:10735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10710:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10810   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10756:10774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10749:10811   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10820:10858   */\n      mstore\n        /* \"#utility.yul\":10875:10894   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10496:10900   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_145\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_104:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n      sub\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12527:12529   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12509:12530   */\n      mstore\n        /* \"#utility.yul\":12566:12568   */\n      0x29\n        /* \"#utility.yul\":12546:12564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12539:12569   */\n      mstore\n        /* \"#utility.yul\":12605:12639   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12585:12603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12578:12640   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12656:12674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12649:12688   */\n      mstore\n        /* \"#utility.yul\":12705:12724   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12325:12730   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_153:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_156\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_157\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_158\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_157\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_160:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup9\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_162\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup5\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12909:12934   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup2\n      add\n        /* \"#utility.yul\":12943:12977   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12882:12900   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_174\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_177\n      swap2\n      dup2\n      add\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      sub\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15136:15138   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15118:15139   */\n      mstore\n        /* \"#utility.yul\":15175:15177   */\n      0x34\n        /* \"#utility.yul\":15155:15173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15148:15178   */\n      mstore\n        /* \"#utility.yul\":15214:15248   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15194:15212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15187:15249   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15265:15283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15258:15308   */\n      mstore\n        /* \"#utility.yul\":15325:15344   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14934:15350   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_194\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16474:16719  returns (... */\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_157:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n      swap2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n      swap2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_204\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_207\n      swap2\n      dup2\n      add\n      swap1\n      tag_178\n      jump\t// in\n    tag_207:\n      0x01\n    tag_206:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_208\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_208:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_192\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_194\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_221:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_232:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_234:\n        /* \"#utility.yul\":360:389   */\n      tag_235\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_221\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_222:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_238:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_240:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_241\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_222\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_223:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_246:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_246)\n    tag_248:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_249:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_29:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_241\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":2098:2225   */\n    tag_86:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_224:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_255\n      tag_86\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_225:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_258\n      tag_86\n      jump\t// in\n    tag_258:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_226:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_260:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_261\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_225\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_262\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_224\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_263:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_264:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_264)\n    tag_266:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_227:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_268:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_270\n      tag_86\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_271\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_224\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_272:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_32:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_274:\n        /* \"#utility.yul\":4240:4269   */\n      tag_275\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_221\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_276\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_221\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_277:\n        /* \"#utility.yul\":4480:4541   */\n      tag_278\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_226\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_279:\n        /* \"#utility.yul\":4662:4725   */\n      tag_280\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_281:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_282\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_227\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_36:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_284:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_285:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_286:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_287\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_225\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_288\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_224\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_289:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_290:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_293\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_221\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_290)\n    tag_292:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_294:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_295\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_226\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_228:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_297:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_297)\n    tag_299:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_39:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_241\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_228\n      jump\t// in\n        /* \"#utility.yul\":6828:7175   */\n    tag_42:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6954:6956   */\n      0x40\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6933:6940   */\n      dup6\n        /* \"#utility.yul\":6929:6952   */\n      sub\n        /* \"#utility.yul\":6925:6957   */\n      slt\n        /* \"#utility.yul\":6922:6974   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":6922:6974   */\n    tag_303:\n        /* \"#utility.yul\":6993:7022   */\n      tag_304\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":6993:7022   */\n      tag_221\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6983:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7075   */\n      add\n        /* \"#utility.yul\":7044:7076   */\n      calldataload\n        /* \"#utility.yul\":7119:7124   */\n      dup1\n        /* \"#utility.yul\":7112:7125   */\n      iszero\n        /* \"#utility.yul\":7105:7126   */\n      iszero\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7127   */\n      eq\n        /* \"#utility.yul\":7085:7145   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7138:7139   */\n      dup1\n        /* \"#utility.yul\":7131:7143   */\n      revert\n        /* \"#utility.yul\":7085:7145   */\n    tag_305:\n        /* \"#utility.yul\":7164:7169   */\n      dup1\n        /* \"#utility.yul\":7154:7169   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7180:7440   */\n    tag_46:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_307:\n        /* \"#utility.yul\":7348:7377   */\n      tag_308\n        /* \"#utility.yul\":7367:7376   */\n      dup4\n        /* \"#utility.yul\":7348:7377   */\n      tag_221\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7338:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7396:7434   */\n      tag_309\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"#utility.yul\":7419:7428   */\n      dup5\n        /* \"#utility.yul\":7415:7433   */\n      add\n        /* \"#utility.yul\":7396:7434   */\n      tag_221\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7386:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7180:7440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:8051   */\n    tag_51:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7565:7571   */\n      0x00\n        /* \"#utility.yul\":7573:7579   */\n      dup1\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7634:7637   */\n      0xa0\n        /* \"#utility.yul\":7622:7631   */\n      dup7\n        /* \"#utility.yul\":7613:7620   */\n      dup9\n        /* \"#utility.yul\":7609:7632   */\n      sub\n        /* \"#utility.yul\":7605:7638   */\n      slt\n        /* \"#utility.yul\":7602:7655   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7602:7655   */\n    tag_311:\n        /* \"#utility.yul\":7674:7703   */\n      tag_312\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7674:7703   */\n      tag_221\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7664:7703   */\n      swap5\n      pop\n        /* \"#utility.yul\":7722:7760   */\n      tag_313\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup8\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7722:7760   */\n      tag_221\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7712:7760   */\n      swap4\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x40\n        /* \"#utility.yul\":7796:7805   */\n      dup7\n        /* \"#utility.yul\":7792:7810   */\n      add\n        /* \"#utility.yul\":7779:7811   */\n      calldataload\n        /* \"#utility.yul\":7769:7811   */\n      swap3\n      pop\n        /* \"#utility.yul\":7858:7860   */\n      0x60\n        /* \"#utility.yul\":7847:7856   */\n      dup7\n        /* \"#utility.yul\":7843:7861   */\n      add\n        /* \"#utility.yul\":7830:7862   */\n      calldataload\n        /* \"#utility.yul\":7820:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:7916   */\n      0x80\n        /* \"#utility.yul\":7902:7911   */\n      dup7\n        /* \"#utility.yul\":7898:7917   */\n      add\n        /* \"#utility.yul\":7885:7918   */\n      calldataload\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup2\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7977   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup1\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7927:7977   */\n    tag_314:\n        /* \"#utility.yul\":7996:8045   */\n      tag_282\n        /* \"#utility.yul\":8037:8044   */\n      dup9\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup10\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7996:8045   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":8468:8848   */\n    tag_64:\n        /* \"#utility.yul\":8547:8548   */\n      0x01\n        /* \"#utility.yul\":8543:8555   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8590:8602   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8611:8672   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8665:8669   */\n      0x7f\n        /* \"#utility.yul\":8657:8663   */\n      dup3\n        /* \"#utility.yul\":8653:8670   */\n      and\n        /* \"#utility.yul\":8643:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8611:8672   */\n    tag_318:\n        /* \"#utility.yul\":8718:8720   */\n      0x20\n        /* \"#utility.yul\":8710:8716   */\n      dup3\n        /* \"#utility.yul\":8707:8721   */\n      lt\n        /* \"#utility.yul\":8687:8705   */\n      dup2\n        /* \"#utility.yul\":8684:8722   */\n      sub\n        /* \"#utility.yul\":8681:8842   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":8764:8774   */\n      0x4e487b71\n        /* \"#utility.yul\":8759:8762   */\n      0xe0\n        /* \"#utility.yul\":8755:8775   */\n      shl\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8745:8776   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x22\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8827:8831   */\n      0x24\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8817:8832   */\n      revert\n        /* \"#utility.yul\":8681:8842   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":8468:8848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9809   */\n    tag_94:\n        /* \"#utility.yul\":9743:9753   */\n      0x4e487b71\n        /* \"#utility.yul\":9738:9741   */\n      0xe0\n        /* \"#utility.yul\":9734:9754   */\n      shl\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9724:9755   */\n      mstore\n        /* \"#utility.yul\":9774:9778   */\n      0x32\n        /* \"#utility.yul\":9771:9772   */\n      0x04\n        /* \"#utility.yul\":9764:9779   */\n      mstore\n        /* \"#utility.yul\":9798:9802   */\n      0x24\n        /* \"#utility.yul\":9795:9796   */\n      0x00\n        /* \"#utility.yul\":9788:9803   */\n      revert\n        /* \"#utility.yul\":9814:9941   */\n    tag_229:\n        /* \"#utility.yul\":9875:9885   */\n      0x4e487b71\n        /* \"#utility.yul\":9870:9873   */\n      0xe0\n        /* \"#utility.yul\":9866:9886   */\n      shl\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9887   */\n      mstore\n        /* \"#utility.yul\":9906:9910   */\n      0x11\n        /* \"#utility.yul\":9903:9904   */\n      0x04\n        /* \"#utility.yul\":9896:9911   */\n      mstore\n        /* \"#utility.yul\":9930:9934   */\n      0x24\n        /* \"#utility.yul\":9927:9928   */\n      0x00\n        /* \"#utility.yul\":9920:9935   */\n      revert\n        /* \"#utility.yul\":9946:10081   */\n    tag_100:\n        /* \"#utility.yul\":9985:9988   */\n      0x00\n        /* \"#utility.yul\":10006:10023   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10003:10046   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_326\n      tag_229\n      jump\t// in\n    tag_326:\n      pop\n        /* \"#utility.yul\":10073:10074   */\n      0x01\n        /* \"#utility.yul\":10062:10075   */\n      add\n      swap1\n        /* \"#utility.yul\":9946:10081   */\n      jump\t// out\n        /* \"#utility.yul\":10905:11306   */\n    tag_124:\n        /* \"#utility.yul\":11107:11109   */\n      0x20\n        /* \"#utility.yul\":11089:11110   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11146:11148   */\n      0x25\n        /* \"#utility.yul\":11126:11144   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11119:11149   */\n      mstore\n        /* \"#utility.yul\":11185:11219   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11180:11182   */\n      0x40\n        /* \"#utility.yul\":11165:11183   */\n      dup3\n      add\n        /* \"#utility.yul\":11158:11220   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11251:11253   */\n      0x60\n        /* \"#utility.yul\":11236:11254   */\n      dup3\n      add\n        /* \"#utility.yul\":11229:11264   */\n      mstore\n        /* \"#utility.yul\":11296:11299   */\n      0x80\n        /* \"#utility.yul\":11281:11300   */\n      add\n      swap1\n        /* \"#utility.yul\":10905:11306   */\n      jump\t// out\n        /* \"#utility.yul\":11311:11717   */\n    tag_137:\n        /* \"#utility.yul\":11513:11515   */\n      0x20\n        /* \"#utility.yul\":11495:11516   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11552:11554   */\n      0x2a\n        /* \"#utility.yul\":11532:11550   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11525:11555   */\n      mstore\n        /* \"#utility.yul\":11591:11625   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11586:11588   */\n      0x40\n        /* \"#utility.yul\":11571:11589   */\n      dup3\n      add\n        /* \"#utility.yul\":11564:11626   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11657:11659   */\n      0x60\n        /* \"#utility.yul\":11642:11660   */\n      dup3\n      add\n        /* \"#utility.yul\":11635:11675   */\n      mstore\n        /* \"#utility.yul\":11707:11710   */\n      0x80\n        /* \"#utility.yul\":11692:11711   */\n      add\n      swap1\n        /* \"#utility.yul\":11311:11717   */\n      jump\t// out\n        /* \"#utility.yul\":11722:11850   */\n    tag_139:\n        /* \"#utility.yul\":11762:11765   */\n      0x00\n        /* \"#utility.yul\":11793:11794   */\n      dup3\n        /* \"#utility.yul\":11789:11795   */\n      not\n        /* \"#utility.yul\":11786:11787   */\n      dup3\n        /* \"#utility.yul\":11783:11796   */\n      gt\n        /* \"#utility.yul\":11780:11819   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":11799:11817   */\n      tag_333\n      tag_229\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":11835:11844   */\n      add\n      swap1\n        /* \"#utility.yul\":11722:11850   */\n      jump\t// out\n        /* \"#utility.yul\":11855:12320   */\n    tag_142:\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12101:12110   */\n      dup2\n        /* \"#utility.yul\":12094:12115   */\n      mstore\n        /* \"#utility.yul\":12075:12079   */\n      0x00\n        /* \"#utility.yul\":12138:12194   */\n      tag_335\n        /* \"#utility.yul\":12190:12192   */\n      0x40\n        /* \"#utility.yul\":12179:12188   */\n      dup4\n        /* \"#utility.yul\":12175:12193   */\n      add\n        /* \"#utility.yul\":12167:12173   */\n      dup6\n        /* \"#utility.yul\":12138:12194   */\n      tag_228\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12242:12251   */\n      dup3\n        /* \"#utility.yul\":12234:12240   */\n      dup2\n        /* \"#utility.yul\":12230:12252   */\n      sub\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12214:12223   */\n      dup5\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12203:12253   */\n      mstore\n        /* \"#utility.yul\":12270:12314   */\n      tag_336\n        /* \"#utility.yul\":12307:12313   */\n      dup2\n        /* \"#utility.yul\":12299:12305   */\n      dup6\n        /* \"#utility.yul\":12270:12314   */\n      tag_228\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":12262:12314   */\n      swap6\n        /* \"#utility.yul\":11855:12320   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13815   */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13385:13400   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13367:13401   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13437:13452   */\n      dup6\n      and\n        /* \"#utility.yul\":13432:13434   */\n      0x20\n        /* \"#utility.yul\":13417:13435   */\n      dup3\n      add\n        /* \"#utility.yul\":13410:13453   */\n      mstore\n        /* \"#utility.yul\":13347:13350   */\n      0xa0\n        /* \"#utility.yul\":13484:13486   */\n      0x40\n        /* \"#utility.yul\":13469:13487   */\n      dup3\n      add\n        /* \"#utility.yul\":13462:13493   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13310:13314   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13516:13573   */\n      tag_340\n      swap1\n        /* \"#utility.yul\":13553:13572   */\n      dup4\n      add\n        /* \"#utility.yul\":13545:13551   */\n      dup7\n        /* \"#utility.yul\":13516:13573   */\n      tag_228\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13613:13619   */\n      dup2\n        /* \"#utility.yul\":13609:13631   */\n      sub\n        /* \"#utility.yul\":13604:13606   */\n      0x60\n        /* \"#utility.yul\":13593:13602   */\n      dup5\n        /* \"#utility.yul\":13589:13607   */\n      add\n        /* \"#utility.yul\":13582:13632   */\n      mstore\n        /* \"#utility.yul\":13655:13699   */\n      tag_341\n        /* \"#utility.yul\":13692:13698   */\n      dup2\n        /* \"#utility.yul\":13684:13690   */\n      dup7\n        /* \"#utility.yul\":13655:13699   */\n      tag_228\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":13641:13699   */\n      swap1\n      pop\n        /* \"#utility.yul\":13748:13757   */\n      dup3\n        /* \"#utility.yul\":13740:13746   */\n      dup2\n        /* \"#utility.yul\":13736:13758   */\n      sub\n        /* \"#utility.yul\":13730:13733   */\n      0x80\n        /* \"#utility.yul\":13719:13728   */\n      dup5\n        /* \"#utility.yul\":13715:13734   */\n      add\n        /* \"#utility.yul\":13708:13759   */\n      mstore\n        /* \"#utility.yul\":13776:13809   */\n      tag_342\n        /* \"#utility.yul\":13802:13808   */\n      dup2\n        /* \"#utility.yul\":13794:13800   */\n      dup6\n        /* \"#utility.yul\":13776:13809   */\n      tag_223\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13768:13809   */\n      swap9\n        /* \"#utility.yul\":12988:13815   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:14069   */\n    tag_178:\n        /* \"#utility.yul\":13889:13895   */\n      0x00\n        /* \"#utility.yul\":13942:13944   */\n      0x20\n        /* \"#utility.yul\":13930:13939   */\n      dup3\n        /* \"#utility.yul\":13921:13928   */\n      dup5\n        /* \"#utility.yul\":13917:13940   */\n      sub\n        /* \"#utility.yul\":13913:13945   */\n      slt\n        /* \"#utility.yul\":13910:13962   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":13958:13959   */\n      0x00\n        /* \"#utility.yul\":13955:13956   */\n      dup1\n        /* \"#utility.yul\":13948:13960   */\n      revert\n        /* \"#utility.yul\":13910:13962   */\n    tag_344:\n        /* \"#utility.yul\":13990:13999   */\n      dup2\n        /* \"#utility.yul\":13984:14000   */\n      mload\n        /* \"#utility.yul\":14009:14039   */\n      tag_241\n        /* \"#utility.yul\":14033:14038   */\n      dup2\n        /* \"#utility.yul\":14009:14039   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":14074:14253   */\n    tag_184:\n        /* \"#utility.yul\":14109:14112   */\n      0x00\n        /* \"#utility.yul\":14151:14152   */\n      0x03\n        /* \"#utility.yul\":14133:14149   */\n      returndatasize\n        /* \"#utility.yul\":14130:14153   */\n      gt\n        /* \"#utility.yul\":14127:14247   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14197:14198   */\n      0x04\n        /* \"#utility.yul\":14194:14195   */\n      0x00\n        /* \"#utility.yul\":14191:14192   */\n      dup1\n        /* \"#utility.yul\":14176:14199   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14228:14236   */\n      mload\n        /* \"#utility.yul\":14223:14226   */\n      0xe0\n        /* \"#utility.yul\":14219:14237   */\n      shr\n        /* \"#utility.yul\":14127:14247   */\n    tag_347:\n        /* \"#utility.yul\":14074:14253   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14258:14929   */\n    tag_186:\n        /* \"#utility.yul\":14297:14300   */\n      0x00\n        /* \"#utility.yul\":14339:14343   */\n      0x44\n        /* \"#utility.yul\":14321:14337   */\n      returndatasize\n        /* \"#utility.yul\":14318:14344   */\n      lt\n        /* \"#utility.yul\":14315:14354   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14315:14354   */\n    tag_349:\n        /* \"#utility.yul\":14381:14383   */\n      0x40\n        /* \"#utility.yul\":14375:14384   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14446:14462   */\n      returndatasize\n        /* \"#utility.yul\":14442:14467   */\n      dup2\n      add\n        /* \"#utility.yul\":14439:14440   */\n      0x04\n        /* \"#utility.yul\":14375:14384   */\n      dup4\n        /* \"#utility.yul\":14418:14468   */\n      returndatacopy\n        /* \"#utility.yul\":14497:14501   */\n      dup2\n        /* \"#utility.yul\":14491:14502   */\n      mload\n        /* \"#utility.yul\":14521:14537   */\n      returndatasize\n        /* \"#utility.yul\":14556:14574   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14627:14629   */\n      dup2\n        /* \"#utility.yul\":14620:14624   */\n      0x24\n        /* \"#utility.yul\":14612:14618   */\n      dup5\n        /* \"#utility.yul\":14608:14625   */\n      add\n        /* \"#utility.yul\":14605:14630   */\n      gt\n        /* \"#utility.yul\":14600:14602   */\n      dup2\n        /* \"#utility.yul\":14592:14598   */\n      dup5\n        /* \"#utility.yul\":14589:14603   */\n      gt\n        /* \"#utility.yul\":14586:14631   */\n      or\n        /* \"#utility.yul\":14583:14641   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":14634:14639   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14583:14641   */\n    tag_350:\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14665:14669   */\n      dup6\n        /* \"#utility.yul\":14661:14678   */\n      add\n        /* \"#utility.yul\":14650:14678   */\n      swap2\n      pop\n        /* \"#utility.yul\":14707:14710   */\n      dup2\n        /* \"#utility.yul\":14701:14711   */\n      mload\n        /* \"#utility.yul\":14734:14736   */\n      dup2\n        /* \"#utility.yul\":14726:14732   */\n      dup2\n        /* \"#utility.yul\":14723:14737   */\n      gt\n        /* \"#utility.yul\":14720:14747   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":14740:14745   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14720:14747   */\n    tag_351:\n        /* \"#utility.yul\":14824:14826   */\n      dup5\n        /* \"#utility.yul\":14805:14821   */\n      returndatasize\n        /* \"#utility.yul\":14799:14803   */\n      dup8\n        /* \"#utility.yul\":14795:14822   */\n      add\n        /* \"#utility.yul\":14791:14827   */\n      add\n        /* \"#utility.yul\":14784:14788   */\n      0x20\n        /* \"#utility.yul\":14775:14781   */\n      dup3\n        /* \"#utility.yul\":14770:14773   */\n      dup6\n        /* \"#utility.yul\":14766:14782   */\n      add\n        /* \"#utility.yul\":14762:14789   */\n      add\n        /* \"#utility.yul\":14759:14828   */\n      gt\n        /* \"#utility.yul\":14756:14838   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":14831:14836   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14756:14838   */\n    tag_352:\n        /* \"#utility.yul\":14847:14904   */\n      tag_353\n        /* \"#utility.yul\":14898:14902   */\n      0x20\n        /* \"#utility.yul\":14889:14895   */\n      dup3\n        /* \"#utility.yul\":14881:14887   */\n      dup7\n        /* \"#utility.yul\":14877:14896   */\n      add\n        /* \"#utility.yul\":14873:14903   */\n      add\n        /* \"#utility.yul\":14867:14871   */\n      dup8\n        /* \"#utility.yul\":14847:14904   */\n      tag_224\n      jump\t// in\n    tag_353:\n      pop\n        /* \"#utility.yul\":14920:14923   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14258:14929   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15355:15759   */\n    tag_194:\n        /* \"#utility.yul\":15557:15559   */\n      0x20\n        /* \"#utility.yul\":15539:15560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15596:15598   */\n      0x28\n        /* \"#utility.yul\":15576:15594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15569:15599   */\n      mstore\n        /* \"#utility.yul\":15635:15669   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15630:15632   */\n      0x40\n        /* \"#utility.yul\":15615:15633   */\n      dup3\n      add\n        /* \"#utility.yul\":15608:15670   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15701:15703   */\n      0x60\n        /* \"#utility.yul\":15686:15704   */\n      dup3\n      add\n        /* \"#utility.yul\":15679:15717   */\n      mstore\n        /* \"#utility.yul\":15749:15752   */\n      0x80\n        /* \"#utility.yul\":15734:15753   */\n      add\n      swap1\n        /* \"#utility.yul\":15355:15759   */\n      jump\t// out\n        /* \"#utility.yul\":15764:16325   */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16061:16076   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16043:16077   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16113:16128   */\n      dup6\n      and\n        /* \"#utility.yul\":16108:16110   */\n      0x20\n        /* \"#utility.yul\":16093:16111   */\n      dup3\n      add\n        /* \"#utility.yul\":16086:16129   */\n      mstore\n        /* \"#utility.yul\":16160:16162   */\n      0x40\n        /* \"#utility.yul\":16145:16163   */\n      dup2\n      add\n        /* \"#utility.yul\":16138:16172   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16203:16205   */\n      0x60\n        /* \"#utility.yul\":16188:16206   */\n      dup2\n      add\n        /* \"#utility.yul\":16181:16215   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16023:16026   */\n      0xa0\n        /* \"#utility.yul\":16246:16249   */\n      0x80\n        /* \"#utility.yul\":16231:16250   */\n      dup3\n      add\n        /* \"#utility.yul\":16224:16256   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15986:15990   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16273:16319   */\n      tag_357\n      swap1\n        /* \"#utility.yul\":16299:16318   */\n      dup4\n      add\n        /* \"#utility.yul\":16291:16297   */\n      dup5\n        /* \"#utility.yul\":16273:16319   */\n      tag_223\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":16265:16319   */\n      swap8\n        /* \"#utility.yul\":15764:16325   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220854d06471b9ad3aec48c1c67f470fa6eca5264e733780734723148f779996ce264736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_555": {
									"entryPoint": 70,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:10"
															},
															"nodeType": "YulIf",
															"src": "268:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:10"
															},
															"nodeType": "YulIf",
															"src": "405:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:10"
															},
															"nodeType": "YulIf",
															"src": "489:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:10"
															},
															"nodeType": "YulIf",
															"src": "581:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:10"
															},
															"nodeType": "YulIf",
															"src": "764:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:10"
															},
															"nodeType": "YulIf",
															"src": "903:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:10",
																"statements": []
															},
															"src": "984:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:10"
															},
															"nodeType": "YulIf",
															"src": "1122:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:10",
														"type": ""
													}
												],
												"src": "146:1087:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1320:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1364:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1338:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1411:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1391:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:26:10"
															},
															"nodeType": "YulIf",
															"src": "1381:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1529:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1534:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1525:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1525:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1597:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1587:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1457:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1480:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:38:10"
															},
															"nodeType": "YulIf",
															"src": "1451:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1273:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1282:6:10",
														"type": ""
													}
												],
												"src": "1238:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200160b3803806200160b83398101604081905262000034916200011b565b6200003f8162000046565b5062000233565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b6020821081036200022d57634e487b7160e01b600052602260045260246000fd5b50919050565b6113c880620002436000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bcd565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c10565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c34565b610275565b6040516100a99190610c9a565b610108610103366004610df9565b610309565b005b61011d610118366004610ea3565b6103a0565b6040516100a99190610fa9565b610108610138366004610fbc565b6104ca565b6100c561014b366004610ff8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461102b565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611090565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611090565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610cad565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110ca565b6020026020010151858381518110610488576104886110ca565b602002602001015161018c565b8282815181106104a7576104a76110ca565b60209081029190910101526104bb816110f6565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081d565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f49061110f565b3360005b84518110156106cf576000858281518110610609576106096110ca565b602002602001015190506000858381518110610627576106276110ca565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611154565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b490849061119e565b92505081905550505050806106c8906110f6565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111b6565b60405180910390a4610735818787878787610947565b505050505050565b816001600160a01b0316836001600160a01b0316036107b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108435760405162461bcd60e51b81526004016101f49061110f565b33600061084f85610aab565b9050600061085c85610aab565b90506000868152602081815260408083206001600160a01b038c1684529091529020548581101561089f5760405162461bcd60e51b81526004016101f490611154565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906108dc90849061119e565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093c848a8a8a8a8a610af6565b505050505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098b90899089908890889088906004016111e4565b6020604051808303816000875af19250505080156109c6575060408051601f3d908101601f191682019092526109c391810190611242565b60015b610a72576109d261125f565b806308c379a003610a0b57506109e661127b565b806109f15750610a0d565b8060405162461bcd60e51b81526004016101f49190610c9a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b14610aa25760405162461bcd60e51b81526004016101f490611305565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ae557610ae56110ca565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b3a908990899088908890889060040161134d565b6020604051808303816000875af1925050508015610b75575060408051601f3d908101601f19168201909252610b7291810190611242565b60015b610b81576109d261125f565b6001600160e01b0319811663f23a6e6160e01b14610aa25760405162461bcd60e51b81526004016101f490611305565b80356001600160a01b0381168114610bc857600080fd5b919050565b60008060408385031215610be057600080fd5b610be983610bb1565b946020939093013593505050565b6001600160e01b031981168114610c0d57600080fd5b50565b600060208284031215610c2257600080fd5b8135610c2d81610bf7565b9392505050565b600060208284031215610c4657600080fd5b5035919050565b6000815180845260005b81811015610c7357602081850181015186830182015201610c57565b81811115610c85576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c2d6020830184610c4d565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610ce957610ce9610cad565b6040525050565b600067ffffffffffffffff821115610d0a57610d0a610cad565b5060051b60200190565b600082601f830112610d2557600080fd5b81356020610d3282610cf0565b604051610d3f8282610cc3565b83815260059390931b8501820192828101915086841115610d5f57600080fd5b8286015b84811015610d7a5780358352918301918301610d63565b509695505050505050565b600082601f830112610d9657600080fd5b813567ffffffffffffffff811115610db057610db0610cad565b604051610dc7601f8301601f191660200182610cc3565b818152846020838601011115610ddc57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e1157600080fd5b610e1a86610bb1565b9450610e2860208701610bb1565b9350604086013567ffffffffffffffff80821115610e4557600080fd5b610e5189838a01610d14565b94506060880135915080821115610e6757600080fd5b610e7389838a01610d14565b93506080880135915080821115610e8957600080fd5b50610e9688828901610d85565b9150509295509295909350565b60008060408385031215610eb657600080fd5b823567ffffffffffffffff80821115610ece57600080fd5b818501915085601f830112610ee257600080fd5b81356020610eef82610cf0565b604051610efc8282610cc3565b83815260059390931b8501820192828101915089841115610f1c57600080fd5b948201945b83861015610f4157610f3286610bb1565b82529482019490820190610f21565b96505086013592505080821115610f5757600080fd5b50610f6485828601610d14565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9e57815187529582019590820190600101610f82565b509495945050505050565b602081526000610c2d6020830184610f6e565b60008060408385031215610fcf57600080fd5b610fd883610bb1565b915060208301358015158114610fed57600080fd5b809150509250929050565b6000806040838503121561100b57600080fd5b61101483610bb1565b915061102260208401610bb1565b90509250929050565b600080600080600060a0868803121561104357600080fd5b61104c86610bb1565b945061105a60208701610bb1565b93506040860135925060608601359150608086013567ffffffffffffffff81111561108457600080fd5b610e9688828901610d85565b600181811c908216806110a457607f821691505b6020821081036110c457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611108576111086110e0565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111b1576111b16110e0565b500190565b6040815260006111c96040830185610f6e565b82810360208401526111db8185610f6e565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061121090830186610f6e565b82810360608401526112228186610f6e565b905082810360808401526112368185610c4d565b98975050505050505050565b60006020828403121561125457600080fd5b8151610c2d81610bf7565b600060033d11156112785760046000803e5060005160e01c5b90565b600060443d10156112895790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112b957505050505090565b82850191508151818111156112d15750505050505090565b843d87010160208285010111156112eb5750505050505090565b6112fa60208286010187610cc3565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061138790830184610c4d565b97965050505050505056fea2646970667358221220854d06471b9ad3aec48c1c67f470fa6eca5264e733780734723148f779996ce264736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x160B CODESIZE SUB DUP1 PUSH3 0x160B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11B JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x233 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x171 JUMPI PUSH3 0x171 PUSH3 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x19C JUMPI PUSH3 0x19C PUSH3 0x105 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1D9 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1BA JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x20C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x22D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C8 DUP1 PUSH3 0x243 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x110F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x947 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x110F JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x84F DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85C DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x8DC SWAP1 DUP5 SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93C DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xAF6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x98B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA72 JUMPI PUSH2 0x9D2 PUSH2 0x125F JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA0B JUMPI POP PUSH2 0x9E6 PUSH2 0x127B JUMP JUMPDEST DUP1 PUSH2 0x9F1 JUMPI POP PUSH2 0xA0D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC9A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1305 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE5 JUMPI PUSH2 0xAE5 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x134D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB75 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB72 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB81 JUMPI PUSH2 0x9D2 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1305 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE9 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC2D DUP2 PUSH2 0xBF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC73 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC57 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC4D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE9 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD0A JUMPI PUSH2 0xD0A PUSH2 0xCAD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD32 DUP3 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3F DUP3 DUP3 PUSH2 0xCC3 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD7A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD63 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDB0 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC7 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCC3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1A DUP7 PUSH2 0xBB1 JUMP JUMPDEST SWAP5 POP PUSH2 0xE28 PUSH1 0x20 DUP8 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE51 DUP10 DUP4 DUP11 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE73 DUP10 DUP4 DUP11 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE96 DUP9 DUP3 DUP10 ADD PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEEF DUP3 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEFC DUP3 DUP3 PUSH2 0xCC3 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF32 DUP7 PUSH2 0xBB1 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF21 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF64 DUP6 DUP3 DUP7 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF82 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD8 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1014 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1022 PUSH1 0x20 DUP5 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104C DUP7 PUSH2 0xBB1 JUMP JUMPDEST SWAP5 POP PUSH2 0x105A PUSH1 0x20 DUP8 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE96 DUP9 DUP3 DUP10 ADD PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1108 JUMPI PUSH2 0x1108 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11B1 JUMPI PUSH2 0x11B1 PUSH2 0x10E0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF6E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11DB DUP2 DUP6 PUSH2 0xF6E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1210 SWAP1 DUP4 ADD DUP7 PUSH2 0xF6E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1222 DUP2 DUP7 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1236 DUP2 DUP6 PUSH2 0xC4D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC2D DUP2 PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1278 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1289 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12B9 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D1 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12EB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12FA PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCC3 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1387 SWAP1 DUP4 ADD DUP5 PUSH2 0xC4D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0x4D MOD SELFBALANCE SHL SWAP11 0xD3 0xAE 0xC4 DUP13 SHR PUSH8 0xF470FA6ECA5264E7 CALLER PUSH25 0x734723148F779996CE264736F6C634300080E003300000000 ",
							"sourceMap": "570:16550:0:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;:13::i;:::-;1107:62;570:16550;;8171:86;8237:13;;;;:4;;:13;;;;;:::i;:::-;;8171:86;:::o;570:16550::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;570:16550:0;;;-1:-1:-1;570:16550:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:10;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:10;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:10:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;570:16550:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1221": {
									"entryPoint": 2731,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1046": {
									"entryPoint": null,
									"id": 1046,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1193": {
									"entryPoint": 2375,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1128": {
									"entryPoint": 2806,
									"id": 1128,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1864": {
									"entryPoint": null,
									"id": 1864,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_544": {
									"entryPoint": 1376,
									"id": 544,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_409": {
									"entryPoint": 2077,
									"id": 409,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1027": {
									"entryPoint": 1853,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 928,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 396,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1575": {
									"entryPoint": null,
									"id": 1575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 777,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1241,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1226,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1897": {
									"entryPoint": null,
									"id": 1897,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 547,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 629,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16327:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:10"
															},
															"nodeType": "YulIf",
															"src": "1291:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:10",
														"type": ""
													}
												],
												"src": "1211:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:10",
																"statements": []
															},
															"src": "1538:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:10"
															},
															"nodeType": "YulIf",
															"src": "1709:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:10",
														"type": ""
													}
												],
												"src": "1396:472:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:10",
														"type": ""
													}
												],
												"src": "1873:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:10"
															},
															"nodeType": "YulIf",
															"src": "2354:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:10",
														"type": ""
													}
												],
												"src": "2230:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:10"
															},
															"nodeType": "YulIf",
															"src": "2563:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:10",
														"type": ""
													}
												],
												"src": "2484:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:10"
															},
															"nodeType": "YulIf",
															"src": "2746:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:10"
															},
															"nodeType": "YulIf",
															"src": "3145:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:10",
																"statements": []
															},
															"src": "3224:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:10",
														"type": ""
													}
												],
												"src": "2672:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:10"
															},
															"nodeType": "YulIf",
															"src": "3463:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:10"
															},
															"nodeType": "YulIf",
															"src": "3566:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:10"
															},
															"nodeType": "YulIf",
															"src": "3762:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:10",
														"type": ""
													}
												],
												"src": "3401:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:10"
															},
															"nodeType": "YulIf",
															"src": "4168:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:10"
															},
															"nodeType": "YulIf",
															"src": "4427:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:10"
															},
															"nodeType": "YulIf",
															"src": "4607:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:10"
															},
															"nodeType": "YulIf",
															"src": "4792:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:10",
														"type": ""
													}
												],
												"src": "3961:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:10"
															},
															"nodeType": "YulIf",
															"src": "5056:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:10"
															},
															"nodeType": "YulIf",
															"src": "5200:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:10"
															},
															"nodeType": "YulIf",
															"src": "5284:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:10"
															},
															"nodeType": "YulIf",
															"src": "5675:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:10",
																"statements": []
															},
															"src": "5754:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:10"
															},
															"nodeType": "YulIf",
															"src": "5993:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:10",
														"type": ""
													}
												],
												"src": "4909:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:10",
																"statements": []
															},
															"src": "6363:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:10",
														"type": ""
													}
												],
												"src": "6122:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:10",
														"type": ""
													}
												],
												"src": "6562:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6958:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6967:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:32:10"
															},
															"nodeType": "YulIf",
															"src": "6922:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6993:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7031:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7044:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7035:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7119:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7112:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7112:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7105:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7105:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:40:10"
															},
															"nodeType": "YulIf",
															"src": "7085:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7164:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6870:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6881:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6893:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:10",
														"type": ""
													}
												],
												"src": "6828:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:10"
															},
															"nodeType": "YulIf",
															"src": "7277:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7348:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7396:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:10",
														"type": ""
													}
												],
												"src": "7180:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7634:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:33:10"
															},
															"nodeType": "YulIf",
															"src": "7602:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7712:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7722:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7769:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7779:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7830:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7871:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7898:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7885:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7875:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7961:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7963:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7963:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7930:30:10"
															},
															"nodeType": "YulIf",
															"src": "7927:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8037:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7996:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7537:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7549:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7557:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7565:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7573:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7581:6:10",
														"type": ""
													}
												],
												"src": "7445:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8230:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8336:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8407:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8430:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8442:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8438:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8430:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8207:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:10",
														"type": ""
													}
												],
												"src": "8056:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8533:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8550:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8564:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8594:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8568:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8641:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8643:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8657:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8643:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8621:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8614:26:10"
															},
															"nodeType": "YulIf",
															"src": "8611:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8731:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8752:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8759:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8764:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8755:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8755:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8745:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8796:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8799:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8789:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8789:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8827:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8817:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8817:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8687:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8710:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8707:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8684:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:38:10"
															},
															"nodeType": "YulIf",
															"src": "8681:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8503:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8512:6:10",
														"type": ""
													}
												],
												"src": "8468:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9027:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9044:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9037:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9089:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9128:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9113:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9133:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9188:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9199:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9184:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9204:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9234:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9004:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9018:4:10",
														"type": ""
													}
												],
												"src": "8853:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9552:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9644:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9423:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:10",
														"type": ""
													}
												],
												"src": "9272:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9738:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9734:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9734:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9682:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9846:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9875:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9930:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9814:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10024:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10009:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10020:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:17:10"
															},
															"nodeType": "YulIf",
															"src": "10003:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10066:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9975:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9985:3:10",
														"type": ""
													}
												],
												"src": "9946:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10260:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10437:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10237:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:10",
														"type": ""
													}
												],
												"src": "10086:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10710:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10776:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10847:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10820:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10867:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10879:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10890:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10875:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10867:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10647:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10661:4:10",
														"type": ""
													}
												],
												"src": "10496:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11079:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11096:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11089:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11119:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11165:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11185:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11158:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11158:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11251:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11256:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11229:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11056:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11070:4:10",
														"type": ""
													}
												],
												"src": "10905:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11485:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11502:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11552:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11575:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11586:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11591:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11684:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11696:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11707:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11684:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11476:4:10",
														"type": ""
													}
												],
												"src": "11311:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11770:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11797:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11799:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11799:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11786:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11793:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11789:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11783:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11783:13:10"
															},
															"nodeType": "YulIf",
															"src": "11780:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11828:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11839:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11828:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11753:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11756:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11762:3:10",
														"type": ""
													}
												],
												"src": "11722:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12084:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12094:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12094:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12124:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12167:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12190:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12138:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12128:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12234:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12230:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12262:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12307:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12270:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12270:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12045:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12056:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12064:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12075:4:10",
														"type": ""
													}
												],
												"src": "11855:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12516:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12550:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12561:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12546:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12539:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12600:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12605:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12578:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12578:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12578:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12660:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12671:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12676:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12649:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12697:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12709:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12705:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12697:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12476:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12490:4:10",
														"type": ""
													}
												],
												"src": "12325:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12864:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12886:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12916:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12927:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12970:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12825:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12836:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12844:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12855:4:10",
														"type": ""
													}
												],
												"src": "12735:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13319:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13329:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13347:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13352:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13333:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13374:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13389:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13397:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13367:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13367:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13421:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13432:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13417:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13441:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13449:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13437:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13410:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13410:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13473:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13469:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13469:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13462:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13462:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13502:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13545:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13516:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13516:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13506:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13593:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13604:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13589:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13621:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13609:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13582:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13641:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13684:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13692:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13655:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13655:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13645:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13719:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13715:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13715:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13740:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13748:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13736:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13708:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13708:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13768:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13794:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13802:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13776:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13776:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13768:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13267:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13275:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13283:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13291:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13299:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13310:4:10",
														"type": ""
													}
												],
												"src": "12988:827:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13900:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13946:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13955:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13958:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13948:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13948:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13948:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13921:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13930:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13917:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13917:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13942:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13913:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:32:10"
															},
															"nodeType": "YulIf",
															"src": "13910:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13971:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13990:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13984:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13984:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13975:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14033:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14009:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14009:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14048:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14058:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13866:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13877:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13889:6:10",
														"type": ""
													}
												],
												"src": "13820:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14162:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14191:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14194:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14197:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14176:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14176:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14176:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14212:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14223:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14234:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14228:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14228:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14219:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14219:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14212:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14133:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14133:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14151:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14130:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:23:10"
															},
															"nodeType": "YulIf",
															"src": "14127:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14109:3:10",
														"type": ""
													}
												],
												"src": "14074:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14305:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14345:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14347:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14321:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14321:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14339:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14318:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:26:10"
															},
															"nodeType": "YulIf",
															"src": "14315:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14363:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14375:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14367:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14393:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14403:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14403:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14397:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14433:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14439:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14446:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14446:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14464:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14442:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14418:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14418:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14477:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14497:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14491:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14481:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14511:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14521:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14521:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14515:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14546:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14556:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14550:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14632:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14634:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14600:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14589:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14589:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14612:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14620:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14608:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14608:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14627:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14605:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14605:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14586:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:45:10"
															},
															"nodeType": "YulIf",
															"src": "14583:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14650:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14665:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14671:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14661:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14654:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14687:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14707:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14701:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14691:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14738:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14740:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14726:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14734:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14723:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:14:10"
															},
															"nodeType": "YulIf",
															"src": "14720:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14829:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14831:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14770:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14775:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14766:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14766:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14784:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14762:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14799:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14805:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14805:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14795:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14795:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14824:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14791:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14791:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14759:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14759:69:10"
															},
															"nodeType": "YulIf",
															"src": "14756:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14867:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14881:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14889:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14877:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14877:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14898:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14873:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14873:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14847:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14847:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14847:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14913:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14920:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14913:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14297:3:10",
														"type": ""
													}
												],
												"src": "14258:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15108:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15125:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15118:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15118:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15170:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15155:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15155:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15175:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15148:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15198:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15209:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15194:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15194:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15214:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15187:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15187:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15269:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15280:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15265:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15285:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15258:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15258:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15258:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15317:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15329:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15340:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15325:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15317:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15085:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15099:4:10",
														"type": ""
													}
												],
												"src": "14934:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15529:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15546:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15580:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15591:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15576:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15596:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15569:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15569:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15569:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15630:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15615:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15635:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15608:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15608:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15608:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15690:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15701:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15686:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15686:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15706:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15679:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15738:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15506:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15520:4:10",
														"type": ""
													}
												],
												"src": "15355:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15995:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16005:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16023:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16028:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16019:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16032:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16015:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16015:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16009:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16050:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16065:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16073:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16061:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16043:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16043:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16097:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16108:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16093:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16117:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16125:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16113:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16086:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16086:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16086:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16149:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16160:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16145:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16165:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16138:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16138:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16138:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16192:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16203:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16208:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16181:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16181:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16246:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16231:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16231:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16252:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16224:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16224:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16265:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16303:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16314:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16299:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16273:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16273:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16265:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15932:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15943:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15951:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15959:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15967:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15975:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15986:4:10",
														"type": ""
													}
												],
												"src": "15764:561:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x110F JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x947 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x110F JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x84F DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85C DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x89F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x8DC SWAP1 DUP5 SWAP1 PUSH2 0x119E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93C DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xAF6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x98B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA72 JUMPI PUSH2 0x9D2 PUSH2 0x125F JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA0B JUMPI POP PUSH2 0x9E6 PUSH2 0x127B JUMP JUMPDEST DUP1 PUSH2 0x9F1 JUMPI POP PUSH2 0xA0D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC9A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1305 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAE5 JUMPI PUSH2 0xAE5 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB3A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x134D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB75 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB72 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB81 JUMPI PUSH2 0x9D2 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xAA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1305 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE9 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC2D DUP2 PUSH2 0xBF7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC73 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC57 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC4D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE9 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD0A JUMPI PUSH2 0xD0A PUSH2 0xCAD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD32 DUP3 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3F DUP3 DUP3 PUSH2 0xCC3 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD7A JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD63 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDB0 JUMPI PUSH2 0xDB0 PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC7 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCC3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1A DUP7 PUSH2 0xBB1 JUMP JUMPDEST SWAP5 POP PUSH2 0xE28 PUSH1 0x20 DUP8 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE51 DUP10 DUP4 DUP11 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE73 DUP10 DUP4 DUP11 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE96 DUP9 DUP3 DUP10 ADD PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEEF DUP3 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEFC DUP3 DUP3 PUSH2 0xCC3 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF41 JUMPI PUSH2 0xF32 DUP7 PUSH2 0xBB1 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF21 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF64 DUP6 DUP3 DUP7 ADD PUSH2 0xD14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF82 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF6E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD8 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1014 DUP4 PUSH2 0xBB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1022 PUSH1 0x20 DUP5 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1043 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104C DUP7 PUSH2 0xBB1 JUMP JUMPDEST SWAP5 POP PUSH2 0x105A PUSH1 0x20 DUP8 ADD PUSH2 0xBB1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE96 DUP9 DUP3 DUP10 ADD PUSH2 0xD85 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x10A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1108 JUMPI PUSH2 0x1108 PUSH2 0x10E0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11B1 JUMPI PUSH2 0x11B1 PUSH2 0x10E0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF6E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11DB DUP2 DUP6 PUSH2 0xF6E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1210 SWAP1 DUP4 ADD DUP7 PUSH2 0xF6E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1222 DUP2 DUP7 PUSH2 0xF6E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1236 DUP2 DUP6 PUSH2 0xC4D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC2D DUP2 PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1278 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1289 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12B9 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12D1 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12EB JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12FA PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCC3 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1387 SWAP1 DUP4 ADD DUP5 PUSH2 0xC4D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0x4D MOD SELFBALANCE SHL SWAP11 0xD3 0xAE 0xC4 DUP13 SHR PUSH8 0xF470FA6ECA5264E7 CALLER PUSH25 0x734723148F779996CE264736F6C634300080E003300000000 ",
							"sourceMap": "570:16550:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2185:228:0;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1236:305:0;1019:187:10;1940:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4060:430::-;;;;;;:::i;:::-;;:::i;:::-;;2570:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3146:153::-;;;;;;:::i;:::-;;:::i;3366:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3488:27:0;;;3465:4;3488:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3366:166;3599:389;;;;;;:::i;:::-;;:::i;2185:228::-;2271:7;-1:-1:-1;;;;;2298:21:0;;2290:77;;;;-1:-1:-1;;;2290:77:0;;8258:2:10;2290:77:0;;;8240:21:10;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:10;;;8380:41;8438:19;;2290:77:0;;;;;;;;;-1:-1:-1;2384:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;2384:22:0;;;;;;;;;;;;2185:228::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:0;;-1:-1:-1;;;1373:41:0;;:109;;-1:-1:-1;;;;;;;1430:52:0;;-1:-1:-1;;;1430:52:0;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1498:36:0;1354:180;1236:305;-1:-1:-1;;1236:305:0:o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4060:430::-;-1:-1:-1;;;;;4285:20:0;;719:10:6;4285:20:0;;:60;;-1:-1:-1;4309:36:0;4326:4;719:10:6;3366:166:0;:::i;4309:36::-;4264:157;;;;-1:-1:-1;;;4264:157:0;;9055:2:10;4264:157:0;;;9037:21:10;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:10;;;9177:48;9242:19;;4264:157:0;8853:414:10;4264:157:0;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;-1:-1:-1;;;2753:83:0;;9474:2:10;2753:83:0;;;9456:21:10;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:10;;;9596:39;9652:19;;2753:83:0;9272:405:10;2753:83:0;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2880:30:0;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2962:3;;;:::i;:::-;;;2921:120;;;-1:-1:-1;3058:13:0;2570:508;-1:-1:-1;;;2570:508:0:o;3146:153::-;3240:52;719:10:6;3273:8:0;3283;3240:18;:52::i;:::-;3146:153;;:::o;3599:389::-;-1:-1:-1;;;;;3799:20:0;;719:10:6;3799:20:0;;:60;;-1:-1:-1;3823:36:0;3840:4;719:10:6;3366:166:0;:::i;3823:36::-;3778:148;;;;-1:-1:-1;;;3778:148:0;;10288:2:10;3778:148:0;;;10270:21:10;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:10;;;10410:39;10466:19;;3778:148:0;10086:405:10;3778:148:0;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;6233:1115::-;6453:7;:14;6439:3;:10;:28;6431:81;;;;-1:-1:-1;;;6431:81:0;;10698:2:10;6431:81:0;;;10680:21:10;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:10;;;10820:38;10875:19;;6431:81:0;10496:404:10;6431:81:0;-1:-1:-1;;;;;6530:16:0;;6522:66;;;;-1:-1:-1;;;6522:66:0;;;;;;;:::i;:::-;719:10:6;6599:16:0;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;-1:-1:-1;;;;;6864:19:0;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:0;;;;6897:76;;;;-1:-1:-1;;;6897:76:0;;;;;;;:::i;:::-;7015:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7015:19:0;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;-1:-1:-1;;;;;7138:47:0;7162:4;-1:-1:-1;;;;;7138:47:0;7152:8;-1:-1:-1;;;;;7138:47:0;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12773:323::-;12923:8;-1:-1:-1;;;;;12914:17:0;:5;-1:-1:-1;;;;;12914:17:0;;12906:71;;;;-1:-1:-1;;;12906:71:0;;12527:2:10;12906:71:0;;;12509:21:10;12566:2;12546:18;;;12539:30;12605:34;12585:18;;;12578:62;-1:-1:-1;;;12656:18:10;;;12649:39;12705:19;;12906:71:0;12325:405:10;12906:71:0;-1:-1:-1;;;;;12987:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12987:46:0;;;;;;;;;;13048:41;;1159::10;;;13048::0;;1132:18:10;13048:41:0;;;;;;;12773:323;;;:::o;4940:947::-;-1:-1:-1;;;;;5121:16:0;;5113:66;;;;-1:-1:-1;;;5113:66:0;;;;;;;:::i;:::-;719:10:6;5190:16:0;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5419:19;5441:13;;;;;;;;;;;-1:-1:-1;;;;;5441:19:0;;;;;;;;;;5478:21;;;;5470:76;;;;-1:-1:-1;;;5470:76:0;;;;;;;:::i;:::-;5580:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5580:19:0;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:0;;;12909:25:10;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5685:46:0;;;;;;;;;;;;;;12882:18:10;5685:46:0;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;16127:792::-;-1:-1:-1;;;;;16359:13:0;;1465:19:5;:23;16355:558:0;;16394:79;;-1:-1:-1;;;16394:79:0;;-1:-1:-1;;;;;16394:43:0;;;;;:79;;16438:8;;16448:4;;16454:3;;16459:7;;16468:4;;16394:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16394:79:0;;;;;;;;-1:-1:-1;;16394:79:0;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;-1:-1:-1;;;16772:14:0;;;;;;;;:::i;16390:513::-;;;16826:62;;-1:-1:-1;;;16826:62:0;;15136:2:10;16826:62:0;;;15118:21:10;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:10;;;15258:50;15325:19;;16826:62:0;14934:416:10;16390:513:0;-1:-1:-1;;;;;;16552:60:0;;-1:-1:-1;;;16552:60:0;16548:157;;16636:50;;-1:-1:-1;;;16636:50:0;;;;;;;:::i;16548:157::-;16474:245;16127:792;;;;;;:::o;16925:193::-;17044:16;;;17058:1;17044:16;;;;;;;;;16991;;17019:22;;17044:16;;;;;;;;;;;;-1:-1:-1;17044:16:0;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17106:5;16925:193;-1:-1:-1;;16925:193:0:o;15396:725::-;-1:-1:-1;;;;;15603:13:0;;1465:19:5;:23;15599:516:0;;15638:72;;-1:-1:-1;;;15638:72:0;;-1:-1:-1;;;;;15638:38:0;;;;;:72;;15677:8;;15687:4;;15693:2;;15697:6;;15705:4;;15638:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15638:72:0;;;;;;;;-1:-1:-1;;15638:72:0;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;-1:-1:-1;;;;;;15759:55:0;;-1:-1:-1;;;15759:55:0;15755:152;;15838:50;;-1:-1:-1;;;15838:50:0;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:10;;1211:180;-1:-1:-1;1211:180:10:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:10;1829:15;-1:-1:-1;;1825:29:10;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:10:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:10;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:10:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:10;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:10;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:10;2672:724;-1:-1:-1;;;;;;2672:724:10:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:10;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:10:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:10;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:10;;5952:32;;-1:-1:-1;;5996:16:10;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:10;;6122:435;-1:-1:-1;;;;;6122:435:10:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;10006:17;;;10003:43;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:10;10062:13;;9946:135::o;10905:401::-;11107:2;11089:21;;;11146:2;11126:18;;;11119:30;11185:34;11180:2;11165:18;;11158:62;-1:-1:-1;;;11251:2:10;11236:18;;11229:35;11296:3;11281:19;;10905:401::o;11311:406::-;11513:2;11495:21;;;11552:2;11532:18;;;11525:30;11591:34;11586:2;11571:18;;11564:62;-1:-1:-1;;;11657:2:10;11642:18;;11635:40;11707:3;11692:19;;11311:406::o;11722:128::-;11762:3;11793:1;11789:6;11786:1;11783:13;11780:39;;;11799:18;;:::i;:::-;-1:-1:-1;11835:9:10;;11722:128::o;11855:465::-;12112:2;12101:9;12094:21;12075:4;12138:56;12190:2;12179:9;12175:18;12167:6;12138:56;:::i;:::-;12242:9;12234:6;12230:22;12225:2;12214:9;12210:18;12203:50;12270:44;12307:6;12299;12270:44;:::i;:::-;12262:52;11855:465;-1:-1:-1;;;;;11855:465:10:o;12988:827::-;-1:-1:-1;;;;;13385:15:10;;;13367:34;;13437:15;;13432:2;13417:18;;13410:43;13347:3;13484:2;13469:18;;13462:31;;;13310:4;;13516:57;;13553:19;;13545:6;13516:57;:::i;:::-;13621:9;13613:6;13609:22;13604:2;13593:9;13589:18;13582:50;13655:44;13692:6;13684;13655:44;:::i;:::-;13641:58;;13748:9;13740:6;13736:22;13730:3;13719:9;13715:19;13708:51;13776:33;13802:6;13794;13776:33;:::i;:::-;13768:41;12988:827;-1:-1:-1;;;;;;;;12988:827:10:o;13820:249::-;13889:6;13942:2;13930:9;13921:7;13917:23;13913:32;13910:52;;;13958:1;13955;13948:12;13910:52;13990:9;13984:16;14009:30;14033:5;14009:30;:::i;14074:179::-;14109:3;14151:1;14133:16;14130:23;14127:120;;;14197:1;14194;14191;14176:23;-1:-1:-1;14234:1:10;14228:8;14223:3;14219:18;14127:120;14074:179;:::o;14258:671::-;14297:3;14339:4;14321:16;14318:26;14315:39;;;14258:671;:::o;14315:39::-;14381:2;14375:9;-1:-1:-1;;14446:16:10;14442:25;;14439:1;14375:9;14418:50;14497:4;14491:11;14521:16;14556:18;14627:2;14620:4;14612:6;14608:17;14605:25;14600:2;14592:6;14589:14;14586:45;14583:58;;;14634:5;;;;;14258:671;:::o;14583:58::-;14671:6;14665:4;14661:17;14650:28;;14707:3;14701:10;14734:2;14726:6;14723:14;14720:27;;;14740:5;;;;;;14258:671;:::o;14720:27::-;14824:2;14805:16;14799:4;14795:27;14791:36;14784:4;14775:6;14770:3;14766:16;14762:27;14759:69;14756:82;;;14831:5;;;;;;14258:671;:::o;14756:82::-;14847:57;14898:4;14889:6;14881;14877:19;14873:30;14867:4;14847:57;:::i;:::-;-1:-1:-1;14920:3:10;;14258:671;-1:-1:-1;;;;;14258:671:10:o;15355:404::-;15557:2;15539:21;;;15596:2;15576:18;;;15569:30;15635:34;15630:2;15615:18;;15608:62;-1:-1:-1;;;15701:2:10;15686:18;;15679:38;15749:3;15734:19;;15355:404::o;15764:561::-;-1:-1:-1;;;;;16061:15:10;;;16043:34;;16113:15;;16108:2;16093:18;;16086:43;16160:2;16145:18;;16138:34;;;16203:2;16188:18;;16181:34;;;16023:3;16246;16231:19;;16224:32;;;15986:4;;16273:46;;16299:19;;16291:6;16273:46;:::i;:::-;16265:54;15764:561;-1:-1:-1;;;;;;;15764:561:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1012800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8237,
									"end": 8250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 570,
									"end": 17120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1439,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1423,
									"end": 1440,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1491,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1457,
									"end": 1475,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1454,
									"end": 1492,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1546,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1559,
									"end": 1574,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1602,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220854d06471b9ad3aec48c1c67f470fa6eca5264e733780734723148f779996ce264736f6c634300080e0033",
									".code": [
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8240,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8370,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8309,
											"end": 8371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9067,
											"end": 9097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8853,
											"end": 9267,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4431,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9486,
											"end": 9516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9586,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9272,
											"end": 9677,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2880,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3010,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3023,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3000,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2981,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2962,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3240,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10086,
											"end": 10491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3936,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10680,
											"end": 10701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10776,
											"end": 10810,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10749,
											"end": 10811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10820,
											"end": 10858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10496,
											"end": 10900,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6522,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6780,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6817,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6897,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7085,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6748,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7138,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7266,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12529,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12509,
											"end": 12530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12639,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12578,
											"end": 12640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12649,
											"end": 12688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12325,
											"end": 12730,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5113,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5254,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5312,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5470,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5642,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5812,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16772,
											"end": 16786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15175,
											"end": 15177,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15148,
											"end": 15178,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15248,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15187,
											"end": 15249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15258,
											"end": 15308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14934,
											"end": 15350,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 16636,
											"end": 16686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16127,
											"end": 16919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17070,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15838,
											"end": 15888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2042,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2422,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2599,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2882,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2966,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3598,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3659,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4240,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4288,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4480,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4662,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4847,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5416,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5500,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5836,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 6048,
											"end": 6111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 6761,
											"end": 6817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6952,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 6957,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6993,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7095,
											"end": 7127,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7367,
											"end": 7376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7348,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7396,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7605,
											"end": 7638,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7674,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7722,
											"end": 7760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7811,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7858,
											"end": 7860,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7862,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7916,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 7996,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8669,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8653,
											"end": 8670,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8722,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8774,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8755,
											"end": 8775,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9743,
											"end": 9753,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9734,
											"end": 9754,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9803,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9885,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9866,
											"end": 9886,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9896,
											"end": 9911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9935,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 10026,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11119,
											"end": 11149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11185,
											"end": 11219,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11253,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11229,
											"end": 11264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 11306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11552,
											"end": 11554,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11525,
											"end": 11555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11564,
											"end": 11626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11635,
											"end": 11675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11311,
											"end": 11717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 11799,
											"end": 11817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12190,
											"end": 12192,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12173,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12138,
											"end": 12194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12252,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12203,
											"end": 12253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12270,
											"end": 12314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12314,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 12320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13410,
											"end": 13453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13545,
											"end": 13551,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 13516,
											"end": 13573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13609,
											"end": 13631,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13604,
											"end": 13606,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13593,
											"end": 13602,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13582,
											"end": 13632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 13692,
											"end": 13698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 13690,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 13655,
											"end": 13699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13740,
											"end": 13746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13736,
											"end": 13758,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13730,
											"end": 13733,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13715,
											"end": 13734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13708,
											"end": 13759,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 13802,
											"end": 13808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13800,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 13776,
											"end": 13809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13768,
											"end": 13809,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12988,
											"end": 13815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13889,
											"end": 13895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13942,
											"end": 13944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13930,
											"end": 13939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13921,
											"end": 13928,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13917,
											"end": 13940,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 13945,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 13960,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13990,
											"end": 13999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13984,
											"end": 14000,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 14033,
											"end": 14038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 14009,
											"end": 14039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 14133,
											"end": 14149,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14130,
											"end": 14153,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14176,
											"end": 14199,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14228,
											"end": 14236,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14223,
											"end": 14226,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14074,
											"end": 14253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14297,
											"end": 14300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14343,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14321,
											"end": 14337,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14318,
											"end": 14344,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14383,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14446,
											"end": 14462,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14439,
											"end": 14440,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14468,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 14497,
											"end": 14501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14521,
											"end": 14537,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14574,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14627,
											"end": 14629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14608,
											"end": 14625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14605,
											"end": 14630,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14600,
											"end": 14602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14592,
											"end": 14598,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14589,
											"end": 14603,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14586,
											"end": 14631,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14661,
											"end": 14678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14701,
											"end": 14711,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 14737,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14821,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14799,
											"end": 14803,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14791,
											"end": 14827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14784,
											"end": 14788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14770,
											"end": 14773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14766,
											"end": 14782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14762,
											"end": 14789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14759,
											"end": 14828,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 14898,
											"end": 14902,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14881,
											"end": 14887,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14877,
											"end": 14896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14867,
											"end": 14871,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14847,
											"end": 14904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14258,
											"end": 14929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15557,
											"end": 15559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15598,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15569,
											"end": 15599,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15635,
											"end": 15669,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15630,
											"end": 15632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15608,
											"end": 15670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15703,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15749,
											"end": 15752,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15355,
											"end": 15759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16086,
											"end": 16129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16160,
											"end": 16162,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16203,
											"end": 16205,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 16246,
											"end": 16249,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16291,
											"end": 16297,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 16273,
											"end": 16319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16265,
											"end": 16319,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15764,
											"end": 16325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
								"azero-swap-contracts/contracts/szERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1395,
								"contract": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c1615eb9d97e44b8426bcdc5e9208b7f90723338657e71cd5b3b7c08804231b364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1615eb9d97e44b8426bcdc5e9208b7f90723338657e71cd5b3b7c08804231b364736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH2 0x5EB9 0xD9 PUSH31 0x44B8426BCDC5E9208B7F90723338657E71CD5B3B7C08804231B364736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c1615eb9d97e44b8426bcdc5e9208b7f90723338657e71cd5b3b7c08804231b364736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH2 0x5EB9 0xD9 PUSH31 0x44B8426BCDC5E9208B7F90723338657E71CD5B3B7C08804231B364736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "194:8061:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1615eb9d97e44b8426bcdc5e9208b7f90723338657e71cd5b3b7c08804231b364736f6c634300080e0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
								"azero-swap-contracts/contracts/szERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"azero-swap-contracts/contracts/szERC1155.sol": {
				"szERC1155": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"azero-swap-contracts/contracts/szERC1155.sol\":201:233  string contractName = \"SwapZero\" */\n  0xc0\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":158:709  contract szERC1155 is ERC1155Supply {... */\n  0x40\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":201:233  string contractName = \"SwapZero\" */\n  mstore\n  0x08\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":158:709  contract szERC1155 is ERC1155Supply {... */\n  0x80\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":201:233  string contractName = \"SwapZero\" */\n  dup2\n  swap1\n  mstore\n  shl(0xc0, 0x537761705a65726f)\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x04\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":239:268  string contractSymbol = \"SWZ\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x03\n  dup1\n  dup3\n  mstore\n  shl(0xe9, 0x29abad)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_3\n  swap2\n  0x05\n  swap2\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":297:343  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  0x40\n  dup1\n  mload\n  0x20\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n  0x00\n  dup2\n  mstore\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_8\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  dup2\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_9\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_8:\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":158:709  contract szERC1155 is ERC1155Supply {... */\n  jump(tag_25)\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  dup1\n  mload\n  tag_13\n  swap1\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n  swap1\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_13:\n  pop\n    /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":158:709  contract szERC1155 is ERC1155Supply {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_17\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_20)\ntag_17:\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_18:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_19)\ntag_20:\n  pop\n  tag_21\n  swap3\n  swap2\n  pop\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_23)\n    /* \"#utility.yul\":14:394   */\ntag_15:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_27:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  sub\n    /* \"#utility.yul\":227:388   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_28:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_25:\n    /* \"azero-swap-contracts/contracts/szERC1155.sol\":158:709  contract szERC1155 is ERC1155Supply {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":158:709  contract szERC1155 is ERC1155Supply {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f558e79\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":349:467  function name()... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_6:\n      tag_30\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":601:707  function decimals()... */\n    tag_8:\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":698:700  18 */\n      0x12\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":601:707  function decimals()... */\n      jump(tag_18)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_9:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":901:1021  function exists(uint256 id) public view virtual returns (bool) {... */\n    tag_10:\n      tag_24\n      tag_53\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_53:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":958:962  bool */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:797  _totalSupply */\n      0x03\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      iszero\n      iszero\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":901:1021  function exists(uint256 id) public view virtual returns (bool) {... */\n      jump\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":473:595  function symbol()... */\n    tag_11:\n      tag_30\n      tag_57\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_39\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":697:808  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_18\n      tag_64\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_64:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":759:766  uint256 */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      swap1\n      dup2\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:797  _totalSupply */\n      0x03\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":785:801  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":697:808  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_14:\n      tag_24\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_15:\n      tag_39\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_21:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      dup4\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8240:8261   */\n      mstore\n        /* \"#utility.yul\":8297:8299   */\n      0x2b\n        /* \"#utility.yul\":8277:8295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8270:8300   */\n      mstore\n        /* \"#utility.yul\":8336:8370   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8316:8334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8309:8371   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8387:8405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8380:8421   */\n      mstore\n        /* \"#utility.yul\":8438:8457   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_81\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_81:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_83\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_83:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":349:467  function name()... */\n    tag_31:\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":412:425  string memory */\n      0x60\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":448:460  contractName */\n      0x04\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":441:460  return contractName */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":349:467  function name()... */\n      swap1\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_37:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_87\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_87\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      dup6\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      eq\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_102\n      jumpi\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_102\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_68\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n    tag_102:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9055:9057   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9037:9058   */\n      mstore\n        /* \"#utility.yul\":9094:9096   */\n      0x32\n        /* \"#utility.yul\":9074:9092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9067:9097   */\n      mstore\n        /* \"#utility.yul\":9133:9167   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9113:9131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9106:9168   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9184:9202   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9177:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9261   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_78\n        /* \"#utility.yul\":8853:9267   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n    tag_104:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_107\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_108\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_107:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_49:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9456:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9515   */\n      0x29\n        /* \"#utility.yul\":9493:9511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9486:9516   */\n      mstore\n        /* \"#utility.yul\":9552:9586   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9532:9550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9525:9587   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9603:9621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9596:9635   */\n      mstore\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_78\n        /* \"#utility.yul\":9272:9677   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_111:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_115\n      jumpi\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_117:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_118:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_121\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_126\n      tag_124\n      jump\t// in\n    tag_126:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_21\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_121:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_128\n      tag_124\n      jump\t// in\n    tag_128:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      tag_129\n      dup2\n      tag_130\n      jump\t// in\n    tag_129:\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_118)\n    tag_119:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      swap4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":473:595  function symbol()... */\n    tag_57:\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":538:551  string memory */\n      0x60\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":574:588  contractSymbol */\n      0x05\n        /* \"azero-swap-contracts/contracts/szERC1155.sol\":567:588  return contractSymbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_62:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_140\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_142\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_140:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      dup6\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      eq\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_148\n      jumpi\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_148\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_68\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n    tag_148:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x29\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10449   */\n      mstore\n        /* \"#utility.yul\":10466:10485   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_78\n        /* \"#utility.yul\":10086:10491   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n    tag_150:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_107\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_154\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_108:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10698:10700   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10680:10701   */\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x28\n        /* \"#utility.yul\":10717:10735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10710:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10810   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10756:10774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10749:10811   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10820:10858   */\n      mstore\n        /* \"#utility.yul\":10875:10894   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_78\n        /* \"#utility.yul\":10496:10900   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_163\n      jump\t// in\n    tag_161:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_165\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6672:6676  from */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6678:6680  to */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6682:6685  ids */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6687:6694  amounts */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6696:6700  data */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6641:6661  _beforeTokenTransfer */\n      tag_166\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_165:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6717:6726  uint256 i */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_167:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_124\n      jump\t// in\n    tag_171:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_173\n      tag_124\n      jump\t// in\n    tag_173:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_176\n      jump\t// in\n    tag_174:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_177\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      dup5\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      tag_178\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_179\n      swap1\n      tag_130\n      jump\t// in\n    tag_179:\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_167)\n    tag_168:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_184\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_185\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_184:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_142:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      and\n      sub\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12527:12529   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12509:12530   */\n      mstore\n        /* \"#utility.yul\":12566:12568   */\n      0x29\n        /* \"#utility.yul\":12546:12564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12539:12569   */\n      mstore\n        /* \"#utility.yul\":12605:12639   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12585:12603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12578:12640   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12656:12674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12649:12688   */\n      mstore\n        /* \"#utility.yul\":12705:12724   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_78\n        /* \"#utility.yul\":12325:12730   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_163\n      jump\t// in\n    tag_192:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_195\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_196\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_195:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_197\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_196\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_197:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_198\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5369:5377  operator */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5379:5383  from */\n      dup10\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5385:5387  to */\n      dup10\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5389:5392  ids */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5394:5401  amounts */\n      dup6\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5403:5407  data */\n      dup10\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5348:5368  _beforeTokenTransfer */\n      tag_166\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_198:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_176\n      jump\t// in\n    tag_199:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup9\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_201\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      dup5\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      tag_178\n      jump\t// in\n    tag_201:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12909:12934   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup2\n      add\n        /* \"#utility.yul\":12943:12977   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12882:12900   */\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_205\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_206\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_205:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1091:1995  function _beforeTokenTransfer(... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1403:1421  from == address(0) */\n      dup6\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1399:1555  if (from == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1442:1451  uint256 i */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1437:1545  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_211:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1461:1464  ids */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1461:1471  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1457:1458  i */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1457:1471  i < ids.length */\n      lt\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1437:1545  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1520:1527  amounts */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1528:1529  i */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1520:1530  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_124\n      jump\t// in\n    tag_215:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1496:1508  _totalSupply */\n      0x03\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1496:1516  _totalSupply[ids[i]] */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1509:1512  ids */\n      dup7\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1513:1514  i */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1509:1515  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_217\n      jumpi\n      tag_217\n      tag_124\n      jump\t// in\n    tag_217:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1496:1516  _totalSupply[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1496:1530  _totalSupply[ids[i]] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_218\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_218:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1473:1476  ++i */\n      tag_219\n      swap1\n      pop\n      dup2\n      tag_130\n      jump\t// in\n    tag_219:\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1437:1545  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_211)\n    tag_212:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1399:1555  if (from == address(0)) {... */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1569:1585  to == address(0) */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1565:1989  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1606:1615  uint256 i */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1601:1979  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_221:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1625:1628  ids */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1625:1635  ids.length */\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1621:1622  i */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1621:1635  i < ids.length */\n      lt\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1601:1979  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1660:1670  uint256 id */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1673:1676  ids */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1677:1678  i */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1673:1679  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_124\n      jump\t// in\n    tag_225:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1660:1679  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1697:1711  uint256 amount */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1714:1721  amounts */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1722:1723  i */\n      dup4\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1714:1724  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_124\n      jump\t// in\n    tag_227:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1697:1724  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1742:1756  uint256 supply */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1759:1771  _totalSupply */\n      0x03\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1759:1775  _totalSupply[id] */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1772:1774  id */\n      dup5\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1759:1775  _totalSupply[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1742:1775  uint256 supply = _totalSupply[id] */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1811:1817  amount */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1801:1807  supply */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1801:1817  supply >= amount */\n      lt\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1793:1862  require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13190:13192   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1793:1862  require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13172:13193   */\n      mstore\n        /* \"#utility.yul\":13229:13231   */\n      0x28\n        /* \"#utility.yul\":13209:13227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13202:13232   */\n      mstore\n        /* \"#utility.yul\":13268:13302   */\n      0x455243313135353a206275726e20616d6f756e74206578636565647320746f74\n        /* \"#utility.yul\":13248:13266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13241:13303   */\n      mstore\n      shl(0xc0, 0x616c537570706c79)\n        /* \"#utility.yul\":13319:13337   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13312:13350   */\n      mstore\n        /* \"#utility.yul\":13367:13386   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1793:1862  require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\") */\n      tag_78\n        /* \"#utility.yul\":12988:13392   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1793:1862  require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\") */\n    tag_228:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1912:1928  _totalSupply[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1912:1924  _totalSupply */\n      0x03\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1912:1928  _totalSupply[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1931:1946  supply - amount */\n      swap2\n      sub\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1912:1946  _totalSupply[id] = supply - amount */\n      swap1\n      sstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1637:1640  ++i */\n      tag_231\n      dup2\n      tag_130\n      jump\t// in\n    tag_231:\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1601:1979  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_221)\n    tag_222:\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1091:1995  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      tag_184\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_237\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_238\n      jump\t// in\n    tag_237:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_240\n      swap2\n      dup2\n      add\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      0x01\n    tag_239:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_242\n      jumpi\n      tag_246\n      tag_247\n      jump\t// in\n    tag_246:\n      dup1\n      0x08c379a0\n      sub\n      tag_245\n      jumpi\n      pop\n      tag_248\n      tag_249\n      jump\t// in\n    tag_248:\n      dup1\n      tag_250\n      jumpi\n      pop\n      jump(tag_244)\n    tag_250:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_245:\n      pop\n    tag_244:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15545:15547   */\n      0x20\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15527:15548   */\n      mstore\n        /* \"#utility.yul\":15584:15586   */\n      0x34\n        /* \"#utility.yul\":15564:15582   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15557:15587   */\n      mstore\n        /* \"#utility.yul\":15623:15657   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15603:15621   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15596:15658   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15674:15692   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15667:15717   */\n      mstore\n        /* \"#utility.yul\":15734:15753   */\n      0x84\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_78\n        /* \"#utility.yul\":15343:15759   */\n      jump\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_242:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_222\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_257\n      jump\t// in\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_196:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n      swap2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n      swap2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_124\n      jump\t// in\n    tag_263:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      mstore\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      swap3\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      dup5\n      and\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      tag_184\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_267\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup10\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup9\n      swap1\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_268\n      jump\t// in\n    tag_267:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_269\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_270\n      swap2\n      dup2\n      add\n      swap1\n      tag_241\n      jump\t// in\n    tag_270:\n      0x01\n    tag_269:\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_271\n      jumpi\n      tag_246\n      tag_247\n      jump\t// in\n    tag_271:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_222\n      jumpi\n        /* \"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_257\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_285:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_296:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_20:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_298:\n        /* \"#utility.yul\":360:389   */\n      tag_299\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_285\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_286:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_302:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_26:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_304:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_305\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_286\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1683   */\n    tag_287:\n        /* \"#utility.yul\":1253:1256   */\n      0x00\n        /* \"#utility.yul\":1291:1296   */\n      dup2\n        /* \"#utility.yul\":1285:1297   */\n      mload\n        /* \"#utility.yul\":1318:1324   */\n      dup1\n        /* \"#utility.yul\":1313:1316   */\n      dup5\n        /* \"#utility.yul\":1306:1325   */\n      mstore\n        /* \"#utility.yul\":1343:1344   */\n      0x00\n        /* \"#utility.yul\":1353:1515   */\n    tag_308:\n        /* \"#utility.yul\":1367:1373   */\n      dup2\n        /* \"#utility.yul\":1364:1365   */\n      dup2\n        /* \"#utility.yul\":1361:1374   */\n      lt\n        /* \"#utility.yul\":1353:1515   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1429:1433   */\n      0x20\n        /* \"#utility.yul\":1485:1498   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1481:1503   */\n      dup2\n      add\n        /* \"#utility.yul\":1475:1504   */\n      mload\n        /* \"#utility.yul\":1457:1468   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1453:1473   */\n      dup3\n      add\n        /* \"#utility.yul\":1446:1505   */\n      mstore\n        /* \"#utility.yul\":1382:1394   */\n      add\n        /* \"#utility.yul\":1353:1515   */\n      jump(tag_308)\n    tag_310:\n        /* \"#utility.yul\":1533:1539   */\n      dup2\n        /* \"#utility.yul\":1530:1531   */\n      dup2\n        /* \"#utility.yul\":1527:1540   */\n      gt\n        /* \"#utility.yul\":1524:1611   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1583:1589   */\n      dup4\n        /* \"#utility.yul\":1578:1581   */\n      dup8\n        /* \"#utility.yul\":1574:1590   */\n      add\n        /* \"#utility.yul\":1570:1597   */\n      add\n        /* \"#utility.yul\":1563:1601   */\n      mstore\n        /* \"#utility.yul\":1524:1611   */\n    tag_311:\n      pop\n        /* \"#utility.yul\":1665:1667   */\n      0x1f\n        /* \"#utility.yul\":1644:1659   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1640:1669   */\n      and\n        /* \"#utility.yul\":1631:1670   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1672:1676   */\n      0x20\n        /* \"#utility.yul\":1627:1677   */\n      add\n      swap3\n        /* \"#utility.yul\":1211:1683   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1688:1908   */\n    tag_33:\n        /* \"#utility.yul\":1837:1839   */\n      0x20\n        /* \"#utility.yul\":1826:1835   */\n      dup2\n        /* \"#utility.yul\":1819:1840   */\n      mstore\n        /* \"#utility.yul\":1800:1804   */\n      0x00\n        /* \"#utility.yul\":1857:1902   */\n      tag_305\n        /* \"#utility.yul\":1898:1900   */\n      0x20\n        /* \"#utility.yul\":1887:1896   */\n      dup4\n        /* \"#utility.yul\":1883:1901   */\n      add\n        /* \"#utility.yul\":1875:1881   */\n      dup5\n        /* \"#utility.yul\":1857:1902   */\n      tag_287\n      jump\t// in\n        /* \"#utility.yul\":1913:2093   */\n    tag_36:\n        /* \"#utility.yul\":1972:1978   */\n      0x00\n        /* \"#utility.yul\":2025:2027   */\n      0x20\n        /* \"#utility.yul\":2013:2022   */\n      dup3\n        /* \"#utility.yul\":2004:2011   */\n      dup5\n        /* \"#utility.yul\":2000:2023   */\n      sub\n        /* \"#utility.yul\":1996:2028   */\n      slt\n        /* \"#utility.yul\":1993:2045   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":2041:2042   */\n      0x00\n        /* \"#utility.yul\":2038:2039   */\n      dup1\n        /* \"#utility.yul\":2031:2043   */\n      revert\n        /* \"#utility.yul\":1993:2045   */\n    tag_315:\n      pop\n        /* \"#utility.yul\":2064:2087   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1913:2093   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2098:2225   */\n    tag_116:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_288:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_319\n      tag_116\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_289:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_322\n      tag_116\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_290:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_324:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_325\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_289\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_326\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_288\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_327:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_328:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_328)\n    tag_330:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_291:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_332:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_334\n      tag_116\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_335\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_288\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_336:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_41:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_338:\n        /* \"#utility.yul\":4240:4269   */\n      tag_339\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_285\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_340\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_285\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_341:\n        /* \"#utility.yul\":4480:4541   */\n      tag_342\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_290\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_343:\n        /* \"#utility.yul\":4662:4725   */\n      tag_344\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_290\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_345:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_346\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_291\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_48:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_348:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_349:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_350:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_351\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_289\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_352\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_288\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_353:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_354:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_357\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_285\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_354)\n    tag_356:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_358:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_359\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_290\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_292:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_361:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_361)\n    tag_363:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_51:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_305\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_292\n      jump\t// in\n        /* \"#utility.yul\":6828:7175   */\n    tag_61:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6954:6956   */\n      0x40\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6933:6940   */\n      dup6\n        /* \"#utility.yul\":6929:6952   */\n      sub\n        /* \"#utility.yul\":6925:6957   */\n      slt\n        /* \"#utility.yul\":6922:6974   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":6922:6974   */\n    tag_367:\n        /* \"#utility.yul\":6993:7022   */\n      tag_368\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":6993:7022   */\n      tag_285\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6983:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7075   */\n      add\n        /* \"#utility.yul\":7044:7076   */\n      calldataload\n        /* \"#utility.yul\":7119:7124   */\n      dup1\n        /* \"#utility.yul\":7112:7125   */\n      iszero\n        /* \"#utility.yul\":7105:7126   */\n      iszero\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7127   */\n      eq\n        /* \"#utility.yul\":7085:7145   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7138:7139   */\n      dup1\n        /* \"#utility.yul\":7131:7143   */\n      revert\n        /* \"#utility.yul\":7085:7145   */\n    tag_369:\n        /* \"#utility.yul\":7164:7169   */\n      dup1\n        /* \"#utility.yul\":7154:7169   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7180:7440   */\n    tag_69:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_371:\n        /* \"#utility.yul\":7348:7377   */\n      tag_372\n        /* \"#utility.yul\":7367:7376   */\n      dup4\n        /* \"#utility.yul\":7348:7377   */\n      tag_285\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7338:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7396:7434   */\n      tag_373\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"#utility.yul\":7419:7428   */\n      dup5\n        /* \"#utility.yul\":7415:7433   */\n      add\n        /* \"#utility.yul\":7396:7434   */\n      tag_285\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7386:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7180:7440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:8051   */\n    tag_74:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7565:7571   */\n      0x00\n        /* \"#utility.yul\":7573:7579   */\n      dup1\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7634:7637   */\n      0xa0\n        /* \"#utility.yul\":7622:7631   */\n      dup7\n        /* \"#utility.yul\":7613:7620   */\n      dup9\n        /* \"#utility.yul\":7609:7632   */\n      sub\n        /* \"#utility.yul\":7605:7638   */\n      slt\n        /* \"#utility.yul\":7602:7655   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7602:7655   */\n    tag_375:\n        /* \"#utility.yul\":7674:7703   */\n      tag_376\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7674:7703   */\n      tag_285\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7664:7703   */\n      swap5\n      pop\n        /* \"#utility.yul\":7722:7760   */\n      tag_377\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup8\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7722:7760   */\n      tag_285\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7712:7760   */\n      swap4\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x40\n        /* \"#utility.yul\":7796:7805   */\n      dup7\n        /* \"#utility.yul\":7792:7810   */\n      add\n        /* \"#utility.yul\":7779:7811   */\n      calldataload\n        /* \"#utility.yul\":7769:7811   */\n      swap3\n      pop\n        /* \"#utility.yul\":7858:7860   */\n      0x60\n        /* \"#utility.yul\":7847:7856   */\n      dup7\n        /* \"#utility.yul\":7843:7861   */\n      add\n        /* \"#utility.yul\":7830:7862   */\n      calldataload\n        /* \"#utility.yul\":7820:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:7916   */\n      0x80\n        /* \"#utility.yul\":7902:7911   */\n      dup7\n        /* \"#utility.yul\":7898:7917   */\n      add\n        /* \"#utility.yul\":7885:7918   */\n      calldataload\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup2\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7977   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup1\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7927:7977   */\n    tag_378:\n        /* \"#utility.yul\":7996:8045   */\n      tag_346\n        /* \"#utility.yul\":8037:8044   */\n      dup9\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup10\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7996:8045   */\n      tag_291\n      jump\t// in\n        /* \"#utility.yul\":8468:8848   */\n    tag_87:\n        /* \"#utility.yul\":8547:8548   */\n      0x01\n        /* \"#utility.yul\":8543:8555   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8590:8602   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8611:8672   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":8665:8669   */\n      0x7f\n        /* \"#utility.yul\":8657:8663   */\n      dup3\n        /* \"#utility.yul\":8653:8670   */\n      and\n        /* \"#utility.yul\":8643:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8611:8672   */\n    tag_382:\n        /* \"#utility.yul\":8718:8720   */\n      0x20\n        /* \"#utility.yul\":8710:8716   */\n      dup3\n        /* \"#utility.yul\":8707:8721   */\n      lt\n        /* \"#utility.yul\":8687:8705   */\n      dup2\n        /* \"#utility.yul\":8684:8722   */\n      sub\n        /* \"#utility.yul\":8681:8842   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":8764:8774   */\n      0x4e487b71\n        /* \"#utility.yul\":8759:8762   */\n      0xe0\n        /* \"#utility.yul\":8755:8775   */\n      shl\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8745:8776   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x22\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8827:8831   */\n      0x24\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8817:8832   */\n      revert\n        /* \"#utility.yul\":8681:8842   */\n    tag_383:\n      pop\n        /* \"#utility.yul\":8468:8848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9809   */\n    tag_124:\n        /* \"#utility.yul\":9743:9753   */\n      0x4e487b71\n        /* \"#utility.yul\":9738:9741   */\n      0xe0\n        /* \"#utility.yul\":9734:9754   */\n      shl\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9724:9755   */\n      mstore\n        /* \"#utility.yul\":9774:9778   */\n      0x32\n        /* \"#utility.yul\":9771:9772   */\n      0x04\n        /* \"#utility.yul\":9764:9779   */\n      mstore\n        /* \"#utility.yul\":9798:9802   */\n      0x24\n        /* \"#utility.yul\":9795:9796   */\n      0x00\n        /* \"#utility.yul\":9788:9803   */\n      revert\n        /* \"#utility.yul\":9814:9941   */\n    tag_293:\n        /* \"#utility.yul\":9875:9885   */\n      0x4e487b71\n        /* \"#utility.yul\":9870:9873   */\n      0xe0\n        /* \"#utility.yul\":9866:9886   */\n      shl\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9887   */\n      mstore\n        /* \"#utility.yul\":9906:9910   */\n      0x11\n        /* \"#utility.yul\":9903:9904   */\n      0x04\n        /* \"#utility.yul\":9896:9911   */\n      mstore\n        /* \"#utility.yul\":9930:9934   */\n      0x24\n        /* \"#utility.yul\":9927:9928   */\n      0x00\n        /* \"#utility.yul\":9920:9935   */\n      revert\n        /* \"#utility.yul\":9946:10081   */\n    tag_130:\n        /* \"#utility.yul\":9985:9988   */\n      0x00\n        /* \"#utility.yul\":10006:10023   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10003:10046   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_390\n      tag_293\n      jump\t// in\n    tag_390:\n      pop\n        /* \"#utility.yul\":10073:10074   */\n      0x01\n        /* \"#utility.yul\":10062:10075   */\n      add\n      swap1\n        /* \"#utility.yul\":9946:10081   */\n      jump\t// out\n        /* \"#utility.yul\":10905:11306   */\n    tag_163:\n        /* \"#utility.yul\":11107:11109   */\n      0x20\n        /* \"#utility.yul\":11089:11110   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11146:11148   */\n      0x25\n        /* \"#utility.yul\":11126:11144   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11119:11149   */\n      mstore\n        /* \"#utility.yul\":11185:11219   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11180:11182   */\n      0x40\n        /* \"#utility.yul\":11165:11183   */\n      dup3\n      add\n        /* \"#utility.yul\":11158:11220   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11251:11253   */\n      0x60\n        /* \"#utility.yul\":11236:11254   */\n      dup3\n      add\n        /* \"#utility.yul\":11229:11264   */\n      mstore\n        /* \"#utility.yul\":11296:11299   */\n      0x80\n        /* \"#utility.yul\":11281:11300   */\n      add\n      swap1\n        /* \"#utility.yul\":10905:11306   */\n      jump\t// out\n        /* \"#utility.yul\":11311:11717   */\n    tag_176:\n        /* \"#utility.yul\":11513:11515   */\n      0x20\n        /* \"#utility.yul\":11495:11516   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11552:11554   */\n      0x2a\n        /* \"#utility.yul\":11532:11550   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11525:11555   */\n      mstore\n        /* \"#utility.yul\":11591:11625   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11586:11588   */\n      0x40\n        /* \"#utility.yul\":11571:11589   */\n      dup3\n      add\n        /* \"#utility.yul\":11564:11626   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11657:11659   */\n      0x60\n        /* \"#utility.yul\":11642:11660   */\n      dup3\n      add\n        /* \"#utility.yul\":11635:11675   */\n      mstore\n        /* \"#utility.yul\":11707:11710   */\n      0x80\n        /* \"#utility.yul\":11692:11711   */\n      add\n      swap1\n        /* \"#utility.yul\":11311:11717   */\n      jump\t// out\n        /* \"#utility.yul\":11722:11850   */\n    tag_178:\n        /* \"#utility.yul\":11762:11765   */\n      0x00\n        /* \"#utility.yul\":11793:11794   */\n      dup3\n        /* \"#utility.yul\":11789:11795   */\n      not\n        /* \"#utility.yul\":11786:11787   */\n      dup3\n        /* \"#utility.yul\":11783:11796   */\n      gt\n        /* \"#utility.yul\":11780:11819   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":11799:11817   */\n      tag_397\n      tag_293\n      jump\t// in\n    tag_397:\n      pop\n        /* \"#utility.yul\":11835:11844   */\n      add\n      swap1\n        /* \"#utility.yul\":11722:11850   */\n      jump\t// out\n        /* \"#utility.yul\":11855:12320   */\n    tag_181:\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12101:12110   */\n      dup2\n        /* \"#utility.yul\":12094:12115   */\n      mstore\n        /* \"#utility.yul\":12075:12079   */\n      0x00\n        /* \"#utility.yul\":12138:12194   */\n      tag_399\n        /* \"#utility.yul\":12190:12192   */\n      0x40\n        /* \"#utility.yul\":12179:12188   */\n      dup4\n        /* \"#utility.yul\":12175:12193   */\n      add\n        /* \"#utility.yul\":12167:12173   */\n      dup6\n        /* \"#utility.yul\":12138:12194   */\n      tag_292\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12242:12251   */\n      dup3\n        /* \"#utility.yul\":12234:12240   */\n      dup2\n        /* \"#utility.yul\":12230:12252   */\n      sub\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12214:12223   */\n      dup5\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12203:12253   */\n      mstore\n        /* \"#utility.yul\":12270:12314   */\n      tag_400\n        /* \"#utility.yul\":12307:12313   */\n      dup2\n        /* \"#utility.yul\":12299:12305   */\n      dup6\n        /* \"#utility.yul\":12270:12314   */\n      tag_292\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12262:12314   */\n      swap6\n        /* \"#utility.yul\":11855:12320   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13397:14224   */\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13794:13809   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13776:13810   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13846:13861   */\n      dup6\n      and\n        /* \"#utility.yul\":13841:13843   */\n      0x20\n        /* \"#utility.yul\":13826:13844   */\n      dup3\n      add\n        /* \"#utility.yul\":13819:13862   */\n      mstore\n        /* \"#utility.yul\":13756:13759   */\n      0xa0\n        /* \"#utility.yul\":13893:13895   */\n      0x40\n        /* \"#utility.yul\":13878:13896   */\n      dup3\n      add\n        /* \"#utility.yul\":13871:13902   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13719:13723   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13925:13982   */\n      tag_405\n      swap1\n        /* \"#utility.yul\":13962:13981   */\n      dup4\n      add\n        /* \"#utility.yul\":13954:13960   */\n      dup7\n        /* \"#utility.yul\":13925:13982   */\n      tag_292\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":14030:14039   */\n      dup3\n        /* \"#utility.yul\":14022:14028   */\n      dup2\n        /* \"#utility.yul\":14018:14040   */\n      sub\n        /* \"#utility.yul\":14013:14015   */\n      0x60\n        /* \"#utility.yul\":14002:14011   */\n      dup5\n        /* \"#utility.yul\":13998:14016   */\n      add\n        /* \"#utility.yul\":13991:14041   */\n      mstore\n        /* \"#utility.yul\":14064:14108   */\n      tag_406\n        /* \"#utility.yul\":14101:14107   */\n      dup2\n        /* \"#utility.yul\":14093:14099   */\n      dup7\n        /* \"#utility.yul\":14064:14108   */\n      tag_292\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":14050:14108   */\n      swap1\n      pop\n        /* \"#utility.yul\":14157:14166   */\n      dup3\n        /* \"#utility.yul\":14149:14155   */\n      dup2\n        /* \"#utility.yul\":14145:14167   */\n      sub\n        /* \"#utility.yul\":14139:14142   */\n      0x80\n        /* \"#utility.yul\":14128:14137   */\n      dup5\n        /* \"#utility.yul\":14124:14143   */\n      add\n        /* \"#utility.yul\":14117:14168   */\n      mstore\n        /* \"#utility.yul\":14185:14218   */\n      tag_407\n        /* \"#utility.yul\":14211:14217   */\n      dup2\n        /* \"#utility.yul\":14203:14209   */\n      dup6\n        /* \"#utility.yul\":14185:14218   */\n      tag_287\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14177:14218   */\n      swap9\n        /* \"#utility.yul\":13397:14224   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14229:14478   */\n    tag_241:\n        /* \"#utility.yul\":14298:14304   */\n      0x00\n        /* \"#utility.yul\":14351:14353   */\n      0x20\n        /* \"#utility.yul\":14339:14348   */\n      dup3\n        /* \"#utility.yul\":14330:14337   */\n      dup5\n        /* \"#utility.yul\":14326:14349   */\n      sub\n        /* \"#utility.yul\":14322:14354   */\n      slt\n        /* \"#utility.yul\":14319:14371   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":14367:14368   */\n      0x00\n        /* \"#utility.yul\":14364:14365   */\n      dup1\n        /* \"#utility.yul\":14357:14369   */\n      revert\n        /* \"#utility.yul\":14319:14371   */\n    tag_409:\n        /* \"#utility.yul\":14399:14408   */\n      dup2\n        /* \"#utility.yul\":14393:14409   */\n      mload\n        /* \"#utility.yul\":14418:14448   */\n      tag_305\n        /* \"#utility.yul\":14442:14447   */\n      dup2\n        /* \"#utility.yul\":14418:14448   */\n      tag_286\n      jump\t// in\n        /* \"#utility.yul\":14483:14662   */\n    tag_247:\n        /* \"#utility.yul\":14518:14521   */\n      0x00\n        /* \"#utility.yul\":14560:14561   */\n      0x03\n        /* \"#utility.yul\":14542:14558   */\n      returndatasize\n        /* \"#utility.yul\":14539:14562   */\n      gt\n        /* \"#utility.yul\":14536:14656   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":14606:14607   */\n      0x04\n        /* \"#utility.yul\":14603:14604   */\n      0x00\n        /* \"#utility.yul\":14600:14601   */\n      dup1\n        /* \"#utility.yul\":14585:14608   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14643:14644   */\n      0x00\n        /* \"#utility.yul\":14637:14645   */\n      mload\n        /* \"#utility.yul\":14632:14635   */\n      0xe0\n        /* \"#utility.yul\":14628:14646   */\n      shr\n        /* \"#utility.yul\":14536:14656   */\n    tag_412:\n        /* \"#utility.yul\":14483:14662   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14667:15338   */\n    tag_249:\n        /* \"#utility.yul\":14706:14709   */\n      0x00\n        /* \"#utility.yul\":14748:14752   */\n      0x44\n        /* \"#utility.yul\":14730:14746   */\n      returndatasize\n        /* \"#utility.yul\":14727:14753   */\n      lt\n        /* \"#utility.yul\":14724:14763   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":14667:15338   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14724:14763   */\n    tag_414:\n        /* \"#utility.yul\":14790:14792   */\n      0x40\n        /* \"#utility.yul\":14784:14793   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14855:14871   */\n      returndatasize\n        /* \"#utility.yul\":14851:14876   */\n      dup2\n      add\n        /* \"#utility.yul\":14848:14849   */\n      0x04\n        /* \"#utility.yul\":14784:14793   */\n      dup4\n        /* \"#utility.yul\":14827:14877   */\n      returndatacopy\n        /* \"#utility.yul\":14906:14910   */\n      dup2\n        /* \"#utility.yul\":14900:14911   */\n      mload\n        /* \"#utility.yul\":14930:14946   */\n      returndatasize\n        /* \"#utility.yul\":14965:14983   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15036:15038   */\n      dup2\n        /* \"#utility.yul\":15029:15033   */\n      0x24\n        /* \"#utility.yul\":15021:15027   */\n      dup5\n        /* \"#utility.yul\":15017:15034   */\n      add\n        /* \"#utility.yul\":15014:15039   */\n      gt\n        /* \"#utility.yul\":15009:15011   */\n      dup2\n        /* \"#utility.yul\":15001:15007   */\n      dup5\n        /* \"#utility.yul\":14998:15012   */\n      gt\n        /* \"#utility.yul\":14995:15040   */\n      or\n        /* \"#utility.yul\":14992:15050   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":15043:15048   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14667:15338   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14992:15050   */\n    tag_415:\n        /* \"#utility.yul\":15080:15086   */\n      dup3\n        /* \"#utility.yul\":15074:15078   */\n      dup6\n        /* \"#utility.yul\":15070:15087   */\n      add\n        /* \"#utility.yul\":15059:15087   */\n      swap2\n      pop\n        /* \"#utility.yul\":15116:15119   */\n      dup2\n        /* \"#utility.yul\":15110:15120   */\n      mload\n        /* \"#utility.yul\":15143:15145   */\n      dup2\n        /* \"#utility.yul\":15135:15141   */\n      dup2\n        /* \"#utility.yul\":15132:15146   */\n      gt\n        /* \"#utility.yul\":15129:15156   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":15149:15154   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14667:15338   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15129:15156   */\n    tag_416:\n        /* \"#utility.yul\":15233:15235   */\n      dup5\n        /* \"#utility.yul\":15214:15230   */\n      returndatasize\n        /* \"#utility.yul\":15208:15212   */\n      dup8\n        /* \"#utility.yul\":15204:15231   */\n      add\n        /* \"#utility.yul\":15200:15236   */\n      add\n        /* \"#utility.yul\":15193:15197   */\n      0x20\n        /* \"#utility.yul\":15184:15190   */\n      dup3\n        /* \"#utility.yul\":15179:15182   */\n      dup6\n        /* \"#utility.yul\":15175:15191   */\n      add\n        /* \"#utility.yul\":15171:15198   */\n      add\n        /* \"#utility.yul\":15168:15237   */\n      gt\n        /* \"#utility.yul\":15165:15247   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":15240:15245   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14667:15338   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15165:15247   */\n    tag_417:\n        /* \"#utility.yul\":15256:15313   */\n      tag_418\n        /* \"#utility.yul\":15307:15311   */\n      0x20\n        /* \"#utility.yul\":15298:15304   */\n      dup3\n        /* \"#utility.yul\":15290:15296   */\n      dup7\n        /* \"#utility.yul\":15286:15305   */\n      add\n        /* \"#utility.yul\":15282:15312   */\n      add\n        /* \"#utility.yul\":15276:15280   */\n      dup8\n        /* \"#utility.yul\":15256:15313   */\n      tag_288\n      jump\t// in\n    tag_418:\n      pop\n        /* \"#utility.yul\":15329:15332   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14667:15338   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15764:16168   */\n    tag_257:\n        /* \"#utility.yul\":15966:15968   */\n      0x20\n        /* \"#utility.yul\":15948:15969   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16005:16007   */\n      0x28\n        /* \"#utility.yul\":15985:16003   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15978:16008   */\n      mstore\n        /* \"#utility.yul\":16044:16078   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":16039:16041   */\n      0x40\n        /* \"#utility.yul\":16024:16042   */\n      dup3\n      add\n        /* \"#utility.yul\":16017:16079   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":16110:16112   */\n      0x60\n        /* \"#utility.yul\":16095:16113   */\n      dup3\n      add\n        /* \"#utility.yul\":16088:16126   */\n      mstore\n        /* \"#utility.yul\":16158:16161   */\n      0x80\n        /* \"#utility.yul\":16143:16162   */\n      add\n      swap1\n        /* \"#utility.yul\":15764:16168   */\n      jump\t// out\n        /* \"#utility.yul\":16173:16734   */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16470:16485   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16452:16486   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16522:16537   */\n      dup6\n      and\n        /* \"#utility.yul\":16517:16519   */\n      0x20\n        /* \"#utility.yul\":16502:16520   */\n      dup3\n      add\n        /* \"#utility.yul\":16495:16538   */\n      mstore\n        /* \"#utility.yul\":16569:16571   */\n      0x40\n        /* \"#utility.yul\":16554:16572   */\n      dup2\n      add\n        /* \"#utility.yul\":16547:16581   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16612:16614   */\n      0x60\n        /* \"#utility.yul\":16597:16615   */\n      dup2\n      add\n        /* \"#utility.yul\":16590:16624   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16432:16435   */\n      0xa0\n        /* \"#utility.yul\":16655:16658   */\n      0x80\n        /* \"#utility.yul\":16640:16659   */\n      dup3\n      add\n        /* \"#utility.yul\":16633:16665   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":16395:16399   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16682:16728   */\n      tag_422\n      swap1\n        /* \"#utility.yul\":16708:16727   */\n      dup4\n      add\n        /* \"#utility.yul\":16700:16706   */\n      dup5\n        /* \"#utility.yul\":16682:16728   */\n      tag_287\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":16674:16728   */\n      swap8\n        /* \"#utility.yul\":16173:16734   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220afc5592bb1df1d6194d0b4daae68a83d4e8dda9e5d55a38dfb5433d85c0cadc164736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1930": {
									"entryPoint": null,
									"id": 1930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_555": {
									"entryPoint": 136,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:10"
															},
															"nodeType": "YulIf",
															"src": "157:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:10"
															},
															"nodeType": "YulIf",
															"src": "227:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:10",
														"type": ""
													}
												],
												"src": "14:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526008608081905267537761705a65726f60c01b60a09081526200002b9160049190620000a1565b506040805180820190915260038082526229abad60e91b60209092019182526200005891600591620000a1565b503480156200006657600080fd5b50604080516020810190915260008152620000818162000088565b5062000183565b80516200009d906002906020840190620000a1565b5050565b828054620000af9062000147565b90600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000130565b5090565b5b808211156200012c576000815560010162000131565b600181811c908216806200015c57607f821691505b6020821081036200017d57634e487b7160e01b600052602260045260246000fd5b50919050565b61169e80620001936000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063a22cb46511610066578063a22cb465146101aa578063bd85b039146101bd578063e985e9c5146101dd578063f242432a1461021957600080fd5b80634e1273f4146101605780634f558e791461018057806395d89b41146101a257600080fd5b8062fdd58e146100d357806301ffc9a7146100f957806306fdde031461011c5780630e89341c146101315780632eb2c2d614610144578063313ce56714610159575b600080fd5b6100e66100e1366004610ea3565b61022c565b6040519081526020015b60405180910390f35b61010c610107366004610ee6565b6102c3565b60405190151581526020016100f0565b610124610315565b6040516100f09190610f57565b61012461013f366004610f6a565b6103a7565b6101576101523660046110cf565b61043b565b005b60126100e6565b61017361016e366004611179565b6104d2565b6040516100f0919061127f565b61010c61018e366004610f6a565b600090815260036020526040902054151590565b6101246105fc565b6101576101b8366004611292565b61060b565b6100e66101cb366004610f6a565b60009081526003602052604090205490565b61010c6101eb3660046112ce565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610157610227366004611301565b61061a565b60006001600160a01b03831661029d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102f457506001600160e01b031982166303a24d0760e21b145b8061030f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606004805461032490611366565b80601f016020809104026020016040519081016040528092919081815260200182805461035090611366565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b5050505050905090565b6060600280546103b690611366565b80601f01602080910402602001604051908101604052809291908181526020018280546103e290611366565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b50505050509050919050565b6001600160a01b038516331480610457575061045785336101eb565b6104be5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610294565b6104cb85858585856106a1565b5050505050565b606081518351146105375760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610294565b6000835167ffffffffffffffff81111561055357610553610f83565b60405190808252806020026020018201604052801561057c578160200160208202803683370190505b50905060005b84518110156105f4576105c78582815181106105a0576105a06113a0565b60200260200101518583815181106105ba576105ba6113a0565b602002602001015161022c565b8282815181106105d9576105d96113a0565b60209081029190910101526105ed816113cc565b9050610582565b509392505050565b60606005805461032490611366565b61061633838361088c565b5050565b6001600160a01b038516331480610636575061063685336101eb565b6106945760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610294565b6104cb858585858561096c565b81518351146107035760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610294565b6001600160a01b0384166107295760405162461bcd60e51b8152600401610294906113e5565b33610738818787878787610aa4565b60005b845181101561081e576000858281518110610758576107586113a0565b602002602001015190506000858381518110610776576107766113a0565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107c65760405162461bcd60e51b81526004016102949061142a565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610803908490611474565b9250508190555050505080610817906113cc565b905061073b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161086e92919061148c565b60405180910390a4610884818787878787610c26565b505050505050565b816001600160a01b0316836001600160a01b0316036108ff5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610294565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109925760405162461bcd60e51b8152600401610294906113e5565b33600061099e85610d81565b905060006109ab85610d81565b90506109bb838989858589610aa4565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156109fc5760405162461bcd60e51b81526004016102949061142a565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610a39908490611474565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a99848a8a8a8a8a610dcc565b505050505050505050565b6001600160a01b038516610b2b5760005b8351811015610b2957828181518110610ad057610ad06113a0565b602002602001015160036000868481518110610aee57610aee6113a0565b602002602001015181526020019081526020016000206000828254610b139190611474565b90915550610b229050816113cc565b9050610ab5565b505b6001600160a01b0384166108845760005b8351811015610c1d576000848281518110610b5957610b596113a0565b602002602001015190506000848381518110610b7757610b776113a0565b6020026020010151905060006003600084815260200190815260200160002054905081811015610bfa5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610294565b60009283526003602052604090922091039055610c16816113cc565b9050610b3c565b50505050505050565b6001600160a01b0384163b156108845760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c6a90899089908890889088906004016114ba565b6020604051808303816000875af1925050508015610ca5575060408051601f3d908101601f19168201909252610ca291810190611518565b60015b610d5157610cb1611535565b806308c379a003610cea5750610cc5611551565b80610cd05750610cec565b8060405162461bcd60e51b81526004016102949190610f57565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610294565b6001600160e01b0319811663bc197c8160e01b14610c1d5760405162461bcd60e51b8152600401610294906115db565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610dbb57610dbb6113a0565b602090810291909101015292915050565b6001600160a01b0384163b156108845760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e109089908990889088908890600401611623565b6020604051808303816000875af1925050508015610e4b575060408051601f3d908101601f19168201909252610e4891810190611518565b60015b610e5757610cb1611535565b6001600160e01b0319811663f23a6e6160e01b14610c1d5760405162461bcd60e51b8152600401610294906115db565b80356001600160a01b0381168114610e9e57600080fd5b919050565b60008060408385031215610eb657600080fd5b610ebf83610e87565b946020939093013593505050565b6001600160e01b031981168114610ee357600080fd5b50565b600060208284031215610ef857600080fd5b8135610f0381610ecd565b9392505050565b6000815180845260005b81811015610f3057602081850181015186830182015201610f14565b81811115610f42576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f036020830184610f0a565b600060208284031215610f7c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610fbf57610fbf610f83565b6040525050565b600067ffffffffffffffff821115610fe057610fe0610f83565b5060051b60200190565b600082601f830112610ffb57600080fd5b8135602061100882610fc6565b6040516110158282610f99565b83815260059390931b850182019282810191508684111561103557600080fd5b8286015b848110156110505780358352918301918301611039565b509695505050505050565b600082601f83011261106c57600080fd5b813567ffffffffffffffff81111561108657611086610f83565b60405161109d601f8301601f191660200182610f99565b8181528460208386010111156110b257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156110e757600080fd5b6110f086610e87565b94506110fe60208701610e87565b9350604086013567ffffffffffffffff8082111561111b57600080fd5b61112789838a01610fea565b9450606088013591508082111561113d57600080fd5b61114989838a01610fea565b9350608088013591508082111561115f57600080fd5b5061116c8882890161105b565b9150509295509295909350565b6000806040838503121561118c57600080fd5b823567ffffffffffffffff808211156111a457600080fd5b818501915085601f8301126111b857600080fd5b813560206111c582610fc6565b6040516111d28282610f99565b83815260059390931b85018201928281019150898411156111f257600080fd5b948201945b838610156112175761120886610e87565b825294820194908201906111f7565b9650508601359250508082111561122d57600080fd5b5061123a85828601610fea565b9150509250929050565b600081518084526020808501945080840160005b8381101561127457815187529582019590820190600101611258565b509495945050505050565b602081526000610f036020830184611244565b600080604083850312156112a557600080fd5b6112ae83610e87565b9150602083013580151581146112c357600080fd5b809150509250929050565b600080604083850312156112e157600080fd5b6112ea83610e87565b91506112f860208401610e87565b90509250929050565b600080600080600060a0868803121561131957600080fd5b61132286610e87565b945061133060208701610e87565b93506040860135925060608601359150608086013567ffffffffffffffff81111561135a57600080fd5b61116c8882890161105b565b600181811c9082168061137a57607f821691505b60208210810361139a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113de576113de6113b6565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115611487576114876113b6565b500190565b60408152600061149f6040830185611244565b82810360208401526114b18185611244565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906114e690830186611244565b82810360608401526114f88186611244565b9050828103608084015261150c8185610f0a565b98975050505050505050565b60006020828403121561152a57600080fd5b8151610f0381610ecd565b600060033d111561154e5760046000803e5060005160e01c5b90565b600060443d101561155f5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561158f57505050505090565b82850191508151818111156115a75750505050505090565b843d87010160208285010111156115c15750505050505090565b6115d060208286010187610f99565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061165d90830184610f0a565b97965050505050505056fea2646970667358221220afc5592bb1df1d6194d0b4daae68a83d4e8dda9e5d55a38dfb5433d85c0cadc164736f6c634300080e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x8 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH8 0x537761705A65726F PUSH1 0xC0 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x2B SWAP2 PUSH1 0x4 SWAP2 SWAP1 PUSH3 0xA1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE PUSH3 0x29ABAD PUSH1 0xE9 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x58 SWAP2 PUSH1 0x5 SWAP2 PUSH3 0xA1 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x81 DUP2 PUSH3 0x88 JUMP JUMPDEST POP PUSH3 0x183 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x9D SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xA1 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xAF SWAP1 PUSH3 0x147 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xD3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x11E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xEE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x11E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x11E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x11E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x101 JUMP JUMPDEST POP PUSH3 0x12C SWAP3 SWAP2 POP PUSH3 0x130 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x131 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x15C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x17D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169E DUP1 PUSH3 0x193 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x10C PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2F4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x30F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x324 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x350 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x372 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x380 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x404 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x457 JUMPI POP PUSH2 0x457 DUP6 CALLER PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH2 0x4CB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x553 JUMPI PUSH2 0x553 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x57C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5C7 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x5A0 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5D9 JUMPI PUSH2 0x5D9 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x5ED DUP2 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0x582 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x324 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x616 CALLER DUP4 DUP4 PUSH2 0x88C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x636 JUMPI POP PUSH2 0x636 DUP6 CALLER PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH2 0x4CB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x96C JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST CALLER PUSH2 0x738 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x758 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x776 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x803 SWAP1 DUP5 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x817 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0x73B JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x86E SWAP3 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x884 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xC26 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x99E DUP6 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9AB DUP6 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BB DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xA39 SWAP1 DUP5 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA99 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xDCC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB2B JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xAD0 JUMPI PUSH2 0xAD0 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB22 SWAP1 POP DUP2 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0xAB5 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x884 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB59 JUMPI PUSH2 0xB59 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB77 JUMPI PUSH2 0xB77 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0xC16 DUP2 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xC6A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCA5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCA2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD51 JUMPI PUSH2 0xCB1 PUSH2 0x1535 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xCEA JUMPI POP PUSH2 0xCC5 PUSH2 0x1551 JUMP JUMPDEST DUP1 PUSH2 0xCD0 JUMPI POP PUSH2 0xCEC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xDBB JUMPI PUSH2 0xDBB PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xE10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE4B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE48 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE57 JUMPI PUSH2 0xCB1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x15DB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBF DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF03 DUP2 PUSH2 0xECD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF30 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF14 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF42 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFBF JUMPI PUSH2 0xFBF PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFE0 JUMPI PUSH2 0xFE0 PUSH2 0xF83 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1008 DUP3 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1015 DUP3 DUP3 PUSH2 0xF99 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1050 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1039 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109D PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xF99 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F0 DUP7 PUSH2 0xE87 JUMP JUMPDEST SWAP5 POP PUSH2 0x10FE PUSH1 0x20 DUP8 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x111B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1127 DUP10 DUP4 DUP11 ADD PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1149 DUP10 DUP4 DUP11 ADD PUSH2 0xFEA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116C DUP9 DUP3 DUP10 ADD PUSH2 0x105B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11C5 DUP3 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D2 DUP3 DUP3 PUSH2 0xF99 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1217 JUMPI PUSH2 0x1208 DUP7 PUSH2 0xE87 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123A DUP6 DUP3 DUP7 ADD PUSH2 0xFEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1274 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1258 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12AE DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EA DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F8 PUSH1 0x20 DUP5 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1322 DUP7 PUSH2 0xE87 JUMP JUMPDEST SWAP5 POP PUSH2 0x1330 PUSH1 0x20 DUP8 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116C DUP9 DUP3 DUP10 ADD PUSH2 0x105B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x137A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x139A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13DE JUMPI PUSH2 0x13DE PUSH2 0x13B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1487 JUMPI PUSH2 0x1487 PUSH2 0x13B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x149F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1244 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x14B1 DUP2 DUP6 PUSH2 0x1244 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14E6 SWAP1 DUP4 ADD DUP7 PUSH2 0x1244 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x14F8 DUP2 DUP7 PUSH2 0x1244 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x150C DUP2 DUP6 PUSH2 0xF0A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF03 DUP2 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x154E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x155F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x158F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x15A7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x15C1 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15D0 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xF99 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x165D SWAP1 DUP4 ADD DUP5 PUSH2 0xF0A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC5 MSIZE 0x2B 0xB1 0xDF SAR PUSH2 0x94D0 0xB4 0xDA 0xAE PUSH9 0xA83D4E8DDA9E5D55A3 DUP14 0xFB SLOAD CALLER 0xD8 0x5C 0xC 0xAD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "201:32:9:-:0;158:551;201:32;;158:551;201:32;;;-1:-1:-1;;;201:32:9;;;;;;;;;;:::i;:::-;-1:-1:-1;239:29:9;;;;;;;;;;;;;-1:-1:-1;;;239:29:9;;;;;;;;;;;;:::i;:::-;;297:46;;;;;;;;;-1:-1:-1;1107:62:0;;;;;;;;;-1:-1:-1;1107:62:0;;1149:13;1107:62;1149:7;:13::i;:::-;1107:62;158:551:9;;8171:86:0;8237:13;;;;:4;;:13;;;;;:::i;:::-;;8171:86;:::o;158:551:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;158:551:9;;;-1:-1:-1;158:551:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:10;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;158:551:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1221": {
									"entryPoint": 3457,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1046": {
									"entryPoint": null,
									"id": 1046,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1541": {
									"entryPoint": 2724,
									"id": 1541,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1193": {
									"entryPoint": 3110,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1128": {
									"entryPoint": 3532,
									"id": 1128,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1864": {
									"entryPoint": null,
									"id": 1864,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_544": {
									"entryPoint": 1697,
									"id": 544,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_409": {
									"entryPoint": 2412,
									"id": 409,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1027": {
									"entryPoint": 2188,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1234,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 556,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_1954": {
									"entryPoint": null,
									"id": 1954,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@exists_1424": {
									"entryPoint": null,
									"id": 1424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1575": {
									"entryPoint": null,
									"id": 1575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1938": {
									"entryPoint": 789,
									"id": 1938,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1083,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1562,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1547,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1897": {
									"entryPoint": null,
									"id": 1897,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 707,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1946": {
									"entryPoint": 1532,
									"id": 1946,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1408": {
									"entryPoint": null,
									"id": 1408,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 935,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5260,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 4038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 5429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16736:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1271:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1291:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1275:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1313:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1318:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1306:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1306:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1343:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1338:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1405:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1419:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1429:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1423:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1461:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1466:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1457:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1457:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1470:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1453:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1453:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1489:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1496:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1485:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1485:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1500:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1481:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1481:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1475:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1475:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1446:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1364:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1367:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1361:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1375:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1377:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1386:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1389:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1382:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1377:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1357:3:10",
																"statements": []
															},
															"src": "1353:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1549:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1578:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1583:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1574:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1574:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1592:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1570:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1570:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1563:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1563:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1563:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1530:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1533:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1527:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:13:10"
															},
															"nodeType": "YulIf",
															"src": "1524:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1620:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1635:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1648:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1656:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1644:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1644:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1665:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1661:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1661:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1640:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1631:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1627:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1627:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1620:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1238:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1245:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1253:3:10",
														"type": ""
													}
												],
												"src": "1211:472:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1826:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1837:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1819:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1849:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1875:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1887:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1898:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1857:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1857:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1849:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1778:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1789:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1800:4:10",
														"type": ""
													}
												],
												"src": "1688:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1983:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2029:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2004:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2013:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2000:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:32:10"
															},
															"nodeType": "YulIf",
															"src": "1993:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2054:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2077:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2064:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1949:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1960:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1972:6:10",
														"type": ""
													}
												],
												"src": "1913:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:10"
															},
															"nodeType": "YulIf",
															"src": "2354:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:10",
														"type": ""
													}
												],
												"src": "2230:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:10"
															},
															"nodeType": "YulIf",
															"src": "2563:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:10",
														"type": ""
													}
												],
												"src": "2484:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:10"
															},
															"nodeType": "YulIf",
															"src": "2746:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:10"
															},
															"nodeType": "YulIf",
															"src": "3145:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:10",
																"statements": []
															},
															"src": "3224:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:10",
														"type": ""
													}
												],
												"src": "2672:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:10"
															},
															"nodeType": "YulIf",
															"src": "3463:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:10"
															},
															"nodeType": "YulIf",
															"src": "3566:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:10"
															},
															"nodeType": "YulIf",
															"src": "3762:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:10",
														"type": ""
													}
												],
												"src": "3401:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:10"
															},
															"nodeType": "YulIf",
															"src": "4168:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:10"
															},
															"nodeType": "YulIf",
															"src": "4427:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:10"
															},
															"nodeType": "YulIf",
															"src": "4607:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:10"
															},
															"nodeType": "YulIf",
															"src": "4792:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:10",
														"type": ""
													}
												],
												"src": "3961:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:10"
															},
															"nodeType": "YulIf",
															"src": "5056:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:10"
															},
															"nodeType": "YulIf",
															"src": "5200:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:10"
															},
															"nodeType": "YulIf",
															"src": "5284:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:10"
															},
															"nodeType": "YulIf",
															"src": "5675:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:10",
																"statements": []
															},
															"src": "5754:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:10"
															},
															"nodeType": "YulIf",
															"src": "5993:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:10",
														"type": ""
													}
												],
												"src": "4909:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:10",
																"statements": []
															},
															"src": "6363:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:10",
														"type": ""
													}
												],
												"src": "6122:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:10",
														"type": ""
													}
												],
												"src": "6562:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6958:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6967:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:32:10"
															},
															"nodeType": "YulIf",
															"src": "6922:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6993:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7031:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7044:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7035:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7119:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7112:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7112:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7105:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7105:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:40:10"
															},
															"nodeType": "YulIf",
															"src": "7085:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7164:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6870:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6881:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6893:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:10",
														"type": ""
													}
												],
												"src": "6828:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:10"
															},
															"nodeType": "YulIf",
															"src": "7277:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7348:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7396:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:10",
														"type": ""
													}
												],
												"src": "7180:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7634:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:33:10"
															},
															"nodeType": "YulIf",
															"src": "7602:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7712:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7722:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7769:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7779:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7830:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7871:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7898:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7885:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7875:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7961:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7963:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7963:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7930:30:10"
															},
															"nodeType": "YulIf",
															"src": "7927:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8037:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7996:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7537:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7549:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7557:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7565:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7573:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7581:6:10",
														"type": ""
													}
												],
												"src": "7445:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8230:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8336:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8407:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8430:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8442:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8438:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8430:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8207:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:10",
														"type": ""
													}
												],
												"src": "8056:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8533:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8550:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8564:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8594:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8568:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8641:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8643:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8657:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8643:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8621:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8614:26:10"
															},
															"nodeType": "YulIf",
															"src": "8611:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8731:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8752:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8759:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8764:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8755:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8755:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8745:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8796:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8799:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8789:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8789:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8827:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8817:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8817:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8687:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8710:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8707:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8684:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:38:10"
															},
															"nodeType": "YulIf",
															"src": "8681:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8503:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8512:6:10",
														"type": ""
													}
												],
												"src": "8468:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9027:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9044:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9037:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9089:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9128:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9113:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9133:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9188:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9199:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9184:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9204:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9234:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9004:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9018:4:10",
														"type": ""
													}
												],
												"src": "8853:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9552:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9644:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9423:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:10",
														"type": ""
													}
												],
												"src": "9272:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9738:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9734:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9734:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9682:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9846:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9875:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9930:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9814:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10024:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10009:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10020:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:17:10"
															},
															"nodeType": "YulIf",
															"src": "10003:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10066:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9975:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9985:3:10",
														"type": ""
													}
												],
												"src": "9946:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10260:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10437:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10237:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:10",
														"type": ""
													}
												],
												"src": "10086:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10710:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10776:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10847:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10820:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10867:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10879:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10890:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10875:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10867:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10647:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10661:4:10",
														"type": ""
													}
												],
												"src": "10496:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11079:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11096:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11089:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11119:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11165:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11185:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11158:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11158:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11251:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11256:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11229:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11056:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11070:4:10",
														"type": ""
													}
												],
												"src": "10905:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11485:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11502:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11552:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11575:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11586:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11591:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11684:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11696:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11707:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11684:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11476:4:10",
														"type": ""
													}
												],
												"src": "11311:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11770:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11797:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11799:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11799:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11786:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11793:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11789:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11783:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11783:13:10"
															},
															"nodeType": "YulIf",
															"src": "11780:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11828:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11839:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11828:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11753:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11756:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11762:3:10",
														"type": ""
													}
												],
												"src": "11722:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12084:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12094:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12094:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12124:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12167:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12190:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12138:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12128:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12234:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12230:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12262:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12307:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12270:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12270:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12045:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12056:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12064:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12075:4:10",
														"type": ""
													}
												],
												"src": "11855:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12516:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12550:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12561:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12546:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12546:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12539:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12539:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12600:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12605:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12578:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12578:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12578:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12660:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12671:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12676:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12649:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12697:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12709:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12705:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12697:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12476:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12490:4:10",
														"type": ""
													}
												],
												"src": "12325:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12864:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12886:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12916:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12927:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12970:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12825:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12836:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12844:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12855:4:10",
														"type": ""
													}
												],
												"src": "12735:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13162:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13179:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13190:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13172:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13172:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13172:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13213:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13224:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13209:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13209:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13229:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13202:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13202:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13202:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13252:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13263:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13248:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13248:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e74206578636565647320746f74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13268:34:10",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds tot"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13241:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13241:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13241:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13323:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13334:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13319:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13319:18:10"
																	},
																	{
																		"hexValue": "616c537570706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13339:10:10",
																		"type": "",
																		"value": "alSupply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13312:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13312:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13312:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13359:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13371:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13382:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13367:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13359:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13139:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13153:4:10",
														"type": ""
													}
												],
												"src": "12988:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13728:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13738:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13756:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13761:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13752:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13752:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13765:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13748:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13748:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13742:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13783:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13798:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13806:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13794:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13794:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13776:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13776:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13776:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13830:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13841:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13826:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13826:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13850:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13858:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13846:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13846:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13819:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13819:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13819:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13882:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13893:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13878:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13878:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13898:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13871:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13871:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13871:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13911:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13954:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13966:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13977:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13962:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13962:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13925:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13925:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13915:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14002:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14013:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13998:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "14022:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14030:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14018:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13991:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13991:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13991:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14050:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14093:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "14101:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "14064:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "14054:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14128:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14139:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14124:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14124:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "14149:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14157:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14145:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14117:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14117:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14117:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14177:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14203:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "14211:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14185:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14185:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14177:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13665:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13676:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13684:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13692:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13700:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13708:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13719:4:10",
														"type": ""
													}
												],
												"src": "13397:827:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14309:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14355:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14364:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14367:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14357:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14357:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14357:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14330:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14339:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14326:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14326:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14351:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14322:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14322:32:10"
															},
															"nodeType": "YulIf",
															"src": "14319:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14380:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14399:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14393:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14393:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14384:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14442:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14418:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14418:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14457:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14467:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14457:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14275:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14286:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14298:6:10",
														"type": ""
													}
												],
												"src": "14229:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14526:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14571:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14600:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14603:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14606:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14585:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14585:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14585:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14621:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14632:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14643:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14637:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14637:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14628:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14628:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14621:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14542:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14542:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14560:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14539:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14539:23:10"
															},
															"nodeType": "YulIf",
															"src": "14536:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14518:3:10",
														"type": ""
													}
												],
												"src": "14483:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14714:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14754:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14756:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14730:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14730:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14748:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14727:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14727:26:10"
															},
															"nodeType": "YulIf",
															"src": "14724:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14772:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14790:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14784:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14784:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14776:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14802:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14816:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14812:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14812:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14806:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14842:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14848:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14855:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14855:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14873:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14851:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14827:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14827:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14827:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14886:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14906:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14900:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14900:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14890:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14920:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14930:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14930:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14924:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14955:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14965:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14959:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15041:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15043:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15001:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15009:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14998:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14998:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15021:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15029:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15017:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15017:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15036:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15014:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15014:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14995:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14995:45:10"
															},
															"nodeType": "YulIf",
															"src": "14992:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15059:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15074:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15080:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15070:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15070:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15063:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15096:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15116:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15110:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15110:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15100:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15147:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15149:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15135:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "15143:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15132:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15132:14:10"
															},
															"nodeType": "YulIf",
															"src": "15129:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15238:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15240:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "15179:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15184:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15175:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15175:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15193:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15171:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "15208:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "15214:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15214:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15204:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15204:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15233:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15200:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15200:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15168:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15168:69:10"
															},
															"nodeType": "YulIf",
															"src": "15165:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15276:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15290:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15298:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15286:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15286:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15307:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15282:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15282:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "15256:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15256:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15256:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15322:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "15329:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15322:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14706:3:10",
														"type": ""
													}
												],
												"src": "14667:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15517:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15534:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15545:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15527:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15527:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15527:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15568:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15579:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15564:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15564:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15584:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15557:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15557:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15557:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15607:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15618:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15603:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15623:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15596:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15596:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15678:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15689:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15674:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15674:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15694:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15667:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15667:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15667:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15738:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15494:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15508:4:10",
														"type": ""
													}
												],
												"src": "15343:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15938:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15955:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15966:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15948:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15948:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16000:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15985:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16005:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15978:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15978:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15978:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16028:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16039:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16024:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16024:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16044:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16017:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16017:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16017:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16099:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16110:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16095:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16095:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16115:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16088:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16088:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16088:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16135:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16147:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16158:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16143:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16143:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16135:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15915:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15929:4:10",
														"type": ""
													}
												],
												"src": "15764:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16404:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16414:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16432:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16437:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16428:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16441:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16424:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16424:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16418:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16459:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16474:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16482:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16470:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16470:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16452:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16452:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16452:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16506:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16517:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16502:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16502:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16526:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16534:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16522:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16522:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16495:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16495:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16558:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16569:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16554:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16554:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16574:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16547:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16547:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16601:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16612:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16597:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16597:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16617:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16590:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16590:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16590:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16644:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16655:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16640:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16661:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16633:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16633:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16633:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16674:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16700:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16712:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16723:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16708:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16708:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16682:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16682:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16674:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16341:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16352:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16360:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16368:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16376:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16384:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16395:4:10",
														"type": ""
													}
												],
												"src": "16173:561:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds tot\")\n        mstore(add(headStart, 96), \"alSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ce5760003560e01c80634e1273f41161008c578063a22cb46511610066578063a22cb465146101aa578063bd85b039146101bd578063e985e9c5146101dd578063f242432a1461021957600080fd5b80634e1273f4146101605780634f558e791461018057806395d89b41146101a257600080fd5b8062fdd58e146100d357806301ffc9a7146100f957806306fdde031461011c5780630e89341c146101315780632eb2c2d614610144578063313ce56714610159575b600080fd5b6100e66100e1366004610ea3565b61022c565b6040519081526020015b60405180910390f35b61010c610107366004610ee6565b6102c3565b60405190151581526020016100f0565b610124610315565b6040516100f09190610f57565b61012461013f366004610f6a565b6103a7565b6101576101523660046110cf565b61043b565b005b60126100e6565b61017361016e366004611179565b6104d2565b6040516100f0919061127f565b61010c61018e366004610f6a565b600090815260036020526040902054151590565b6101246105fc565b6101576101b8366004611292565b61060b565b6100e66101cb366004610f6a565b60009081526003602052604090205490565b61010c6101eb3660046112ce565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610157610227366004611301565b61061a565b60006001600160a01b03831661029d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102f457506001600160e01b031982166303a24d0760e21b145b8061030f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606004805461032490611366565b80601f016020809104026020016040519081016040528092919081815260200182805461035090611366565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b5050505050905090565b6060600280546103b690611366565b80601f01602080910402602001604051908101604052809291908181526020018280546103e290611366565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b50505050509050919050565b6001600160a01b038516331480610457575061045785336101eb565b6104be5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610294565b6104cb85858585856106a1565b5050505050565b606081518351146105375760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610294565b6000835167ffffffffffffffff81111561055357610553610f83565b60405190808252806020026020018201604052801561057c578160200160208202803683370190505b50905060005b84518110156105f4576105c78582815181106105a0576105a06113a0565b60200260200101518583815181106105ba576105ba6113a0565b602002602001015161022c565b8282815181106105d9576105d96113a0565b60209081029190910101526105ed816113cc565b9050610582565b509392505050565b60606005805461032490611366565b61061633838361088c565b5050565b6001600160a01b038516331480610636575061063685336101eb565b6106945760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610294565b6104cb858585858561096c565b81518351146107035760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610294565b6001600160a01b0384166107295760405162461bcd60e51b8152600401610294906113e5565b33610738818787878787610aa4565b60005b845181101561081e576000858281518110610758576107586113a0565b602002602001015190506000858381518110610776576107766113a0565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107c65760405162461bcd60e51b81526004016102949061142a565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610803908490611474565b9250508190555050505080610817906113cc565b905061073b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161086e92919061148c565b60405180910390a4610884818787878787610c26565b505050505050565b816001600160a01b0316836001600160a01b0316036108ff5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610294565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109925760405162461bcd60e51b8152600401610294906113e5565b33600061099e85610d81565b905060006109ab85610d81565b90506109bb838989858589610aa4565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156109fc5760405162461bcd60e51b81526004016102949061142a565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610a39908490611474565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a99848a8a8a8a8a610dcc565b505050505050505050565b6001600160a01b038516610b2b5760005b8351811015610b2957828181518110610ad057610ad06113a0565b602002602001015160036000868481518110610aee57610aee6113a0565b602002602001015181526020019081526020016000206000828254610b139190611474565b90915550610b229050816113cc565b9050610ab5565b505b6001600160a01b0384166108845760005b8351811015610c1d576000848281518110610b5957610b596113a0565b602002602001015190506000848381518110610b7757610b776113a0565b6020026020010151905060006003600084815260200190815260200160002054905081811015610bfa5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b6064820152608401610294565b60009283526003602052604090922091039055610c16816113cc565b9050610b3c565b50505050505050565b6001600160a01b0384163b156108845760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c6a90899089908890889088906004016114ba565b6020604051808303816000875af1925050508015610ca5575060408051601f3d908101601f19168201909252610ca291810190611518565b60015b610d5157610cb1611535565b806308c379a003610cea5750610cc5611551565b80610cd05750610cec565b8060405162461bcd60e51b81526004016102949190610f57565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610294565b6001600160e01b0319811663bc197c8160e01b14610c1d5760405162461bcd60e51b8152600401610294906115db565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610dbb57610dbb6113a0565b602090810291909101015292915050565b6001600160a01b0384163b156108845760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610e109089908990889088908890600401611623565b6020604051808303816000875af1925050508015610e4b575060408051601f3d908101601f19168201909252610e4891810190611518565b60015b610e5757610cb1611535565b6001600160e01b0319811663f23a6e6160e01b14610c1d5760405162461bcd60e51b8152600401610294906115db565b80356001600160a01b0381168114610e9e57600080fd5b919050565b60008060408385031215610eb657600080fd5b610ebf83610e87565b946020939093013593505050565b6001600160e01b031981168114610ee357600080fd5b50565b600060208284031215610ef857600080fd5b8135610f0381610ecd565b9392505050565b6000815180845260005b81811015610f3057602081850181015186830182015201610f14565b81811115610f42576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f036020830184610f0a565b600060208284031215610f7c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610fbf57610fbf610f83565b6040525050565b600067ffffffffffffffff821115610fe057610fe0610f83565b5060051b60200190565b600082601f830112610ffb57600080fd5b8135602061100882610fc6565b6040516110158282610f99565b83815260059390931b850182019282810191508684111561103557600080fd5b8286015b848110156110505780358352918301918301611039565b509695505050505050565b600082601f83011261106c57600080fd5b813567ffffffffffffffff81111561108657611086610f83565b60405161109d601f8301601f191660200182610f99565b8181528460208386010111156110b257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156110e757600080fd5b6110f086610e87565b94506110fe60208701610e87565b9350604086013567ffffffffffffffff8082111561111b57600080fd5b61112789838a01610fea565b9450606088013591508082111561113d57600080fd5b61114989838a01610fea565b9350608088013591508082111561115f57600080fd5b5061116c8882890161105b565b9150509295509295909350565b6000806040838503121561118c57600080fd5b823567ffffffffffffffff808211156111a457600080fd5b818501915085601f8301126111b857600080fd5b813560206111c582610fc6565b6040516111d28282610f99565b83815260059390931b85018201928281019150898411156111f257600080fd5b948201945b838610156112175761120886610e87565b825294820194908201906111f7565b9650508601359250508082111561122d57600080fd5b5061123a85828601610fea565b9150509250929050565b600081518084526020808501945080840160005b8381101561127457815187529582019590820190600101611258565b509495945050505050565b602081526000610f036020830184611244565b600080604083850312156112a557600080fd5b6112ae83610e87565b9150602083013580151581146112c357600080fd5b809150509250929050565b600080604083850312156112e157600080fd5b6112ea83610e87565b91506112f860208401610e87565b90509250929050565b600080600080600060a0868803121561131957600080fd5b61132286610e87565b945061133060208701610e87565b93506040860135925060608601359150608086013567ffffffffffffffff81111561135a57600080fd5b61116c8882890161105b565b600181811c9082168061137a57607f821691505b60208210810361139a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113de576113de6113b6565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115611487576114876113b6565b500190565b60408152600061149f6040830185611244565b82810360208401526114b18185611244565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906114e690830186611244565b82810360608401526114f88186611244565b9050828103608084015261150c8185610f0a565b98975050505050505050565b60006020828403121561152a57600080fd5b8151610f0381610ecd565b600060033d111561154e5760046000803e5060005160e01c5b90565b600060443d101561155f5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561158f57505050505090565b82850191508151818111156115a75750505050505090565b843d87010160208285010111156115c15750505050505090565b6115d060208286010187610f99565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061165d90830184610f0a565b97965050505050505056fea2646970667358221220afc5592bb1df1d6194d0b4daae68a83d4e8dda9e5d55a38dfb5433d85c0cadc164736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x10C PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10C PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2F4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x30F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x324 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x350 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x372 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x380 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x404 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x457 JUMPI POP PUSH2 0x457 DUP6 CALLER PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH2 0x4CB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x6A1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x553 JUMPI PUSH2 0x553 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x57C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5F4 JUMPI PUSH2 0x5C7 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x5A0 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5D9 JUMPI PUSH2 0x5D9 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x5ED DUP2 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0x582 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x324 SWAP1 PUSH2 0x1366 JUMP JUMPDEST PUSH2 0x616 CALLER DUP4 DUP4 PUSH2 0x88C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x636 JUMPI POP PUSH2 0x636 DUP6 CALLER PUSH2 0x1EB JUMP JUMPDEST PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH2 0x4CB DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x96C JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST CALLER PUSH2 0x738 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x758 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x776 JUMPI PUSH2 0x776 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x803 SWAP1 DUP5 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x817 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0x73B JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x86E SWAP3 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x884 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xC26 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x99E DUP6 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9AB DUP6 PUSH2 0xD81 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BB DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xA39 SWAP1 DUP5 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA99 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xDCC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB2B JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xAD0 JUMPI PUSH2 0xAD0 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB22 SWAP1 POP DUP2 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0xAB5 JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x884 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB59 JUMPI PUSH2 0xB59 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB77 JUMPI PUSH2 0xB77 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E74206578636565647320746F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x616C537570706C79 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE PUSH2 0xC16 DUP2 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xC6A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCA5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCA2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD51 JUMPI PUSH2 0xCB1 PUSH2 0x1535 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xCEA JUMPI POP PUSH2 0xCC5 PUSH2 0x1551 JUMP JUMPDEST DUP1 PUSH2 0xCD0 JUMPI POP PUSH2 0xCEC JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xF57 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xDBB JUMPI PUSH2 0xDBB PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xE10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE4B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE48 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE57 JUMPI PUSH2 0xCB1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x15DB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBF DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xEE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF03 DUP2 PUSH2 0xECD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF30 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF14 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF42 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFBF JUMPI PUSH2 0xFBF PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xFE0 JUMPI PUSH2 0xFE0 PUSH2 0xF83 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1008 DUP3 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1015 DUP3 DUP3 PUSH2 0xF99 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1050 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1039 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x106C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x109D PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xF99 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x10E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F0 DUP7 PUSH2 0xE87 JUMP JUMPDEST SWAP5 POP PUSH2 0x10FE PUSH1 0x20 DUP8 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x111B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1127 DUP10 DUP4 DUP11 ADD PUSH2 0xFEA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1149 DUP10 DUP4 DUP11 ADD PUSH2 0xFEA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116C DUP9 DUP3 DUP10 ADD PUSH2 0x105B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11C5 DUP3 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D2 DUP3 DUP3 PUSH2 0xF99 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1217 JUMPI PUSH2 0x1208 DUP7 PUSH2 0xE87 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123A DUP6 DUP3 DUP7 ADD PUSH2 0xFEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1274 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1258 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF03 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12AE DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12EA DUP4 PUSH2 0xE87 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F8 PUSH1 0x20 DUP5 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1322 DUP7 PUSH2 0xE87 JUMP JUMPDEST SWAP5 POP PUSH2 0x1330 PUSH1 0x20 DUP8 ADD PUSH2 0xE87 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116C DUP9 DUP3 DUP10 ADD PUSH2 0x105B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x137A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x139A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13DE JUMPI PUSH2 0x13DE PUSH2 0x13B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1487 JUMPI PUSH2 0x1487 PUSH2 0x13B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x149F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1244 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x14B1 DUP2 DUP6 PUSH2 0x1244 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14E6 SWAP1 DUP4 ADD DUP7 PUSH2 0x1244 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x14F8 DUP2 DUP7 PUSH2 0x1244 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x150C DUP2 DUP6 PUSH2 0xF0A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF03 DUP2 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x154E JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x155F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x158F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x15A7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x15C1 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15D0 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xF99 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x165D SWAP1 DUP4 ADD DUP5 PUSH2 0xF0A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC5 MSIZE 0x2B 0xB1 0xDF SAR PUSH2 0x94D0 0xB4 0xDA 0xAE PUSH9 0xA83D4E8DDA9E5D55A3 DUP14 0xFB SLOAD CALLER 0xD8 0x5C 0xC 0xAD 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "158:551:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228:0;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2185:228:0;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1236:305:0;1019:187:10;349:118:9;;;:::i;:::-;;;;;;;:::i;1940:103:0:-;;;;;;:::i;:::-;;:::i;4060:430::-;;;;;;:::i;:::-;;:::i;:::-;;601:106:9;698:2;601:106;;2570:508:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;901:120:3:-;;;;;;:::i;:::-;958:4;785:16;;;:12;:16;;;;;;-1:-1:-1;;;901:120:3;473:122:9;;;:::i;3146:153:0:-;;;;;;:::i;:::-;;:::i;697:111:3:-;;;;;;:::i;:::-;759:7;785:16;;;:12;:16;;;;;;;697:111;3366:166:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3488:27:0;;;3465:4;3488:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3366:166;3599:389;;;;;;:::i;:::-;;:::i;2185:228::-;2271:7;-1:-1:-1;;;;;2298:21:0;;2290:77;;;;-1:-1:-1;;;2290:77:0;;8258:2:10;2290:77:0;;;8240:21:10;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:10;;;8380:41;8438:19;;2290:77:0;;;;;;;;;-1:-1:-1;2384:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;2384:22:0;;;;;;;;;;;;2185:228::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:0;;-1:-1:-1;;;1373:41:0;;:109;;-1:-1:-1;;;;;;;1430:52:0;;-1:-1:-1;;;1430:52:0;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:7;;;1498:36:0;1354:180;1236:305;-1:-1:-1;;1236:305:0:o;349:118:9:-;412:13;448:12;441:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:118;:::o;1940:103:0:-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4060:430::-;-1:-1:-1;;;;;4285:20:0;;719:10:6;4285:20:0;;:60;;-1:-1:-1;4309:36:0;4326:4;719:10:6;3366:166:0;:::i;4309:36::-;4264:157;;;;-1:-1:-1;;;4264:157:0;;9055:2:10;4264:157:0;;;9037:21:10;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:10;;;9177:48;9242:19;;4264:157:0;8853:414:10;4264:157:0;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;-1:-1:-1;;;2753:83:0;;9474:2:10;2753:83:0;;;9456:21:10;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:10;;;9596:39;9652:19;;2753:83:0;9272:405:10;2753:83:0;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2880:30:0;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2962:3;;;:::i;:::-;;;2921:120;;;-1:-1:-1;3058:13:0;2570:508;-1:-1:-1;;;2570:508:0:o;473:122:9:-;538:13;574:14;567:21;;;;;:::i;3146:153:0:-;3240:52;719:10:6;3273:8:0;3283;3240:18;:52::i;:::-;3146:153;;:::o;3599:389::-;-1:-1:-1;;;;;3799:20:0;;719:10:6;3799:20:0;;:60;;-1:-1:-1;3823:36:0;3840:4;719:10:6;3366:166:0;:::i;3823:36::-;3778:148;;;;-1:-1:-1;;;3778:148:0;;10288:2:10;3778:148:0;;;10270:21:10;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:10;;;10410:39;10466:19;;3778:148:0;10086:405:10;3778:148:0;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;6233:1115::-;6453:7;:14;6439:3;:10;:28;6431:81;;;;-1:-1:-1;;;6431:81:0;;10698:2:10;6431:81:0;;;10680:21:10;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:10;;;10820:38;10875:19;;6431:81:0;10496:404:10;6431:81:0;-1:-1:-1;;;;;6530:16:0;;6522:66;;;;-1:-1:-1;;;6522:66:0;;;;;;;:::i;:::-;719:10:6;6641:60:0;719:10:6;6672:4:0;6678:2;6682:3;6687:7;6696:4;6641:20;:60::i;:::-;6717:9;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;-1:-1:-1;;;;;6864:19:0;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:0;;;;6897:76;;;;-1:-1:-1;;;6897:76:0;;;;;;;:::i;:::-;7015:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7015:19:0;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;-1:-1:-1;;;;;7138:47:0;7162:4;-1:-1:-1;;;;;7138:47:0;7152:8;-1:-1:-1;;;;;7138:47:0;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12773:323::-;12923:8;-1:-1:-1;;;;;12914:17:0;:5;-1:-1:-1;;;;;12914:17:0;;12906:71;;;;-1:-1:-1;;;12906:71:0;;12527:2:10;12906:71:0;;;12509:21:10;12566:2;12546:18;;;12539:30;12605:34;12585:18;;;12578:62;-1:-1:-1;;;12656:18:10;;;12649:39;12705:19;;12906:71:0;12325:405:10;12906:71:0;-1:-1:-1;;;;;12987:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12987:46:0;;;;;;;;;;13048:41;;1159::10;;;13048::0;;1132:18:10;13048:41:0;;;;;;;12773:323;;;:::o;4940:947::-;-1:-1:-1;;;;;5121:16:0;;5113:66;;;;-1:-1:-1;;;5113:66:0;;;;;;;:::i;:::-;719:10:6;5190:16:0;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5348:60;5369:8;5379:4;5385:2;5389:3;5394:7;5403:4;5348:20;:60::i;:::-;5419:19;5441:13;;;;;;;;;;;-1:-1:-1;;;;;5441:19:0;;;;;;;;;;5478:21;;;;5470:76;;;;-1:-1:-1;;;5470:76:0;;;;;;;:::i;:::-;5580:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5580:19:0;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:0;;;12909:25:10;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5685:46:0;;;;;;;;;;;;;;12882:18:10;5685:46:0;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;1091:904:3:-;-1:-1:-1;;;;;1403:18:3;;1399:156;;1442:9;1437:108;1461:3;:10;1457:1;:14;1437:108;;;1520:7;1528:1;1520:10;;;;;;;;:::i;:::-;;;;;;;1496:12;:20;1509:3;1513:1;1509:6;;;;;;;;:::i;:::-;;;;;;;1496:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1473:3:3;;-1:-1:-1;1473:3:3;;:::i;:::-;;;1437:108;;;;1399:156;-1:-1:-1;;;;;1569:16:3;;1565:424;;1606:9;1601:378;1625:3;:10;1621:1;:14;1601:378;;;1660:10;1673:3;1677:1;1673:6;;;;;;;;:::i;:::-;;;;;;;1660:19;;1697:14;1714:7;1722:1;1714:10;;;;;;;;:::i;:::-;;;;;;;1697:27;;1742:14;1759:12;:16;1772:2;1759:16;;;;;;;;;;;;1742:33;;1811:6;1801;:16;;1793:69;;;;-1:-1:-1;;;1793:69:3;;13190:2:10;1793:69:3;;;13172:21:10;13229:2;13209:18;;;13202:30;13268:34;13248:18;;;13241:62;-1:-1:-1;;;13319:18:10;;;13312:38;13367:19;;1793:69:3;12988:404:10;1793:69:3;1912:16;;;;:12;:16;;;;;;1931:15;;1912:34;;1637:3;;;:::i;:::-;;;1601:378;;;;1091:904;;;;;;:::o;16127:792:0:-;-1:-1:-1;;;;;16359:13:0;;1465:19:5;:23;16355:558:0;;16394:79;;-1:-1:-1;;;16394:79:0;;-1:-1:-1;;;;;16394:43:0;;;;;:79;;16438:8;;16448:4;;16454:3;;16459:7;;16468:4;;16394:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16394:79:0;;;;;;;;-1:-1:-1;;16394:79:0;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;-1:-1:-1;;;16772:14:0;;;;;;;;:::i;16390:513::-;;;16826:62;;-1:-1:-1;;;16826:62:0;;15545:2:10;16826:62:0;;;15527:21:10;15584:2;15564:18;;;15557:30;15623:34;15603:18;;;15596:62;-1:-1:-1;;;15674:18:10;;;15667:50;15734:19;;16826:62:0;15343:416:10;16390:513:0;-1:-1:-1;;;;;;16552:60:0;;-1:-1:-1;;;16552:60:0;16548:157;;16636:50;;-1:-1:-1;;;16636:50:0;;;;;;;:::i;16925:193::-;17044:16;;;17058:1;17044:16;;;;;;;;;16991;;17019:22;;17044:16;;;;;;;;;;;;-1:-1:-1;17044:16:0;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17106:5;16925:193;-1:-1:-1;;16925:193:0:o;15396:725::-;-1:-1:-1;;;;;15603:13:0;;1465:19:5;:23;15599:516:0;;15638:72;;-1:-1:-1;;;15638:72:0;;-1:-1:-1;;;;;15638:38:0;;;;;:72;;15677:8;;15687:4;;15693:2;;15697:6;;15705:4;;15638:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15638:72:0;;;;;;;;-1:-1:-1;;15638:72:0;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;-1:-1:-1;;;;;;15759:55:0;;-1:-1:-1;;;15759:55:0;15755:152;;15838:50;;-1:-1:-1;;;15838:50:0;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:472::-;1253:3;1291:5;1285:12;1318:6;1313:3;1306:19;1343:1;1353:162;1367:6;1364:1;1361:13;1353:162;;;1429:4;1485:13;;;1481:22;;1475:29;1457:11;;;1453:20;;1446:59;1382:12;1353:162;;;1533:6;1530:1;1527:13;1524:87;;;1599:1;1592:4;1583:6;1578:3;1574:16;1570:27;1563:38;1524:87;-1:-1:-1;1665:2:10;1644:15;-1:-1:-1;;1640:29:10;1631:39;;;;1672:4;1627:50;;1211:472;-1:-1:-1;;1211:472:10:o;1688:220::-;1837:2;1826:9;1819:21;1800:4;1857:45;1898:2;1887:9;1883:18;1875:6;1857:45;:::i;1913:180::-;1972:6;2025:2;2013:9;2004:7;2000:23;1996:32;1993:52;;;2041:1;2038;2031:12;1993:52;-1:-1:-1;2064:23:10;;1913:180;-1:-1:-1;1913:180:10:o;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:10;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:10:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:10;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:10;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:10;2672:724;-1:-1:-1;;;;;;2672:724:10:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:10;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:10:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:10;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:10;;5952:32;;-1:-1:-1;;5996:16:10;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:10;;6122:435;-1:-1:-1;;;;;6122:435:10:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;10006:17;;;10003:43;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:10;10062:13;;9946:135::o;10905:401::-;11107:2;11089:21;;;11146:2;11126:18;;;11119:30;11185:34;11180:2;11165:18;;11158:62;-1:-1:-1;;;11251:2:10;11236:18;;11229:35;11296:3;11281:19;;10905:401::o;11311:406::-;11513:2;11495:21;;;11552:2;11532:18;;;11525:30;11591:34;11586:2;11571:18;;11564:62;-1:-1:-1;;;11657:2:10;11642:18;;11635:40;11707:3;11692:19;;11311:406::o;11722:128::-;11762:3;11793:1;11789:6;11786:1;11783:13;11780:39;;;11799:18;;:::i;:::-;-1:-1:-1;11835:9:10;;11722:128::o;11855:465::-;12112:2;12101:9;12094:21;12075:4;12138:56;12190:2;12179:9;12175:18;12167:6;12138:56;:::i;:::-;12242:9;12234:6;12230:22;12225:2;12214:9;12210:18;12203:50;12270:44;12307:6;12299;12270:44;:::i;:::-;12262:52;11855:465;-1:-1:-1;;;;;11855:465:10:o;13397:827::-;-1:-1:-1;;;;;13794:15:10;;;13776:34;;13846:15;;13841:2;13826:18;;13819:43;13756:3;13893:2;13878:18;;13871:31;;;13719:4;;13925:57;;13962:19;;13954:6;13925:57;:::i;:::-;14030:9;14022:6;14018:22;14013:2;14002:9;13998:18;13991:50;14064:44;14101:6;14093;14064:44;:::i;:::-;14050:58;;14157:9;14149:6;14145:22;14139:3;14128:9;14124:19;14117:51;14185:33;14211:6;14203;14185:33;:::i;:::-;14177:41;13397:827;-1:-1:-1;;;;;;;;13397:827:10:o;14229:249::-;14298:6;14351:2;14339:9;14330:7;14326:23;14322:32;14319:52;;;14367:1;14364;14357:12;14319:52;14399:9;14393:16;14418:30;14442:5;14418:30;:::i;14483:179::-;14518:3;14560:1;14542:16;14539:23;14536:120;;;14606:1;14603;14600;14585:23;-1:-1:-1;14643:1:10;14637:8;14632:3;14628:18;14536:120;14483:179;:::o;14667:671::-;14706:3;14748:4;14730:16;14727:26;14724:39;;;14667:671;:::o;14724:39::-;14790:2;14784:9;-1:-1:-1;;14855:16:10;14851:25;;14848:1;14784:9;14827:50;14906:4;14900:11;14930:16;14965:18;15036:2;15029:4;15021:6;15017:17;15014:25;15009:2;15001:6;14998:14;14995:45;14992:58;;;15043:5;;;;;14667:671;:::o;14992:58::-;15080:6;15074:4;15070:17;15059:28;;15116:3;15110:10;15143:2;15135:6;15132:14;15129:27;;;15149:5;;;;;;14667:671;:::o;15129:27::-;15233:2;15214:16;15208:4;15204:27;15200:36;15193:4;15184:6;15179:3;15175:16;15171:27;15168:69;15165:82;;;15240:5;;;;;;14667:671;:::o;15165:82::-;15256:57;15307:4;15298:6;15290;15286:19;15282:30;15276:4;15256:57;:::i;:::-;-1:-1:-1;15329:3:10;;14667:671;-1:-1:-1;;;;;14667:671:10:o;15764:404::-;15966:2;15948:21;;;16005:2;15985:18;;;15978:30;16044:34;16039:2;16024:18;;16017:62;-1:-1:-1;;;16110:2:10;16095:18;;16088:38;16158:3;16143:19;;15764:404::o;16173:561::-;-1:-1:-1;;;;;16470:15:10;;;16452:34;;16522:15;;16517:2;16502:18;;16495:43;16569:2;16554:18;;16547:34;;;16612:2;16597:18;;16590:34;;;16432:3;16655;16640:19;;16633:32;;;16395:4;;16682:46;;16708:19;;16700:6;16682:46;:::i;:::-;16674:54;16173:561;-1:-1:-1;;;;;;;16173:561:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1158000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"decimals()": "292",
								"exists(uint256)": "2495",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "544",
								"symbol()": "infinite",
								"totalSupply(uint256)": "2471",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 233,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 201,
									"end": 233,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 201,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "537761705A65726F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 201,
									"end": 233,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 201,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 233,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 201,
									"end": 233,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 201,
									"end": 233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 201,
									"end": 233,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 233,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 239,
									"end": 268,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 239,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 239,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29ABAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 239,
									"end": 268,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 268,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 239,
									"end": 268,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 239,
									"end": 268,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 239,
									"end": 268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 239,
									"end": 268,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 239,
									"end": 268,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 297,
									"end": 343,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 297,
									"end": 343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 297,
									"end": 343,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 297,
									"end": 343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 297,
									"end": 343,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 297,
									"end": 343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 297,
									"end": 343,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 297,
									"end": 343,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 297,
									"end": 343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8171,
									"end": 8257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 158,
									"end": 709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 158,
									"end": 709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 158,
									"end": 709,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 709,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220afc5592bb1df1d6194d0b4daae68a83d4e8dda9e5d55a38dfb5433d85c0cadc164736f6c634300080e0033",
									".code": [
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "4E1273F4"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "BD85B039"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "F242432A"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "4E1273F4"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "4F558E79"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "FDD58E"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "E89341C"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "2EB2C2D6"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 158,
											"end": 709,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 349,
											"end": 467,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 349,
											"end": 467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 349,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 349,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 349,
											"end": 467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 467,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 349,
											"end": 467,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 349,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 707,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 601,
											"end": 707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 698,
											"end": 700,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 601,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 601,
											"end": 707,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 901,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 958,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 901,
											"end": 1021,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 473,
											"end": 595,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 473,
											"end": 595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 473,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 473,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 697,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 697,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 785,
											"end": 801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 697,
											"end": 808,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8240,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8370,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8309,
											"end": 8371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 349,
											"end": 467,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 349,
											"end": 467,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 412,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 448,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 441,
											"end": 460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 441,
											"end": 460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 441,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 441,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 349,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9067,
											"end": 9097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9106,
											"end": 9168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9177,
											"end": 9225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8853,
											"end": 9267,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4431,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9486,
											"end": 9516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9552,
											"end": 9586,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9272,
											"end": 9677,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2880,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3010,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3023,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3000,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2981,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2962,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 595,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 473,
											"end": 595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 538,
											"end": 551,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 574,
											"end": 588,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 567,
											"end": 588,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 588,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 567,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 567,
											"end": 588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 567,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3240,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10086,
											"end": 10491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3936,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10698,
											"end": 10700,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10680,
											"end": 10701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10776,
											"end": 10810,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10749,
											"end": 10811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10820,
											"end": 10858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10496,
											"end": 10900,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6522,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6641,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6780,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6817,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6897,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7085,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6748,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 7138,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7266,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6233,
											"end": 7348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12527,
											"end": 12529,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12509,
											"end": 12530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12639,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12578,
											"end": 12640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12649,
											"end": 12688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12325,
											"end": 12730,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12773,
											"end": 13096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5113,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5254,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5312,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5369,
											"end": 5377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5348,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5470,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5642,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12882,
											"end": 12900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5812,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1399,
											"end": 1555,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1471,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1471,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1520,
											"end": 1530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1512,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1509,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 1496,
											"end": 1530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1530,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1473,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1555,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1399,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1569,
											"end": 1585,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1565,
											"end": 1989,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 1628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1625,
											"end": 1635,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1621,
											"end": 1635,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1676,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1673,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1711,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1721,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1714,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1771,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1774,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1817,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13190,
											"end": 13192,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13172,
											"end": 13193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13229,
											"end": 13231,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 13209,
											"end": 13227,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13209,
											"end": 13227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13209,
											"end": 13227,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13202,
											"end": 13232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13268,
											"end": 13302,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206275726E20616D6F756E74206578636565647320746F74"
										},
										{
											"begin": 13248,
											"end": 13266,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13248,
											"end": 13266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13241,
											"end": 13303,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C537570706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13312,
											"end": 13350,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13367,
											"end": 13386,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13367,
											"end": 13386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 12988,
											"end": 13392,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 1793,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1928,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 1946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1946,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1637,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16772,
											"end": 16786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15527,
											"end": 15548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15584,
											"end": 15586,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15557,
											"end": 15587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15623,
											"end": 15657,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15603,
											"end": 15621,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15603,
											"end": 15621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15603,
											"end": 15621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15674,
											"end": 15692,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15674,
											"end": 15692,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15674,
											"end": 15692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15667,
											"end": 15717,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15343,
											"end": 15759,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 16636,
											"end": 16686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17070,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16925,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 15838,
											"end": 15888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1683,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1211,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1253,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1297,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1325,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1361,
											"end": 1374,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1485,
											"end": 1498,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1498,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1504,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1468,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1468,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1446,
											"end": 1505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 1353,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1540,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1581,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1524,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 1667,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1644,
											"end": 1659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 1669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1677,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1683,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1908,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1688,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1898,
											"end": 1900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1881,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 1857,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 2093,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1913,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2011,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2023,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2028,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1993,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2087,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2064,
											"end": 2087,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 2093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1913,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2422,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2599,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2882,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 2966,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3598,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 3659,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4240,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4288,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4480,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4662,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4847,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5416,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5500,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5836,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 6048,
											"end": 6111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6761,
											"end": 6817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6952,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 6957,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 6993,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7095,
											"end": 7127,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7367,
											"end": 7376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7348,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7396,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7605,
											"end": 7638,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7674,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7722,
											"end": 7760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7811,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7858,
											"end": 7860,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7862,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7916,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7996,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8669,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8653,
											"end": 8670,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8722,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8774,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8755,
											"end": 8775,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8832,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9743,
											"end": 9753,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9734,
											"end": 9754,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9755,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9803,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9885,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9866,
											"end": 9886,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9896,
											"end": 9911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9935,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 10026,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 10081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11119,
											"end": 11149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11185,
											"end": 11219,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11253,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11229,
											"end": 11264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 11306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11552,
											"end": 11554,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11525,
											"end": 11555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11564,
											"end": 11626,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11635,
											"end": 11675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11311,
											"end": 11717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 11799,
											"end": 11817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 12190,
											"end": 12192,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12173,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12138,
											"end": 12194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12230,
											"end": 12252,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12203,
											"end": 12253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12270,
											"end": 12314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12314,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 12320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13397,
											"end": 14224,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 13397,
											"end": 14224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13794,
											"end": 13809,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13809,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13810,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13846,
											"end": 13861,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13846,
											"end": 13861,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13841,
											"end": 13843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13826,
											"end": 13844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13826,
											"end": 13844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13819,
											"end": 13862,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13756,
											"end": 13759,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13893,
											"end": 13895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13878,
											"end": 13896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13878,
											"end": 13896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13871,
											"end": 13902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13871,
											"end": 13902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13871,
											"end": 13902,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13719,
											"end": 13723,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13719,
											"end": 13723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 13982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 13925,
											"end": 13982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13962,
											"end": 13981,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13962,
											"end": 13981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13954,
											"end": 13960,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 13982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 13925,
											"end": 13982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13925,
											"end": 13982,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 13925,
											"end": 13982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14030,
											"end": 14039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14018,
											"end": 14040,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14013,
											"end": 14015,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14002,
											"end": 14011,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13998,
											"end": 14016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13991,
											"end": 14041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14064,
											"end": 14108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 14101,
											"end": 14107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14093,
											"end": 14099,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14064,
											"end": 14108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 14064,
											"end": 14108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14064,
											"end": 14108,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 14064,
											"end": 14108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14149,
											"end": 14155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14145,
											"end": 14167,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14139,
											"end": 14142,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14128,
											"end": 14137,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14124,
											"end": 14143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14117,
											"end": 14168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 14211,
											"end": 14217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14203,
											"end": 14209,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 14185,
											"end": 14218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14218,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 14185,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14218,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 13397,
											"end": 14224,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13397,
											"end": 14224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14229,
											"end": 14478,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 14229,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14330,
											"end": 14337,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14349,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14354,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 14319,
											"end": 14371,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14319,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 14319,
											"end": 14371,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14367,
											"end": 14368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14365,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14357,
											"end": 14369,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14319,
											"end": 14371,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 14319,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14399,
											"end": 14408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14409,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 14442,
											"end": 14447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 14418,
											"end": 14448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14483,
											"end": 14662,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 14483,
											"end": 14662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14518,
											"end": 14521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14560,
											"end": 14561,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 14542,
											"end": 14558,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14539,
											"end": 14562,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14536,
											"end": 14656,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14536,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 14536,
											"end": 14656,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14606,
											"end": 14607,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14603,
											"end": 14604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14600,
											"end": 14601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14585,
											"end": 14608,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14643,
											"end": 14644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14637,
											"end": 14645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14632,
											"end": 14635,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14536,
											"end": 14656,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 14536,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14483,
											"end": 14662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14483,
											"end": 14662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 14667,
											"end": 15338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14706,
											"end": 14709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14748,
											"end": 14752,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14730,
											"end": 14746,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14727,
											"end": 14753,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14724,
											"end": 14763,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14724,
											"end": 14763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 14724,
											"end": 14763,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14724,
											"end": 14763,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 14724,
											"end": 14763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14784,
											"end": 14793,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14855,
											"end": 14871,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14848,
											"end": 14849,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14784,
											"end": 14793,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14827,
											"end": 14877,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 14906,
											"end": 14910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14900,
											"end": 14911,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 14946,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14965,
											"end": 14983,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15036,
											"end": 15038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15029,
											"end": 15033,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15021,
											"end": 15027,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15014,
											"end": 15039,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15009,
											"end": 15011,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15001,
											"end": 15007,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14998,
											"end": 15012,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14995,
											"end": 15040,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15050,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 14992,
											"end": 15050,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15043,
											"end": 15048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14992,
											"end": 15050,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 14992,
											"end": 15050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15074,
											"end": 15078,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15070,
											"end": 15087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15059,
											"end": 15087,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15059,
											"end": 15087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15110,
											"end": 15120,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15143,
											"end": 15145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15135,
											"end": 15141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15132,
											"end": 15146,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15129,
											"end": 15156,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15129,
											"end": 15156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 15129,
											"end": 15156,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15129,
											"end": 15156,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 15129,
											"end": 15156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15233,
											"end": 15235,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15230,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15208,
											"end": 15212,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15200,
											"end": 15236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15193,
											"end": 15197,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15184,
											"end": 15190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15179,
											"end": 15182,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15175,
											"end": 15191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15171,
											"end": 15198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15168,
											"end": 15237,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 15165,
											"end": 15247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15240,
											"end": 15245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15165,
											"end": 15247,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 15165,
											"end": 15247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15256,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 15307,
											"end": 15311,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15298,
											"end": 15304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15290,
											"end": 15296,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15286,
											"end": 15305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15282,
											"end": 15312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15276,
											"end": 15280,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15256,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 15256,
											"end": 15313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15256,
											"end": 15313,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 15256,
											"end": 15313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15329,
											"end": 15332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15329,
											"end": 15332,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 14667,
											"end": 15338,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14667,
											"end": 15338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 16168,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 15764,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15966,
											"end": 15968,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15948,
											"end": 15969,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15948,
											"end": 15969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15948,
											"end": 15969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16005,
											"end": 16007,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15978,
											"end": 16008,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16078,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 16039,
											"end": 16041,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16024,
											"end": 16042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16024,
											"end": 16042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16017,
											"end": 16079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16110,
											"end": 16112,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16095,
											"end": 16113,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16095,
											"end": 16113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16088,
											"end": 16126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16158,
											"end": 16161,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16143,
											"end": 16162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16143,
											"end": 16162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15764,
											"end": 16168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16173,
											"end": 16734,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 16173,
											"end": 16734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16470,
											"end": 16485,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16485,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16452,
											"end": 16486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16452,
											"end": 16486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16522,
											"end": 16537,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16522,
											"end": 16537,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16517,
											"end": 16519,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16502,
											"end": 16520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16502,
											"end": 16520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16495,
											"end": 16538,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16569,
											"end": 16571,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16554,
											"end": 16572,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16554,
											"end": 16572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16581,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16612,
											"end": 16614,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16590,
											"end": 16624,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16590,
											"end": 16624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16590,
											"end": 16624,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16432,
											"end": 16435,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 16655,
											"end": 16658,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16640,
											"end": 16659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16640,
											"end": 16659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16633,
											"end": 16665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16633,
											"end": 16665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16633,
											"end": 16665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16395,
											"end": 16399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16395,
											"end": 16399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16682,
											"end": 16728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 16682,
											"end": 16728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16708,
											"end": 16727,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16708,
											"end": 16727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16700,
											"end": 16706,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16682,
											"end": 16728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 16682,
											"end": 16728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16682,
											"end": 16728,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 16682,
											"end": 16728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16674,
											"end": 16728,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 16173,
											"end": 16734,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16173,
											"end": 16734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
								"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
								"azero-swap-contracts/contracts/szERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"decimals()": "313ce567",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"azero-swap-contracts/contracts/szERC1155.sol\":\"szERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"azero-swap-contracts/contracts/szERC1155.sol\":{\"keccak256\":\"0xc55ad85e87bde457e3fb1626e28d990323489171c0f2d6d0eff9c3969c129f22\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ee3a45238f315b03d9b9470dedfa22b11df24a2e3d879e897bc758b66fa9a080\",\"dweb:/ipfs/QmdTjk7t7x9QfCF6XxNHPgNEhhTznpWMNLVNSjPTZrftKy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "azero-swap-contracts/contracts/szERC1155.sol:szERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "azero-swap-contracts/contracts/szERC1155.sol:szERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "azero-swap-contracts/contracts/szERC1155.sol:szERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1395,
								"contract": "azero-swap-contracts/contracts/szERC1155.sol:szERC1155",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1918,
								"contract": "azero-swap-contracts/contracts/szERC1155.sol:szERC1155",
								"label": "contractName",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1921,
								"contract": "azero-swap-contracts/contracts/szERC1155.sol:szERC1155",
								"label": "contractSymbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "azero-swap-contracts/contracts/szERC1155.sol:szERC1155",
								"label": "urlPrefix",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1852
						],
						"Context": [
							1874
						],
						"ERC1155": [
							1222
						],
						"ERC165": [
							1898
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1910
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1345,
							"src": "134:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1386,
							"src": "159:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1558,
							"src": "192:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1853,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1875,
							"src": "273:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1899,
							"src": "307:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1874,
										"src": "590:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1898,
										"src": "599:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "607:8:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1557,
										"src": "617:19:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222,
								1557,
								1344,
								1898,
								1910,
								1874
							],
							"name": "ERC1155",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1852,
										"src": "649:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:0",
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "724:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "846:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1038:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1139:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 39,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1119:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:0"
									},
									"scope": 1222,
									"src": "1107:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1897,
										1909
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1344:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1373:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 57,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "1393:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 56,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1344",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1430:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 63,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "1450:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1557_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1557_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 62,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1557",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1522:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1222_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1897,
															"src": "1498:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1354:180:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 51,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 49,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1898,
												"src": "1312:6:0"
											},
											{
												"id": 50,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1910,
												"src": "1320:7:0"
											}
										],
										"src": "1303:25:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1338:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:0"
									},
									"scope": 1222,
									"src": "1236:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1556
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2015:28:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2025:11:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2000:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:0"
									},
									"scope": 1222,
									"src": "1940:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1282
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2280:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2290:77:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2384:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 110,
														"indexExpression": {
															"id": 109,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2394:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2384:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2384:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2377:29:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:0"
									},
									"scope": 1222,
									"src": "2185:228:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2743:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2761:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2761:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 132,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2780:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2761:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2753:83:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2864:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2847:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 140,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"nodeType": "ArrayTypeName",
															"src": "2847:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 146,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2894:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2894:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2880:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 143,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2884:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ArrayTypeName",
															"src": "2884:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2847:63:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "2967:74:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 161,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2981:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2995:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2981:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 165,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "3010:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3019:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3010:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 168,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "3023:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 170,
																			"indexExpression": {
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3027:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3023:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 164,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "3000:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3000:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2981:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2981:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2945:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2945:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2934:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 175,
															"src": "2926:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2926:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2926:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2962:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2964:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2962:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2921:120:0"
											},
											{
												"expression": {
													"id": 176,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3058:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 177,
												"nodeType": "Return",
												"src": "3051:20:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2419:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2579:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2695:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2611:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2594:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2594:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2594:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2638:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2621:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2621:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "2621:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:49:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2721:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2721:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2721:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:18:0"
									},
									"scope": 1222,
									"src": "2570:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3230:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "3259:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3259:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3273:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3283:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3240:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3240:52:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3084:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3155:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3221:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3181:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3173:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3196:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3191:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3191:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3172:33:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:0:0"
									},
									"scope": 1222,
									"src": "3146:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3471:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 207,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3488:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3488:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3516:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3488:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "3481:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3305:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3375:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3447:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3400:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3392:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3417:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3409:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3465:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:6:0"
									},
									"scope": 1222,
									"src": "3366:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3768:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3799:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 231,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "3807:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3807:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3799:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3840:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "3846:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3846:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 234,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "3823:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3823:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3799:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3873:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3778:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3960:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3964:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3968:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3976:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3936:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3936:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3936:45:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3538:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3608:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3759:8:0"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3642:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3634:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3664:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3656:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3684:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3676:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3704:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3696:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3720:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3720:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:119:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:0:0"
									},
									"scope": 1222,
									"src": "3599:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4254:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4285:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "4293:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4293:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4285:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "4326:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "4332:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4332:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4309:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4309:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4285:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4359:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4264:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4264:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 287,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4478:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 283,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4431:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4431:52:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3994:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4069:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4245:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4108:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4100:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4130:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4122:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4159:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4142:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "4142:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4189:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4172:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "4172:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4219:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4206:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4090:139:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:0"
									},
									"scope": 1222,
									"src": "4060:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "5103:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5121:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5127:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5127:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5121:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5113:66:0"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5198:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5190:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "5209:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:31:0"
											},
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5248:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5231:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 324,
															"nodeType": "ArrayTypeName",
															"src": "5231:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5272:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5254:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:44:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5302:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5285:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 332,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5285:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"nodeType": "ArrayTypeName",
															"src": "5285:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5312:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5369:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5379:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5385:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5389:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 344,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5403:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5348:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5348:60:0"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5427:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5419:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 350,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5441:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"id": 351,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5451:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5441:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5455:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5441:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5419:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "5478:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5493:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5478:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5501:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5470:76:0"
											},
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "5556:77:0",
												"statements": [
													{
														"expression": {
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 363,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5580:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 366,
																	"indexExpression": {
																		"id": 364,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5590:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5580:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 367,
																"indexExpression": {
																	"id": 365,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "5594:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5580:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "5602:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 369,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5616:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5602:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5580:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "5580:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 374,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5642:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 377,
															"indexExpression": {
																"id": 375,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5652:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5642:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5656:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 379,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5663:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5642:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5700:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5716:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5720:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 382,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5685:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5685:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "5680:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5762:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5778:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5782:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 395,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "5742:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "5742:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5843:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5853:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5859:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5863:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5867:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "5812:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5812:68:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4496:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4949:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4984:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4976:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5006:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4998:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5046:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5038:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5075:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5062:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:119:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5103:0:0"
									},
									"scope": 1222,
									"src": "4940:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "6421:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 426,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6439:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 428,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6453:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6453:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6439:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6469:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6431:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "6530:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "6522:66:0"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6607:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "6599:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6599:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 446,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "6618:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6599:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6662:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6672:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6678:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6682:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 454,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6696:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "6641:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6641:60:0"
											},
											{
												"body": {
													"id": 515,
													"nodeType": "Block",
													"src": "6753:370:0",
													"statements": [
														{
															"assignments": [
																470
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 470,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6775:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6767:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 474,
															"initialValue": {
																"baseExpression": {
																	"id": 471,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6780:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6767:19:0"
														},
														{
															"assignments": [
																476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 476,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6808:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6800:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6800:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 480,
															"initialValue": {
																"baseExpression": {
																	"id": 477,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6817:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6825:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6800:27:0"
														},
														{
															"assignments": [
																482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 482,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6850:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6842:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6842:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 488,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6864:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6874:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6864:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "6878:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6864:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6842:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "6905:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 491,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6920:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6905:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 489,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6897:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6897:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "6897:76:0"
														},
														{
															"id": 506,
															"nodeType": "UncheckedBlock",
															"src": "6987:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 496,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "7015:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 499,
																				"indexExpression": {
																					"id": 497,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "7025:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7015:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 500,
																			"indexExpression": {
																				"id": 498,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "7029:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7015:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "7037:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 502,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7051:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7037:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7015:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"nodeType": "ExpressionStatement",
																	"src": "7015:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 507,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7085:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 508,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7095:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7085:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"id": 509,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7099:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7085:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 512,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7106:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7085:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "7085:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6736:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6736:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"initializationExpression": {
													"assignments": [
														459
													],
													"declarations": [
														{
															"constant": false,
															"id": 459,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6725:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 516,
															"src": "6717:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 458,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 461,
													"initialValue": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6729:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6717:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6748:3:0",
														"subExpression": {
															"id": 466,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6750:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ExpressionStatement",
													"src": "6748:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6712:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 518,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7168:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7172:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 522,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 517,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "7138:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7138:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "7133:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7216:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7236:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 530,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "7196:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7196:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "7196:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7302:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7312:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7318:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7322:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 539,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 540,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7336:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "7266:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "7266:75:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "5893:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6242:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6304:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6296:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6333:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6316:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 415,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 416,
													"nodeType": "ArrayTypeName",
													"src": "6316:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6346:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 418,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 419,
													"nodeType": "ArrayTypeName",
													"src": "6346:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6393:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6380:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6380:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:139:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:0"
									},
									"scope": 1222,
									"src": "6233:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "8227:30:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8237:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8244:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8237:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8237:13:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "7354:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8180:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8202:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8188:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8187:22:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8227:0:0"
									},
									"scope": 1222,
									"src": "8171:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8759:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "8777:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 569,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8783:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8783:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8777:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8795:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "8769:62:0"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8850:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8842:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "8861:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8861:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:31:0"
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8900:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8883:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 585,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [
														{
															"id": 588,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "8924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8906:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8883:44:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8954:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8937:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8937:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ArrayTypeName",
															"src": "8937:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "8982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8964:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8937:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9021:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9043:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 608,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 609,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9061:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9000:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "9000:66:0"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "9077:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "9087:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9077:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9091:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9077:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 617,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "9098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9077:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9077:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9134:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9152:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 622,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9156:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "9119:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "9114:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9220:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9212:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9212:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9212:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9224:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9228:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 639,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 631,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "9182:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "9182:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9289:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9299:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9299:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9311:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9315:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 651,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9258:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "9258:74:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "8263:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8639:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8662:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8654:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8718:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:97:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8759:0:0"
									},
									"scope": 1222,
									"src": "8630:709:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9838:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "9856:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9870:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9862:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9862:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9862:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9856:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9874:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9848:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9848:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9848:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 681,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "9928:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9928:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 683,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "9942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9942:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9928:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9958:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:0"
											},
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10020:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "10012:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10012:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 691,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "10031:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10031:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10012:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10075:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10093:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10097:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10101:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 702,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 694,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10054:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10054:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "10054:66:0"
											},
											{
												"body": {
													"id": 729,
													"nodeType": "Block",
													"src": "10172:60:0",
													"statements": [
														{
															"expression": {
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 717,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "10186:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 722,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 718,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "10196:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 720,
																			"indexExpression": {
																				"id": 719,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "10200:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10196:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10186:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 723,
																	"indexExpression": {
																		"id": 721,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "10204:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10186:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 724,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "10211:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"id": 725,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10219:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10211:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10186:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "10186:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "10151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10155:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10155:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10151:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"initializationExpression": {
													"assignments": [
														707
													],
													"declarations": [
														{
															"constant": false,
															"id": 707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10144:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 730,
															"src": "10136:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10136:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 709,
													"initialValue": {
														"hexValue": "30",
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10136:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10167:3:0",
														"subExpression": {
															"id": 714,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 716,
													"nodeType": "ExpressionStatement",
													"src": "10167:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10131:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 732,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10261:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10283:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10287:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10292:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 731,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "10247:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "10242:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10331:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10349:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10341:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10341:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10353:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10357:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 750,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10371:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "10311:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "10311:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10423:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 756,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10445:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10449:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 762,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 763,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 754,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10387:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10387:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10387:81:0"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "9345:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9693:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9721:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9713:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9750:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9733:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 660,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"nodeType": "ArrayTypeName",
													"src": "9733:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9763:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 663,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 664,
													"nodeType": "ArrayTypeName",
													"src": "9763:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9810:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9797:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9797:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9703:117:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9838:0:0"
									},
									"scope": 1222,
									"src": "9684:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "10819:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "10837:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10853:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10845:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10845:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10845:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10837:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10857:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "10829:66:0"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10914:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10906:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 787,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10906:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 789,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "10925:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10925:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10906:31:0"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10964:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10947:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 794,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 795,
															"nodeType": "ArrayTypeName",
															"src": "10947:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [
														{
															"id": 798,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "10988:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "10970:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10970:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10947:44:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11018:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11001:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 803,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ArrayTypeName",
															"src": "11001:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11046:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11028:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11028:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11001:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11085:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11095:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11109:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11101:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11101:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11101:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11113:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 818,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11118:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11127:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "11064:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11064:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "11064:66:0"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11149:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11141:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 824,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "11163:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 825,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11173:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11163:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "11177:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11163:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11141:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 831,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "11200:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 832,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "11215:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11200:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11223:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11192:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "11192:70:0"
											},
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "11272:77:0",
												"statements": [
													{
														"expression": {
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 837,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "11296:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 838,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "11306:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11296:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 841,
																"indexExpression": {
																	"id": 839,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "11310:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11296:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 842,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "11318:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 843,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "11332:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11318:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11296:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "11296:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 849,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11379:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11403:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11395:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11395:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11395:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11407:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11411:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "11364:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11364:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "11359:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11449:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11459:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11473:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 862,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11465:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11465:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11477:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 867,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11491:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 859,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "11429:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11429:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "11429:65:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10481:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10724:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10739:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10769:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10761:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10789:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10729:72:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10819:0:0"
									},
									"scope": 1222,
									"src": "10715:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "11824:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "11842:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11858:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11850:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11850:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11842:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11862:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "11834:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 895,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "11918:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11918:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 897,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "11932:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11932:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11918:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11948:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11910:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "11910:81:0"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12010:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "12002:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12002:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 905,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "12021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12021:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12002:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12065:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12089:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12081:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12081:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12081:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12093:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12107:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "12044:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12044:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12044:66:0"
											},
											{
												"body": {
													"id": 969,
													"nodeType": "Block",
													"src": "12162:323:0",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12184:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12176:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 936,
															"initialValue": {
																"baseExpression": {
																	"id": 933,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12189:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 935,
																"indexExpression": {
																	"id": 934,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12193:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12189:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12176:19:0"
														},
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12217:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12209:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12209:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12226:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12226:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12209:27:0"
														},
														{
															"assignments": [
																944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 944,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12259:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12251:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 943,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12251:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 950,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 945,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "12273:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "12283:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12273:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 949,
																"indexExpression": {
																	"id": 948,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "12287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12273:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12251:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "12314:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 953,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 938,
																			"src": "12329:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12314:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12337:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 951,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12306:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12306:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "12306:70:0"
														},
														{
															"id": 968,
															"nodeType": "UncheckedBlock",
															"src": "12390:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 958,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "12418:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 961,
																				"indexExpression": {
																					"id": 959,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 932,
																					"src": "12428:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12418:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 962,
																			"indexExpression": {
																				"id": 960,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "12432:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12418:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 963,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "12440:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 964,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "12454:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12440:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12418:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "12418:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "12141:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 925,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12145:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12145:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12141:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"initializationExpression": {
													"assignments": [
														921
													],
													"declarations": [
														{
															"constant": false,
															"id": 921,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12134:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 970,
															"src": "12126:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 920,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 923,
													"initialValue": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12126:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12157:3:0",
														"subExpression": {
															"id": 928,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "12157:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 930,
													"nodeType": "ExpressionStatement",
													"src": "12157:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12121:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 972,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12514:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12538:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12530:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12530:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12530:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12542:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 979,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 971,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "12500:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12500:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "EmitStatement",
												"src": "12495:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12586:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12614:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 990,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12628:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 982,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "12566:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12566:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "12566:65:0"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "11507:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11704:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11724:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11763:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11746:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 876,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 877,
													"nodeType": "ArrayTypeName",
													"src": "11746:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11793:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11776:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"nodeType": "ArrayTypeName",
													"src": "11776:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11714:92:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11824:0:0"
									},
									"scope": 1222,
									"src": "11695:943:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "12896:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "12914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1007,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "12923:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12914:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12933:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12906:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "12906:71:0"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1012,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "12987:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1013,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13006:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12987:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1014,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13013:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12987:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "13025:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12987:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "12987:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1021,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "13063:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13070:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "13080:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "13048:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13048:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "EmitStatement",
												"src": "13043:46:0"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "12644:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12782:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12818:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12841:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12833:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12864:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12800:78:0"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:0:0"
									},
									"scope": 1222,
									"src": "12773:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14242:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "13102:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14039:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14077:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14069:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14103:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14095:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14125:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14117:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14154:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14137:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "14137:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14184:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14167:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1038,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1039,
													"nodeType": "ArrayTypeName",
													"src": "14167:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14214:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14201:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14059:165:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14242:0:0"
									},
									"scope": 1222,
									"src": "14030:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "15388:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "14250:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15186:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15223:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15215:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15241:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15271:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15263:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15300:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15283:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1055,
													"nodeType": "ArrayTypeName",
													"src": "15283:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15313:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1057,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1058,
													"nodeType": "ArrayTypeName",
													"src": "15313:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15347:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15205:165:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15388:0:0"
									},
									"scope": 1222,
									"src": "15177:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "15589:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "15603:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1575,
														"src": "15603:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15603:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "15599:516:0",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "15620:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1107,
																		"nodeType": "Block",
																		"src": "15737:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1096,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "15759:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1097,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "15771:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1098,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1366,
																							"src": "15771:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15771:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15759:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1106,
																				"nodeType": "IfStatement",
																				"src": "15755:152:0",
																				"trueBody": {
																					"id": 1105,
																					"nodeType": "Block",
																					"src": "15816:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1102,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15845:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1101,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15838:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1103,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15838:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1104,
																							"nodeType": "ExpressionStatement",
																							"src": "15838:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1108,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1095,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1094,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15727:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1108,
																				"src": "15720:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1093,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15720:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15719:17:0"
																	},
																	"src": "15711:210:0"
																},
																{
																	"block": {
																		"id": 1116,
																		"nodeType": "Block",
																		"src": "15956:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1113,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1110,
																							"src": "15981:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1112,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15974:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15974:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1115,
																				"nodeType": "ExpressionStatement",
																				"src": "15974:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1117,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1111,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1110,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15948:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1117,
																				"src": "15934:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1109,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15934:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15933:22:0"
																	},
																	"src": "15922:81:0"
																},
																{
																	"block": {
																		"id": 1122,
																		"nodeType": "Block",
																		"src": "16010:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1119,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16035:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1118,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16028:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16028:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1121,
																				"nodeType": "ExpressionStatement",
																				"src": "16028:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1123,
																	"nodeType": "TryCatchClause",
																	"src": "16004:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "15677:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "15687:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1089,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "15693:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "15697:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "15705:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1084,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "15655:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1083,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "15638:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15638:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1366,
																	"src": "15638:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15638:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1124,
															"nodeType": "TryStatement",
															"src": "15634:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15405:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15453:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15445:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15471:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15493:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15521:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15513:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15541:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15570:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15557:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:145:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15589:0:0"
									},
									"scope": 1222,
									"src": "15396:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "16345:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "16359:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1575,
														"src": "16359:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16359:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "16355:558:0",
												"trueBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "16376:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1172,
																		"nodeType": "Block",
																		"src": "16530:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1161,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1159,
																						"src": "16552:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1162,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "16564:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1384,
																							"src": "16564:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16564:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16552:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1171,
																				"nodeType": "IfStatement",
																				"src": "16548:157:0",
																				"trueBody": {
																					"id": 1170,
																					"nodeType": "Block",
																					"src": "16614:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1167,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16643:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1166,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16636:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16636:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1169,
																							"nodeType": "ExpressionStatement",
																							"src": "16636:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1173,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1160,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1159,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16507:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1173,
																				"src": "16500:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1158,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16500:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16482:47:0"
																	},
																	"src": "16474:245:0"
																},
																{
																	"block": {
																		"id": 1181,
																		"nodeType": "Block",
																		"src": "16754:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1178,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1175,
																							"src": "16779:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1177,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16772:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16772:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1180,
																				"nodeType": "ExpressionStatement",
																				"src": "16772:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1182,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1176,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1175,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16746:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1182,
																				"src": "16732:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1174,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16732:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16731:22:0"
																	},
																	"src": "16720:81:0"
																},
																{
																	"block": {
																		"id": 1187,
																		"nodeType": "Block",
																		"src": "16808:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1184,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16833:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1183,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16826:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16826:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1186,
																				"nodeType": "ExpressionStatement",
																				"src": "16826:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1188,
																	"nodeType": "TryCatchClause",
																	"src": "16802:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "16438:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1153,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "16448:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1154,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "16454:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1155,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "16459:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1156,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "16468:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1149,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "16411:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1148,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "16394:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16394:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "16394:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16394:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1189,
															"nodeType": "TryStatement",
															"src": "16390:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16136:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16215:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16207:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16237:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16229:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16266:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16249:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1135,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1136,
													"nodeType": "ArrayTypeName",
													"src": "16249:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16296:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16279:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "16279:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16326:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16313:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16313:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:165:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16345:0:0"
									},
									"scope": 1222,
									"src": "16127:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "17009:109:0",
										"statements": [
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17036:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "17019:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1203,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1204,
															"nodeType": "ArrayTypeName",
															"src": "17019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17058:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17044:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17048:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1207,
															"nodeType": "ArrayTypeName",
															"src": "17048:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17044:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17019:41:0"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1212,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "17070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1214,
														"indexExpression": {
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17076:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17070:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1215,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "17081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17070:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "17070:18:0"
											},
											{
												"expression": {
													"id": 1218,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1205,
													"src": "17106:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1219,
												"nodeType": "Return",
												"src": "17099:12:0"
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "16934:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "16960:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16951:17:0"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "16991:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1198,
													"nodeType": "ArrayTypeName",
													"src": "16991:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16990:18:0"
									},
									"scope": 1222,
									"src": "16925:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1223,
							"src": "570:16550:0",
							"usedErrors": []
						}
					],
					"src": "109:17012:0"
				},
				"id": 0
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC165": [
							1910
						]
					},
					"id": 1345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:1"
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1345,
							"sourceUnit": 1911,
							"src": "120:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1227,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1910,
										"src": "357:7:1"
									},
									"id": 1228,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1226,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1344,
							"linearizedBaseContracts": [
								1344,
								1910
							],
							"name": "IERC1155",
							"nameLocation": "345:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1241,
									"name": "TransferSingle",
									"nameLocation": "503:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "518:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "544:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "566:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:1"
									},
									"src": "497:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1256,
									"name": "TransferBatch",
									"nameLocation": "774:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "797:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "831:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "861:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1250,
													"nodeType": "ArrayTypeName",
													"src": "889:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "912:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "912:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:1"
									},
									"src": "768:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1265,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1114:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:1"
									},
									"src": "1093:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1272,
									"name": "URI",
									"nameLocation": "1540:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1544:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1558:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:1"
									},
									"src": "1534:44:1"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1781:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1798:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:1"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1833:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:1"
									},
									"scope": 1344,
									"src": "1762:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2065:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2094:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:1"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2165:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1291,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1292,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:1"
									},
									"scope": 1344,
									"src": "2041:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2469:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2487:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:1"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:1"
									},
									"scope": 1344,
									"src": "2442:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2683:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2700:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:1"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2741:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:1"
									},
									"scope": 1344,
									"src": "2657:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3352:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3374:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3394:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3438:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:1"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:1"
									},
									"scope": 1344,
									"src": "3317:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3914:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3936:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3956:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3988:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4024:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:1"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:1"
									},
									"scope": 1344,
									"src": "3874:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1345,
							"src": "335:3726:1",
							"usedErrors": []
						}
					],
					"src": "95:3967:1"
				},
				"id": 1
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1910
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 1911,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1349,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1910,
										"src": "262:7:2"
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1348,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								1910
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1385,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1373,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1375,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1385,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1386,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
					"exportedSymbols": {
						"Address": [
							1852
						],
						"Context": [
							1874
						],
						"ERC1155": [
							1222
						],
						"ERC1155Supply": [
							1542
						],
						"ERC165": [
							1898
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1910
						]
					},
					"id": 1543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "126:23:3"
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1543,
							"sourceUnit": 1223,
							"src": "151:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1390,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1222,
										"src": "557:7:3"
									},
									"id": 1391,
									"nodeType": "InheritanceSpecifier",
									"src": "557:7:3"
								}
							],
							"canonicalName": "ERC1155Supply",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1389,
								"nodeType": "StructuredDocumentation",
								"src": "177:344:3",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."
							},
							"fullyImplemented": false,
							"id": 1542,
							"linearizedBaseContracts": [
								1542,
								1222,
								1557,
								1344,
								1898,
								1910,
								1874
							],
							"name": "ERC1155Supply",
							"nameLocation": "540:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1395,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "607:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1542,
									"src": "571:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1394,
										"keyType": {
											"id": 1392,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "579:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "571:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1393,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "590:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "768:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1403,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "785:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1405,
													"indexExpression": {
														"id": 1404,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "798:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "785:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1402,
												"id": 1406,
												"nodeType": "Return",
												"src": "778:23:3"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "626:66:3",
										"text": " @dev Total amount of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "706:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "726:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "718:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:12:3"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "759:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:9:3"
									},
									"scope": 1542,
									"src": "697:111:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "964:57:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1418,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "1007:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1416,
																"name": "ERC1155Supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "981:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC1155Supply_$1542_$",
																	"typeString": "type(contract ERC1155Supply)"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "981:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "981:29:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1013:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1422,
												"nodeType": "Return",
												"src": "974:40:3"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "814:82:3",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "910:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "925:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "917:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:12:3"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "958:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "958:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:6:3"
									},
									"scope": 1542,
									"src": "901:120:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1046
									],
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "1312:683:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1446,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "1349:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "1359:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "1365:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1449,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "1369:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1450,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "1374:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1451,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "1383:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1443,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1322:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1542_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1046,
														"src": "1322:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "1322:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1454,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "1403:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1419:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1411:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1455,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1411:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1411:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1403:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "1399:156:3",
												"trueBody": {
													"id": 1483,
													"nodeType": "Block",
													"src": "1423:132:3",
													"statements": [
														{
															"body": {
																"id": 1481,
																"nodeType": "Block",
																"src": "1478:67:3",
																"statements": [
																	{
																		"expression": {
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1471,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1395,
																					"src": "1496:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1475,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1472,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1434,
																						"src": "1509:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1474,
																					"indexExpression": {
																						"id": 1473,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1461,
																						"src": "1513:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1509:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1496:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1476,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1437,
																					"src": "1520:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1478,
																				"indexExpression": {
																					"id": 1477,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "1528:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1520:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1496:34:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1480,
																		"nodeType": "ExpressionStatement",
																		"src": "1496:34:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1464,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "1457:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1465,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "1461:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1461:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1457:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1482,
															"initializationExpression": {
																"assignments": [
																	1461
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1461,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1450:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 1482,
																		"src": "1442:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1460,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1442:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1463,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1454:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1442:13:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1473:3:3",
																	"subExpression": {
																		"id": 1468,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "1475:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1470,
																"nodeType": "ExpressionStatement",
																"src": "1473:3:3"
															},
															"nodeType": "ForStatement",
															"src": "1437:108:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "1569:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1583:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1575:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1486,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1575:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1575:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1569:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1539,
												"nodeType": "IfStatement",
												"src": "1565:424:3",
												"trueBody": {
													"id": 1538,
													"nodeType": "Block",
													"src": "1587:402:3",
													"statements": [
														{
															"body": {
																"id": 1536,
																"nodeType": "Block",
																"src": "1642:337:3",
																"statements": [
																	{
																		"assignments": [
																			1503
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1503,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "1668:2:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1536,
																				"src": "1660:10:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1502,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1660:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1507,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1504,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1434,
																				"src": "1673:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1506,
																			"indexExpression": {
																				"id": 1505,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "1677:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1673:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1660:19:3"
																	},
																	{
																		"assignments": [
																			1509
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1509,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "1705:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1536,
																				"src": "1697:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1508,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1697:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1513,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1510,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1437,
																				"src": "1714:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1512,
																			"indexExpression": {
																				"id": 1511,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "1722:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1714:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1697:27:3"
																	},
																	{
																		"assignments": [
																			1515
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1515,
																				"mutability": "mutable",
																				"name": "supply",
																				"nameLocation": "1750:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1536,
																				"src": "1742:14:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1514,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1742:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1519,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1516,
																				"name": "_totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "1759:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1518,
																			"indexExpression": {
																				"id": 1517,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "1772:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1759:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1742:33:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1521,
																						"name": "supply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1515,
																						"src": "1801:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1522,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1509,
																						"src": "1811:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1801:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "455243313135353a206275726e20616d6f756e74206578636565647320746f74616c537570706c79",
																					"id": 1524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1819:42:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4",
																						"typeString": "literal_string \"ERC1155: burn amount exceeds totalSupply\""
																					},
																					"value": "ERC1155: burn amount exceeds totalSupply"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4",
																						"typeString": "literal_string \"ERC1155: burn amount exceeds totalSupply\""
																					}
																				],
																				"id": 1520,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "1793:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1793:69:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1526,
																		"nodeType": "ExpressionStatement",
																		"src": "1793:69:3"
																	},
																	{
																		"id": 1535,
																		"nodeType": "UncheckedBlock",
																		"src": "1880:85:3",
																		"statements": [
																			{
																				"expression": {
																					"id": 1533,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 1527,
																							"name": "_totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1395,
																							"src": "1912:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 1529,
																						"indexExpression": {
																							"id": 1528,
																							"name": "id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1503,
																							"src": "1925:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "1912:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1532,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1530,
																							"name": "supply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1515,
																							"src": "1931:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1531,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1509,
																							"src": "1940:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1931:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1912:34:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1534,
																				"nodeType": "ExpressionStatement",
																				"src": "1912:34:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1495,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "1621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1496,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1434,
																		"src": "1625:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1625:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1621:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1537,
															"initializationExpression": {
																"assignments": [
																	1492
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1492,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1614:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 1537,
																		"src": "1606:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1491,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1606:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1494,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1606:13:3"
															},
															"loopExpression": {
																"expression": {
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1637:3:3",
																	"subExpression": {
																		"id": 1499,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1492,
																		"src": "1639:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1501,
																"nodeType": "ExpressionStatement",
																"src": "1637:3:3"
															},
															"nodeType": "ForStatement",
															"src": "1601:378:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "1027:59:3",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}."
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1100:20:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1303:8:3"
									},
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1138:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1130:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1164:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1156:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1186:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1178:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1215:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1198:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1198:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1433,
													"nodeType": "ArrayTypeName",
													"src": "1198:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1245:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1228:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1436,
													"nodeType": "ArrayTypeName",
													"src": "1228:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1275:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1262:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:165:3"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:3"
									},
									"scope": 1542,
									"src": "1091:904:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1543,
							"src": "522:1475:3",
							"usedErrors": []
						}
					],
					"src": "126:1872:3"
				},
				"id": 3
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC165": [
							1910
						]
					},
					"id": 1558,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:4"
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 1345,
							"src": "142:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1547,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "397:8:4"
									},
									"id": 1548,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:4"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1546,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:4",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1557,
							"linearizedBaseContracts": [
								1557,
								1344,
								1910
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:4",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "622:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:4"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "657:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:4"
									},
									"scope": 1557,
									"src": "609:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1558,
							"src": "364:310:4",
							"usedErrors": []
						}
					],
					"src": "117:558:4"
				},
				"id": 4
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1852
						]
					},
					"id": 1853,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1559,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1560,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1852,
							"linearizedBaseContracts": [
								1852
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1568,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1573,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 1852,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1586,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1584,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1589,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													1595,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1594,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1602,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1596,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1598,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1580,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 1852,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "3555:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1620,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "3585:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1621,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "3593:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1619,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1626,
															1646
														],
														"referencedDeclaration": 1646,
														"src": "3572:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1624,
												"nodeType": "Return",
												"src": "3565:67:5"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 1852,
									"src": "3466:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "4008:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "4055:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1642,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "4064:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1638,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1666,
															1716
														],
														"referencedDeclaration": 1716,
														"src": "4025:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1644,
												"nodeType": "Return",
												"src": "4018:59:5"
											}
										]
									},
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:5"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "3994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:5"
									},
									"scope": 1852,
									"src": "3861:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1665,
										"nodeType": "Block",
										"src": "4589:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1659,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "4628:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1660,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "4636:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1661,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "4642:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1658,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1666,
															1716
														],
														"referencedDeclaration": 1716,
														"src": "4606:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1664,
												"nodeType": "Return",
												"src": "4599:94:5"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4486:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4510:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:5"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "4575:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:5"
									},
									"scope": 1852,
									"src": "4446:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "5127:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1683,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1852",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1681,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1686,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "5170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1693,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "5247:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1692,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "5236:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:5"
											},
											{
												"assignments": [
													1699,
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1699,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "5300:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1698,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "5314:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1700,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"id": 1706,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "5367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1702,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "5341:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1704,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "5360:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "5406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1711,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "5415:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1712,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "5427:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1709,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "5389:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1714,
												"nodeType": "Return",
												"src": "5382:58:5"
											}
										]
									},
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "4988:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5012:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5039:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5062:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:5"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "5113:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:5"
									},
									"scope": 1852,
									"src": "4948:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "5724:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "5760:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "5768:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1726,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1733,
															1768
														],
														"referencedDeclaration": 1768,
														"src": "5741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1731,
												"nodeType": "Return",
												"src": "5734:80:5"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5668:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:5"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "5710:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:5"
									},
									"scope": 1852,
									"src": "5624:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "6163:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1747,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "6192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1746,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "6181:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:5"
											},
											{
												"assignments": [
													1753,
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "6252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1752,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1767,
														"src": "6266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1754,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"arguments": [
														{
															"id": 1758,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "6311:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1756,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "6293:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1762,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "6350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1763,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "6359:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1764,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "6371:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1761,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "6333:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1744,
												"id": 1766,
												"nodeType": "Return",
												"src": "6326:58:5"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6042:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6066:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6093:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:5"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "6149:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:5"
									},
									"scope": 1852,
									"src": "6005:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "6667:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "6705:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1780,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "6713:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1778,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1785,
															1820
														],
														"referencedDeclaration": 1820,
														"src": "6684:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1777,
												"id": 1783,
												"nodeType": "Return",
												"src": "6677:84:5"
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6600:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:5"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "6653:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:5"
									},
									"scope": 1852,
									"src": "6570:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "7109:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1799,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "7138:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1798,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "7127:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:5"
											},
											{
												"assignments": [
													1805,
													1807
												],
												"declarations": [
													{
														"constant": false,
														"id": 1805,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1819,
														"src": "7200:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1804,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1807,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1819,
														"src": "7214:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1806,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1812,
												"initialValue": {
													"arguments": [
														{
															"id": 1810,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "7261:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1808,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "7241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1814,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "7300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1815,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "7309:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1816,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "7321:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1813,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "7283:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1818,
												"nodeType": "Return",
												"src": "7276:58:5"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "6993:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "7017:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "7044:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:5"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "7095:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:5"
									},
									"scope": 1852,
									"src": "6954:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "7721:532:5",
										"statements": [
											{
												"condition": {
													"id": 1832,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1823,
													"src": "7735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1848,
													"nodeType": "Block",
													"src": "7792:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1836,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "7876:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1846,
																"nodeType": "Block",
																"src": "8184:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1843,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1827,
																					"src": "8209:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1842,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1845,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:5"
																	}
																]
															},
															"id": 1847,
															"nodeType": "IfStatement",
															"src": "7872:365:5",
															"trueBody": {
																"id": 1841,
																"nodeType": "Block",
																"src": "7899:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1825,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1825,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1840,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1849,
												"nodeType": "IfStatement",
												"src": "7731:516:5",
												"trueBody": {
													"id": 1835,
													"nodeType": "Block",
													"src": "7744:42:5",
													"statements": [
														{
															"expression": {
																"id": 1833,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "7765:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1831,
															"id": 1834,
															"nodeType": "Return",
															"src": "7758:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7596:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7618:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7651:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1826,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:5"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7707:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:5"
									},
									"scope": 1852,
									"src": "7561:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1853,
							"src": "194:8061:5",
							"usedErrors": []
						}
					],
					"src": "101:8155:5"
				},
				"id": 5
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1874
						]
					},
					"id": 1875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1854,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1855,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1874,
							"linearizedBaseContracts": [
								1874
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1860,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1862,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1874,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1869,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1871,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1874,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1875,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1898
						],
						"IERC165": [
							1910
						]
					},
					"id": 1899,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1877,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1899,
							"sourceUnit": 1911,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1879,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1910,
										"src": "754:7:7"
									},
									"id": 1880,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1878,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1898,
							"linearizedBaseContracts": [
								1898,
								1910
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1909
									],
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1889,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1891,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1910_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1910_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1890,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1910",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1888,
												"id": 1895,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1885,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1882,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1898,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1899,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1910
						]
					},
					"id": 1911,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1900,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1901,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1910,
							"linearizedBaseContracts": [
								1910
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1903,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1910,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1911,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"azero-swap-contracts/contracts/szERC1155.sol": {
				"ast": {
					"absolutePath": "azero-swap-contracts/contracts/szERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1852
						],
						"Context": [
							1874
						],
						"ERC1155": [
							1222
						],
						"ERC1155Supply": [
							1542
						],
						"ERC165": [
							1898
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1557
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1910
						],
						"szERC1155": [
							1955
						]
					},
					"id": 1956,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"absolutePath": "azero-swap-contracts/contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"file": "./openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"id": 1913,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1956,
							"sourceUnit": 1543,
							"src": "63:93:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1914,
										"name": "ERC1155Supply",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1542,
										"src": "180:13:9"
									},
									"id": 1915,
									"nodeType": "InheritanceSpecifier",
									"src": "180:13:9"
								}
							],
							"canonicalName": "szERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1955,
							"linearizedBaseContracts": [
								1955,
								1542,
								1222,
								1557,
								1344,
								1898,
								1910,
								1874
							],
							"name": "szERC1155",
							"nameLocation": "167:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1918,
									"mutability": "mutable",
									"name": "contractName",
									"nameLocation": "208:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "201:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1916,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "201:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "537761705a65726f",
										"id": 1917,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cd9804306e6dbf010cdd6037c7ae27eec370dcee1edc47ef71d97e73568084a5",
											"typeString": "literal_string \"SwapZero\""
										},
										"value": "SwapZero"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1921,
									"mutability": "mutable",
									"name": "contractSymbol",
									"nameLocation": "246:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "239:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1919,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "239:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "53575a",
										"id": 1920,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "263:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1be581ac0cad8a93315d85db963a3a6e5e259c06be748669da4a17d7b5708d58",
											"typeString": "literal_string \"SWZ\""
										},
										"value": "SWZ"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1923,
									"mutability": "mutable",
									"name": "urlPrefix",
									"nameLocation": "281:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "274:16:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1922,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "274:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "336:7:9",
										"statements": []
									},
									"id": 1930,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "327:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 1927,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1925,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1222,
												"src": "319:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "319:11:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "308:2:9"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:0:9"
									},
									"scope": 1955,
									"src": "297:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "431:36:9",
										"statements": [
											{
												"expression": {
													"id": 1935,
													"name": "contractName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1918,
													"src": "448:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1936,
												"nodeType": "Return",
												"src": "441:19:9"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "358:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:2:9"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "412:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1932,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "412:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:15:9"
									},
									"scope": 1955,
									"src": "349:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "557:38:9",
										"statements": [
											{
												"expression": {
													"id": 1943,
													"name": "contractSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1921,
													"src": "574:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1944,
												"nodeType": "Return",
												"src": "567:21:9"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "482:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:9"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "538:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1940,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:9"
									},
									"scope": 1955,
									"src": "473:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "681:26:9",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "698:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1950,
												"id": 1952,
												"nodeType": "Return",
												"src": "691:9:9"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "610:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "618:2:9"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "668:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:9:9"
									},
									"scope": 1955,
									"src": "601:106:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1956,
							"src": "158:551:9",
							"usedErrors": []
						}
					],
					"src": "37:673:9"
				},
				"id": 9
			}
		}
	}
}